<?xml version="1.0"?>
<doc>
<assembly>
<name>
SMRUCC.genomics.Core
</name>
</assembly>
<members>
<member name="T:SMRUCC.genomics.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.br08201">
<summary>
  Looks up a localized string similar to +E	Reaction
#&lt;h2&gt;&lt;a href=&quot;/kegg/kegg2.html&quot;&gt;&lt;img src=&quot;/Fig/bget/kegg3.gif&quot; align=&quot;middle&quot; border=0&gt;&lt;/a&gt;&amp;nbsp; Enzymatic Reactions&lt;/h2&gt;
!
A&lt;b&gt;1. Oxidoreductase reactions&lt;/b&gt;
B  1.1  Acting on the CH-OH group of donors
C    1.1.1  With NAD+ or NADP+ as acceptor
D      1.1.1.1
E        R00623  Primary alcohol + NAD+ &lt;=&gt; Aldehyde + NADH + H+
E        R00624  Secondary alcohol + NAD+ &lt;=&gt; Ketone + NADH + H+
E        R00754  Ethanol + NAD+ &lt;=&gt; Acetaldehyde + NADH + H+
E        R02124  Retinol + NAD+ &lt;=&gt; Retinal +  [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.br08202">
<summary>
  Looks up a localized string similar to +D	Reaction	Substrate	Product	Substrate2	Product2
%&lt;style type=&quot;text/css&quot;&gt;&lt;!--#grid{table-layout:fixed;font-family:monospace;position:relative;color:black;width:1400px;}.col1{position:relative;background:white;z-index:1;overflow:hidden;width:200px;}.col2{position:relative;background:white;z-index:2;padding-left:10px;overflow:hidden;width:300px;}.col3{position:relative;background:white;z-index:3;padding-left:10px;overflow:hidden;width:300px;}.col4{position:relative;background:white;z-index:2;padding-left:10p [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.br08203">
<summary>
  Looks up a localized string similar to +B	Glycosyltransferase reaction
#&lt;h2&gt;&lt;a href=&quot;/kegg/kegg2.html&quot;&gt;&lt;img src=&quot;/Fig/bget/kegg3.gif&quot; align=&quot;middle&quot; border=0&gt;&lt;/a&gt; &amp;nbsp; Glycosyltransferase Reactions&lt;/h2&gt;
!
A&lt;b&gt;Glucosyltransferase reactions&lt;/b&gt;
B  R06264  Glc a1-2 Glc [KO:K03850] [PATH:rn00510]
B  R03118  Glc a1-3 Glc [KO:K00706] [PATH:rn00500]
B  R06263  Glc a1-3 Glc [KO:K03849] [PATH:rn00510]
B  R00292  Glc a1-4 Glc [KO:K00693] [PATH:rn00500]
B  R06184  Glc a1-6 Glc
B  R06018  Glc b1-3 Glc
B  R01994  Glc a1-2 Gal [KO:K03276] [PATH:rn00540]
B   [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.br08204">
<summary>
  Looks up a localized string similar to +E	RClass
#&lt;h2&gt;&lt;a href=&quot;/kegg/kegg2.html&quot;&gt;&lt;img src=&quot;/Fig/bget/kegg3.gif&quot; align=&quot;middle&quot; border=0&gt;&lt;/a&gt;&amp;nbsp; Reaction Class&lt;/h2&gt;
!
A&lt;b&gt;1. Oxidoreductase reactions&lt;/b&gt;
B  1.1  Acting on the CH-OH group of donors
C    1.1.1  With NAD+ or NADP+ as acceptor
D      1.1.1.1
E        RC00050
E        RC00087
E        RC00088
E        RC00099
E        RC00116
E        RC00649
E        RC00955
E        RC01734
E        RC02273
D      1.1.1.2
E        RC00050
E        RC00087
E        RC00088
E     [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.br08610">
<summary>
  Looks up a localized string similar to +U
#&lt;h2&gt;&lt;a href=&quot;/kegg/kegg2.html&quot;&gt;&lt;img src=&quot;/Fig/bget/kegg3.gif&quot; align=&quot;middle&quot; border=0&gt;&lt;/a&gt;&amp;nbsp; KEGG Organisms in the NCBI Taxonomy&lt;/h2&gt;
#&lt;!---
#ENTRY       br08610
#DEFINITION  KEGG Organisms in the NCBI taxonomy
#---&gt;
!
AEukaryota
B  Metazoa
C    Chordata
D      Craniata
E        Vertebrata
F          Euteleostomi
G            Mammalia
H              Eutheria
I                Euarchontoglires
J                  Primates
K                    Haplorrhini
L                      Catarrhini
M              [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.br08901">
<summary>
  Looks up a localized string similar to +C	Map number
#&lt;h2&gt;&lt;a href=&quot;/kegg/kegg2.html&quot;&gt;&lt;img src=&quot;/Fig/bget/kegg3.gif&quot; align=&quot;middle&quot; border=0&gt;&lt;/a&gt;&amp;nbsp; KEGG Pathway Maps&lt;/h2&gt;
!
A&lt;b&gt;Metabolism&lt;/b&gt;
B  Global and overview maps
C    01100  Metabolic pathways
C    01110  Biosynthesis of secondary metabolites
C    01120  Microbial metabolism in diverse environments
C    01130  Biosynthesis of antibiotics
C    01200  Carbon metabolism
C    01210  2-Oxocarboxylic acid metabolism
C    01212  Fatty acid metabolism
C    01230  Biosynthesis of am [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.ko00000">
<summary>
  Looks up a localized string similar to +D	KO
#&lt;h2&gt;&lt;a href=&quot;/kegg/kegg2.html&quot;&gt;&lt;img src=&quot;/Fig/bget/kegg3.gif&quot; align=&quot;middle&quot; border=0&gt;&lt;/a&gt; &amp;nbsp; KEGG Orthology (KO) - All Categories&lt;/h2&gt;
!
A09100 Metabolism
B
B  09101 Carbohydrate metabolism
C    00010 Glycolysis / Gluconeogenesis [PATH:ko00010]
D      K00844  HK; hexokinase
D      K12407  GCK; glucokinase
D      K00845  glk; glucokinase
D      K01810  GPI, pgi; glucose-6-phosphate isomerase
D      K06859  pgi1; glucose-6-phosphate isomerase, archaeal
D      K13810  tal-pgi; transaldolase / gluco [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.ko00001">
<summary>
  Looks up a localized string similar to +D	KO
#&lt;h2&gt;&lt;a href=&quot;/kegg/kegg2.html&quot;&gt;&lt;img src=&quot;/Fig/bget/kegg3.gif&quot; align=&quot;middle&quot; border=0&gt;&lt;/a&gt; &amp;nbsp; KEGG Orthology (KO)&lt;/h2&gt;
!
A09100 Metabolism
B
B  09101 Carbohydrate metabolism
C    00010 Glycolysis / Gluconeogenesis [PATH:ko00010]
D      K00844  HK; hexokinase [EC:2.7.1.1]
D      K12407  GCK; glucokinase [EC:2.7.1.2]
D      K00845  glk; glucokinase [EC:2.7.1.2]
D      K01810  GPI, pgi; glucose-6-phosphate isomerase [EC:5.3.1.9]
D      K06859  pgi1; glucose-6-phosphate isomerase, archaeal [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.ko00002_keg">
<summary>
  Looks up a localized string similar to +E	Module
#&lt;h2&gt;&lt;a href=&quot;/kegg/kegg2.html&quot;&gt;&lt;img src=&quot;/Fig/bget/kegg3.gif&quot; align=&quot;middle&quot; border=0&gt;&lt;/a&gt;&amp;nbsp; KEGG Modules&lt;/h2&gt;
!
A&lt;b&gt;Pathway module&lt;/b&gt;
B
B  &lt;b&gt;Energy metabolism&lt;/b&gt;
C    Carbon fixation
D      M00165  Reductive pentose phosphate cycle (Calvin cycle) [PATH:map00710 map01200 map01100 map01120]
E        K00855  PRK, prkB; phosphoribulokinase [EC:2.7.1.19]
E        K01601  rbcL; ribulose-bisphosphate carboxylase large chain [EC:4.1.1.39]
E        K01602  rbcS; ribulose-bisphosphate carboxylase s [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.MiST2">
<summary>
  Looks up a localized string similar to Pfam AccessionId,Signaling domain ID,Domain name,Kind,Function,Marker
PF01339,CheB_methylest,CheB_methylest,chemotaxis,Chemotaxis,Yes
PF04509,CheC,CheC,chemotaxis,Chemotaxis,Yes
PF03975,CheD,CheD,chemotaxis,Chemotaxis,Yes
PF01739,CheR,CheR,chemotaxis,Chemotaxis,Yes
PF03705,CheR_N,CheR_N,chemotaxis,Chemotaxis,Yes
PF01584,CheW,CheW,chemotaxis,Chemotaxis,Yes
PF09078,CheY-binding,CheY-binding,chemotaxis,Chemotaxis,Yes
PF04344,CheZ,CheZ,chemotaxis,Chemotaxis,Yes
PF02895,H-kinase_dim,H-kinase_dim,chemotaxis,Chemo [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.String1">
<summary>
  Looks up a localized string similar to Test.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_1">
<summary>
  Looks up a localized string similar to transl_table=1

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA S Ser      TAA * Ter      TGA * Ter  
TTG L Leu i    TCG S Ser      TAG * Ter      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu i    CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile      ACT T Thr      AAT N As [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_10">
<summary>
  Looks up a localized string similar to transl_table=10

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA S Ser      TAA * Ter      TGA C Cys  
TTG L Leu      TCG S Ser      TAG * Ter      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu      CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile      ACT T Thr      AAT N A [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_11">
<summary>
  Looks up a localized string similar to transl_table=11

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA S Ser      TAA * Ter      TGA * Ter  
TTG L Leu i    TCG S Ser      TAG * Ter      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu i    CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile i    ACT T Thr      AAT N A [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_12">
<summary>
  Looks up a localized string similar to transl_table=12

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA S Ser      TAA * Ter      TGA * Ter  
TTG L Leu      TCG S Ser      TAG * Ter      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG S Ser i    CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile      ACT T Thr      AAT N A [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_13">
<summary>
  Looks up a localized string similar to transl_table=13

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA S Ser      TAA * Ter      TGA W Trp  
TTG L Leu i    TCG S Ser      TAG * Ter      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu      CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile      ACT T Thr      AAT N A [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_14">
<summary>
  Looks up a localized string similar to transl_table=14

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA S Ser      TAA Y Tyr      TGA W Trp  
TTG L Leu      TCG S Ser      TAG * Ter      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu      CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile      ACT T Thr      AAT N A [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_16">
<summary>
  Looks up a localized string similar to transl_table=16

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA S Ser      TAA * Ter      TGA * Ter  
TTG L Leu      TCG S Ser      TAG L Leu      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu      CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile      ACT T Thr      AAT N A [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_2">
<summary>
  Looks up a localized string similar to transl_table=2

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA S Ser      TAA * Ter      TGA W Trp  
TTG L Leu      TCG S Ser      TAG * Ter      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu      CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile i    ACT T Thr      AAT N As [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_21">
<summary>
  Looks up a localized string similar to transl_table=21

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA S Ser      TAA * Ter      TGA W Trp  
TTG L Leu      TCG S Ser      TAG * Ter      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu      CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile      ACT T Thr      AAT N A [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_22">
<summary>
  Looks up a localized string similar to transl_table=22

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA * Ter      TAA * Ter      TGA * Ter  
TTG L Leu      TCG S Ser      TAG L Leu      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu      CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile      ACT T Thr      AAT N A [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_23">
<summary>
  Looks up a localized string similar to transl_table=23

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA * Ter      TCA S Ser      TAA * Ter      TGA * Ter  
TTG L Leu      TCG S Ser      TAG * Ter      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu      CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile i    ACT T Thr      AAT N A [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_24">
<summary>
  Looks up a localized string similar to transl_table=24

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA S Ser      TAA * Ter      TGA W Trp  
TTG L Leu i    TCG S Ser      TAG * Ter      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu i    CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile      ACT T Thr      AAT N A [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_25">
<summary>
  Looks up a localized string similar to transl_table=25

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA S Ser      TAA * Ter      TGA G Gly  
TTG L Leu i    TCG S Ser      TAG * Ter      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu      CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile      ACT T Thr      AAT N A [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_3">
<summary>
  Looks up a localized string similar to transl_table=3

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA S Ser      TAA * Ter      TGA W Trp  
TTG L Leu      TCG S Ser      TAG * Ter      TGG W Trp  

CTT T Thr      CCT P Pro      CAT H His      CGT R Arg  
CTC T Thr      CCC P Pro      CAC H His      CGC R Arg  
CTA T Thr      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG T Thr      CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile      ACT T Thr      AAT N As [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_4">
<summary>
  Looks up a localized string similar to transl_table=4

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu i    TCA S Ser      TAA * Ter      TGA W Trp  
TTG L Leu i    TCG S Ser      TAG * Ter      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu i    CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile i    ACT T Thr      AAT N As [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_5">
<summary>
  Looks up a localized string similar to transl_table=5

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA S Ser      TAA * Ter      TGA W Trp  
TTG L Leu i    TCG S Ser      TAG * Ter      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu      CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile i    ACT T Thr      AAT N As [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_6">
<summary>
  Looks up a localized string similar to transl_table=6

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA S Ser      TAA Q Gln      TGA * Ter  
TTG L Leu      TCG S Ser      TAG Q Gln      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu      CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile      ACT T Thr      AAT N As [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="P:SMRUCC.genomics.My.Resources.Resources.transl_table_9">
<summary>
  Looks up a localized string similar to transl_table=9

TTT F Phe      TCT S Ser      TAT Y Tyr      TGT C Cys  
TTC F Phe      TCC S Ser      TAC Y Tyr      TGC C Cys  
TTA L Leu      TCA S Ser      TAA * Ter      TGA W Trp  
TTG L Leu      TCG S Ser      TAG * Ter      TGG W Trp  

CTT L Leu      CCT P Pro      CAT H His      CGT R Arg  
CTC L Leu      CCC P Pro      CAC H His      CGC R Arg  
CTA L Leu      CCA P Pro      CAA Q Gln      CGA R Arg  
CTG L Leu      CCG P Pro      CAG Q Gln      CGG R Arg  

ATT I Ile      ACT T Thr      AAT N As [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.Bac_sRNA.org.Interaction">
 <summary>
 <see cref="P:SMRUCC.genomics.Assembly.Bac_sRNA.org.Interaction.sRNAid"/> --> <see cref="P:SMRUCC.genomics.Assembly.Bac_sRNA.org.Interaction.TargetName"/>
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.Bac_sRNA.org.Interaction.Organism">
 <summary>
 The bacterial organism species name.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Bac_sRNA.org.Interaction.Name">
 <summary>
 srna_name
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Bac_sRNA.org.Interaction.TargetName">
 <summary>
 siRNA所作用的目标基因的基因名或者基因号，这个属性总是不会空的
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Bac_sRNA.org.Interaction.Reference">
 <summary>
 Reference (PMID)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.Bac_sRNA.org.Sequence.#ctor(System.String,System.String,System.String,System.String,SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation)">
 <summary>
 
 </summary>
 <param name="sid"></param>
 <param name="org"></param>
 <param name="name"></param>
 <param name="seq">The fasta sequence data</param>
 <param name="loci"></param>
</member>
<member name="T:SMRUCC.genomics.Assembly.DOMINE.Tables.Interaction">
 <summary>
 
 </summary>
 <remarks>
 CREATE TABLE INTERACTION
 (
 Domain1 char(7),
 Domain2 char(7),
 iPfam boolean,
 3did boolean,
 ME boolean,
 RCDP boolean,
 Pvalue boolean,
 Fusion boolean,
 DPEA boolean,
 PE boolean,
 GPE boolean,
 DIPD boolean,
 RDFF boolean,
 KGIDDI boolean,
 INSITE boolean,
 DomainGA boolean,
 PP boolean,
 PredictionConfidence char(2),
 SameGO boolean,
 PRIMARY KEY (Domain1, Domain2),
 FOREIGN KEY (Domain1) references PFAM(DomainAcc),
 FOREIGN KEY (DOmain2) references PFAM(DomainAcc)
 );
 </remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.DOMINE.Tables.Pfam">
 <summary>
 
 </summary>
 <remarks>
 CREATE TABLE PFAM
 (
 DomainAcc char(7) PRIMARY KEY,
 DomainId varchar(256),
 DomainDesc varchar(256),
 InterproId char(10)
 );
 </remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.DOMINE.Tables.Go">
 <summary>
 
 </summary>
 <remarks>
 CREATE TABLE GO
 (
 GoTerm char(10) PRIMARY KEY,
 Ontology varchar(256),
 GoDesc varchar(256)
 );
 </remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.DOMINE.Tables.PGMap">
 <summary>
 
 </summary>
 <remarks>
 CREATE TABLE PGMAP
 (
 DomainAcc char(7),
 GoTerm char(10),
 PRIMARY KEY (DomainAcc, GoTerm),
 FOREIGN KEY (DomainAcc) references PFAM(DomainAcc),
 FOREIGN KEY (GoTerm) references GO(GoTerm)
 );
 </remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.DOOR.DOOR_IO">
 <summary>
 Parser and writer
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.DOOR_IO.csv(SMRUCC.genomics.Assembly.DOOR.DOOR,System.Boolean)">
 <summary>
 
 </summary>
 <param name="DOOR"></param>
 <param name="trim">是否移除仅含有一个基因的操纵子对象？默认不进行移除</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.DOOR_IO.Imports(System.String[],System.String,System.Boolean)">
 <summary>
 解析已经读取的文本行为DOOR操纵子集合对象
 </summary>
 <param name="data"></param>
 <param name="path"></param>
 <returns></returns>
</member>
<member name="F:SMRUCC.genomics.Assembly.DOOR.DOOR_IO.DOOR_title">
 <summary>
 文本的标题行
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.DOOR.DOOR_API">
 <summary>
 We present a database DOOR (Database for prOkaryotic OpeRons) containing computationally predicted operons of all the sequenced prokaryotic genomes. 
 All the operons In DOOR are predicted Using our own prediction program, which was ranked To be the best among 14 operon prediction programs by a recent independent review. 
 Currently, the DOOR database contains operons for 675 prokaryotic genomes, And supports a number of search capabilities to facilitate easy access And utilization of the information stored in it. 
 
 + (1) Querying the database: the database provides a search capability For a user To find desired operons And associated information through multiple querying methods. 
 + (2) Searching For similar operons: the database provides a search capability For a user To find operons that have similar composition And Structure To a query operon. 
 + (3) Prediction Of cis-regulatory motifs: the database provides a capability For motif identification In the promoter regions Of a user-specified group Of possibly coregulated operons, Using motif-finding tools. 
 + (4) Operons For RNA genes: the database includes operons For RNA genes. (5) OperonWiki: the database provides a wiki page (OperonWiki) To facilitate interactions between users And the developer Of the database. 
 
 We believe that DOOR provides a useful resource To many biologists working On bacteria And archaea, which can be accessed at http://csbl1.bmb.uga.edu/OperonDB.
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.DOOR_API.PTT2DOOR(SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT)">
 <summary>
 将NCBI之中的PTT蛋白表转换为DOOR文件
 </summary>
 <param name="PTT"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.DOOR_API.GetOprFirst(System.String,SMRUCC.genomics.Assembly.DOOR.DOOR)">
 <summary>
 Gets the first gene in the operon of the struct gene that inputs from the parameter.
 </summary>
 <param name="struct">操纵子里面的某一个结构基因成员的基因编号</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.DOOR_API.CreateOperonView(SMRUCC.genomics.Assembly.DOOR.DOOR)">
 <summary>
 创建操纵子对象的集合视图: ``{OperonID, GeneId()}()``
 </summary>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.DOOR_API.Load(System.String)">
 <summary>
 读取DOOR数据库文件
 </summary>
 <param name="path"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.DOOR_API.LoadDocument(System.String[],System.String)">
 <summary>
 从文档之中的数据行之中加载数据
 </summary>
 <param name="lines"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.DOOR_API.SaveFile(SMRUCC.genomics.Assembly.DOOR.Operon[],System.String)">
 <summary>
 将操纵子模型数据保存为DOOR数据库格式
 </summary>
 <param name="data"></param>
 <param name="Path"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.DOOR.DOOR">
 <summary>
 ###### DOOR: Database of prOkaryotic OpeRons.
 
 Door operon prediction data.(Door操纵子预测数据)
 </summary>
 <remarks></remarks>
 
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.DOOR.Genes">
 <summary>
 在文件之中，是一个表格的形式来表示整个文件的，这个属性表示文件之中的所有行
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.DOOR.DOOROperonView">
 <summary>
 按照操纵子编号进行分组得到的operon模型的集合
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.DOOR.GetGene(System.String)">
 <summary>
 查找不到目标基因对象则会返回空值
 </summary>
 <param name="locusId">基因编号</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.DOOR.IsOprPromoter(System.String)">
 <summary>
 查看目标基因是否是其所处的操纵子的第一个基因
 </summary>
 <param name="locus">目标基因的基因编号</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.DOOR.HaveGene(System.String)">
 <summary>
 是否能够在存在的基因数据之中找得到目标基因对象？
 </summary>
 <param name="locus_tag"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.DOOR.SameOperon(System.String,System.String)">
 <summary>
 根据基因编号来判断这两个基因是否是处在相同的一个操纵子之中的
 </summary>
 <param name="locus_a"></param>
 <param name="locus_b"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.DOOR.Select(System.String)">
 <summary>
 根据操纵子编号来获取改操纵子之中的一系列的结构基因
 </summary>
 <param name="operonID"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.DOOR.GetOperon(System.String)">
 <summary>
 Gets the operon object where the gene is located. 
 </summary>
 <param name="locusId">The gene's locus_tag</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.DOOR.Export(System.String,System.Boolean)">
 <summary>
 导出为一个Csv格式的文件
 </summary>
 <param name="path"></param>
 <param name="trim">是否将仅有一个基因的Operon对象进行去除</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.DOOR.Operon">
 <summary>
 <see cref="P:SMRUCC.genomics.Assembly.DOOR.Operon.Genes">操纵子中的基因</see>在构造函数之中已经进行过按照转录方向排序操作了的
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.Operon.Key">
 <summary>
 OperonId value.(操纵子的Door编号)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.Operon.OperonID">
 <summary>
 Door数据库之中的操纵子编号
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.Operon.Value">
 <summary>
 Structure genes.
 (这个操纵子对象之中的结构基因，请注意<see cref="P:SMRUCC.genomics.Assembly.DOOR.Operon.Genes"/>属性和这个属性一样，都是可以返回当前的这个Operon里面的所有的结构基因，
 只不过本属性是没有经过排序的，而<see cref="P:SMRUCC.genomics.Assembly.DOOR.Operon.Genes"/>属性里面的对象都是按照基因组上下文的顺序进行排序操作了的)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.DOOR.Operon.SortedIdList">
 <summary>
 这个列表的<see cref="P:SMRUCC.genomics.Assembly.DOOR.OperonGene.Synonym">对象</see>顺序与<see cref="P:Microsoft.VisualBasic.ComponentModel.Collection.Generic.KeyValuePairObject`2.Value"></see>之中的列表对象的顺序一致
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.Operon.TestGuid">
 <summary>
 在比较差异的时候，Operon编号没有意义，再这里使用操纵子内部的基因的编号的字符串来进行相互比较，基因号进行升序排序
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.Operon.lstLocus">
 <summary>
 这个Operon里面的所有的结构基因的基因号的集合
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.Operon.GetLast(System.String)">
 <summary>
 依照Operon的方向，获取<paramref name="GeneId">目标基因对象</paramref>之后的所有基因
 </summary>
 <param name="GeneId">假若本参数值为操纵子的<see cref="P:SMRUCC.genomics.Assembly.DOOR.Operon.InitialX">启动子基因</see>的话，则会返回整个操纵子，
 反之为操纵子之中的最后一个基因的话，则返回最后一个基因，
 若为中间的一个基因的话，则返回该基因以及其后面的所有基因，“后面”是依照<see cref="P:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.Strand">转录方向</see>来判定的</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.Operon.InitialX">
 <summary>
 Get the operon initial structure (promoter) gene base on its transcript direction.
 (根据转录方向来选取目标操纵子的启动子基因，如果转录方向为正向，则取最前面的基因，反之取最后面的基因)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.Operon.LastGene">
 <summary>
 获取本操纵子对象之中的最后一个基因
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.Operon.IndexOf(System.String)">
 <summary>
 查看目标基因是否是本操纵子之中的结构基因
 </summary>
 <param name="GeneId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.Operon.ConvertToCsvData">
 <summary>
 将目标Door操纵子对象转换为Csv格式的数据
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.Operon.NumOfGenes">
 <summary>
 这个操纵子里面的结构基因的数目
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.Operon.HaveGene(System.String)">
 <summary>
 Has the gene with specific locusId in this operon?
 </summary>
 <param name="locusId"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.Operon.Genes">
 <summary>
 这个属性会返回本Operon里面的一组基因，基因的位置和其在基因组上面的位置相关，并且与链的方向相关
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.DOOR.OperonGene">
 <summary>
 Door操纵子之中的一个基因对象的数据
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.OperonGene.OperonID">
 <summary>
 DOOR数据库之中的操纵子编号
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.OperonGene.#ctor(SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief)">
 <summary>
 将PTT文件之中的一个基因模型转换为DOOR数据库之中的一个基因模型
 </summary>
 <param name="g"></param>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.OperonGene.TryParse(System.String)">
 <summary>
 将``opr``文件之中的一行元素解析为一个操纵子之中的基因的模型
 </summary>
 <param name="strLine">文件之中的文本行</param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.CsvModel.Operon.DoorId">
 <summary>
 本操纵子在Door数据库之中的编号
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.CsvModel.Operon.Direction">
 <summary>
 转录方向
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.CsvModel.Operon.Genes">
 <summary>
 结构基因
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.CsvModel.Operon.NumOfGenes">
 <summary>
 结构基因的数目
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.DOOR.OperonView">
 <summary>
 ``{OperonID, GeneId()}()``
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.OperonView.Select(System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 使用基因编号列表来获取目标操纵子对象的集合
 </summary>
 <param name="listID"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.DOOR.OperonView.HaveOperon(System.String)">
 <summary>
 目标操纵子对象是否存在于这个基因组之中？？
 </summary>
 <param name="operonID"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.DOOR.OperonView.GetOperon(System.String)">
 <summary>
 从这里得到指定DOOR编号的操纵子对象
 </summary>
 <param name="DOOR_id"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.DATA">
 <summary>
 Chebi <see cref="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity"/> model extensions
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.DATA.ScanLoad(System.String)">
 <summary>
 
 </summary>
 <param name="repository$">``*.xml`` chebi online data cache</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.DATA.BuildEntitysFromTsv(System.String)">
 <summary>
 读取从ChEBI的ftp服务器之上所下载的tsv数据表格文件然后通过链接构建出完整的分子数据模型<see cref="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity"/>.
 </summary>
 <param name="DIR$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.DATA.LoadNameOfDatabaseFromTsv(System.String)">
 <summary>
 从ftp文件夹之中加载数据然后构建chebi内存数据库
 </summary>
 <param name="DIR$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.DATA.SystematicName(SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity)">
 <summary>
 Using the **IUPAC** name as the ``Systematic Name``.
 </summary>
 <param name="chebi"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.DATA.GetXrefID(SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity)">
 <summary>
 See the constant string values in <see cref="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.RegistryNumbers"/> or <see cref="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.DATA.AccessionTypeNames"/>
 </summary>
 <param name="chebi"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.DATA.GetXrefIDByType(SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity)">
 <summary>
 See the constant string values in <see cref="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.RegistryNumbers"/> or <see cref="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.DATA.AccessionTypeNames"/>
 </summary>
 <param name="chebi"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.DATA.RegistryNumbersSearchModel(SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity)">
 <summary>
 这个函数会将<see cref="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity.RegistryNumbers"/>和<see cref="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity.DatabaseLinks"/>合并在一个
 </summary>
 <param name="chebi"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes">
 <summary>
 Chebi accession types, table key name in <see cref="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.RegistryNumbers"/>
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.KEGG_Compound">
 <summary>
 KEGG COMPOUND accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.CAS_Registry">
 <summary>
 CAS Registry Number
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.UM_BBD_compID">
 <summary>
 UM-BBD compID
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.Beilstein_Registry">
 <summary>
 Beilstein Registry Number
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.LIPID_MAPS_instance">
 <summary>
 LIPID MAPS instance accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.KEGG_Drug">
 <summary>
 KEGG DRUG accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.Gmelin_Registry">
 <summary>
 Gmelin Registry Number
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.LIPID_MAPS_class">
 <summary>
 LIPID MAPS class accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.PDBeChem">
 <summary>
 PDBeChem accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.KEGG_Glycan">
 <summary>
 KEGG GLYCAN accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.COMe">
 <summary>
 COMe accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.MolBase">
 <summary>
 MolBase accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.RESID">
 <summary>
 RESID accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.Reaxys_Registry">
 <summary>
 Reaxys Registry Number
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.PDB">
 <summary>
 PDB accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.DrugBank">
 <summary>
 DrugBank accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.Patent">
 <summary>
 Patent accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.WebElements">
 <summary>
 WebElements accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.PubMed">
 <summary>
 PubMed citation
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.Wikipedia">
 <summary>
 Wikipedia accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.MetaCyc">
 <summary>
 MetaCyc accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.HMDB">
 <summary>
 HMDB accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.Agricola_citation">
 <summary>
 Agricola citation
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.Chinese_Abstracts_citation">
 <summary>
 Chinese Abstracts citation
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.ChemIDplus">
 <summary>
 ChemIDplus accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.Chemspider">
 <summary>
 Chemspider accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.PubMed_Central">
 <summary>
 PubMed Central citation
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.CiteXplore">
 <summary>
 CiteXplore citation
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.KNApSAcK">
 <summary>
 KNApSAcK accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.YMDB">
 <summary>
 YMDB accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.ECMDB">
 <summary>
 ECMDB accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.SMID">
 <summary>
 SMID accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.Pesticides">
 <summary>
 Pesticides accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.LINCS">
 <summary>
 LINCS accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.Pubchem">
 <summary>
 Pubchem accession
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.ETH">
 <summary>
 ETH
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes.Drug_Central">
 <summary>
 Drug Central accession
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.NameOf">
 <summary>
 使用这个模块进行chebi的编号的匹配，
 (由于有同分异构体之类的存在，所以即使化学式或者分子质量相同，也会匹配出几种不同的化合物，
 所以<see cref="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.NameOf.MatchByFormula(System.String)"/>以及<see cref="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.NameOf.MatchByMass(System.Double,System.Double)"/>
 这两个方法应该是优先级别最低的)
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.NameOf.names">
 <summary>
 键名都是小写的
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.NameOf.chebiXrefs">
 <summary>
 ``chebi -> xrefs``
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.NameOf.formulas">
 <summary>
 因为存在同分异构体，所以这里是一对多的关系
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.NameOf.ContainsChEBIid(System.String)">
 <summary>
 目标<paramref name="chebiID"/>是否存在于这个名称mapping数据表之中
 </summary>
 <param name="chebiID$">
 ChEBI代谢物数据库编号，这里要求是纯数字的，不带有``CHEBI``前缀
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.NameOf.GetChEBINamesByID(System.String)">
 <summary>
 通过chebi编号从names数据之中查找得到名称列表
 </summary>
 <param name="chebi_ID$">单纯的数值格式的ChEBI编号</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.NameOf.MatchByName(System.String,System.Boolean)">
 <summary>
 2. 直接匹配名称(使用默认的<paramref name="fuzzy"/>=False参数)也比较精确
 </summary>
 <param name="name$"></param>
 <param name="fuzzy"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.NameOf.MatchByID(System.String,SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes,System.String@)">
 <summary>
 1. 最精确的方法
 </summary>
 <param name="ID$"></param>
 <param name="type"></param>
 <returns>
 这个函数会返回所有和目标ID能够关联上的编号列表，假若只想要得到chebi编号，
 则可以通过<paramref name="chebi"/>函数参数来获得
 </returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.NameOf.MatchByFormula(System.String)">
 <summary>
 3. 会出现一系列的同分异构体或者其他的具备有相同原子组成的化合物
 </summary>
 <param name="formula$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.NameOf.MatchByMass(System.Double,System.Double)">
 <summary>
 4. 精准度最低
 </summary>
 <param name="mass#"></param>
 <param name="deltaPPM#"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.Compound.CHEBI_ACCESSION">
 <summary>
 ``CHEBI:\d+``
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.TsvExtensions">
 <summary>
 Extension for ChEBI tsv tables entity.
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.TsvExtensions.Types``1(System.Collections.Generic.IEnumerable{``0})">
 <summary>
 Listing all types in a chebi entity object from the property <see cref="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.Tables.Entity.TYPE"/>.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="source"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.TsvExtensions.CreateProperty(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.Tables.ChemicalData})">
 <summary>
 Group the chemical data rows into group by compound id and create property value by <see cref="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.Tables.Entity.TYPE"/> value.
 </summary>
 <param name="data"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.Tables.Entity.ID">
 <summary>
 数据表之中的自增ID，无意义
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.Tables.Entity.COMPOUND_ID">
 <summary>
 ChEBI编号
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.Tables.Entity.TYPE">
 <summary>
 编号类型
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.Tables.Entity.SOURCE">
 <summary>
 数据库名称
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.Tables.ChemicalData">
 <summary>
 ``chemical_data.tsv``
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.Tables.ChemicalData.ppm(System.Double,System.Double)">
 <summary>
 分子量差值
 </summary>
 <param name="measured#"></param>
 <param name="actualValue#"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.Tables.InChI">
 <summary>
 ``chebiId_inchi.tsv``
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.Tables.Accession">
 <summary>
 Database xref dblinks.(ChEBI的ftp服务器之上的``database_accession.tsv``文件数据的解析器)
 </summary>
 <remarks>
 ftp://ftp.ebi.ac.uk/pub/databases/chebi/Flat_file_tab_delimited/
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.Tables.Accession.ACCESSION_NUMBER">
 <summary>
 在其他数据库之中的编号
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.Tables.Accession.Load(System.String,System.String)">
 <summary>
 返回的字典的键名是chebi编号
 </summary>
 <param name="path$"></param>
 <param name="type$">
 例如假若只需要KEGG代谢物的编号的话，则指定这个参数的值为``KEGG COMPOUND accession``
 这个参数为空值的话是不会进行任何过滤操作的
 </param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.TSVTables">
 <summary>
 可以使用这个对象从ChEBI的ftp文件夹下载结果之中加载相应的表数据
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.TSVTables.FileNames.#ctor(System.String)">
 <summary>
 
 </summary>
 <param name="DIR$"></param>
 <remarks>
 这个结构对象之中的这些域分别对应着ChEBI的ftp文件夹之中的每一个tsv数据表格文件，
 可以修改域名称的大小写，但是不建议修改符号或者其他的。如果需要运行于Linux环境
 之中，大小写也不建议进行修改，因为这个构造函数之中是直接通过NameOf操作符来获取
 文件名的
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.TSVTables.TsvFiles">
 <summary>
 A complete tsv file list in the chebi ftp data directory.
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.TSVTables.#ctor(System.String)">
 <summary>
 从ChEBI的ftp文件夹之中加载数据 
 </summary>
 <param name="DIR"></param>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.TSVTables.GetInChI(System.String)">
 <summary>
 加载化学结构式数据表格
 </summary>
 <param name="filename$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Database.IO.StreamProviders.Tsv.TSVTables.__lazyLoadData``1(``0[]@,System.String)">
 <summary>
 Lazy loading
 </summary>
 <typeparam name="T"></typeparam>
 <param name="fieldData"></param>
 <param name="FileName"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.EntitySearch.SearchByNameAndFormula(System.Collections.Generic.Dictionary{System.Int64,SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity},System.String,System.String,System.Boolean)">
 <summary>
 返回的结果之中的名称为chebi的数字主编号
 </summary>
 <param name="chebi"></param>
 <param name="name$">模糊查找</param>
 <param name="formula$">直接使用字符串相等</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.EntitySearch.SearchByNameEqualsAny(System.Collections.Generic.Dictionary{System.Int64,SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity},System.String)">
 <summary>
 进行<see cref="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity.chebiAsciiName"/>和他的同义词的精确匹配
 </summary>
 <param name="chebi"></param>
 <param name="name$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.EntitySearch.EnumerateNames(SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity)">
 <summary>
 枚举出这个chebi化合物之中的所有的化合物名称
 </summary>
 <param name="chebi"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.EntitySearch.NameEqualsAny(SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity,System.String)">
 <summary>
 进行不区分大小写的字符串精确匹配
 </summary>
 <param name="chebi"></param>
 <param name="name$"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.EntitySummary">
 <summary>
 物质注释信息摘要表格
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.EntitySummary.pubchem">
 <summary>
 pubchem cid
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Extensions.MainID(SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity)">
 <summary>
 Gets the numeirc chebi main ID
 </summary>
 <param name="chebi"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Extensions.FindChEBI(SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.NameOf,System.String,SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.AccessionTypes,System.Double,System.String[])">
 <summary>
 从用户所提供的有限的信息之中获取得到chebi编号结果
 </summary>
 <param name="chebi">可以使用<see cref="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.DATA.LoadNameOfDatabaseFromTsv(System.String)"/>函数来构建出数据库参数</param>
 <param name="id$"></param>
 <param name="idtype"></param>
 <param name="mass#">假设这个值是不会有大问题的</param>
 <param name="names$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Extensions.TheSameAs(SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity,System.String)">
 <summary>
 查找目标和指定的编号是否为``Secondary ChEBI IDs``关联结果
 </summary>
 <param name="compound"></param>
 <param name="chebiID$">
 可能有两种形式：
 
 带有前缀的：CHEBI:4108
 没有前缀的：4108
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.Extensions.IDlist(SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity)">
 <summary>
 这个函数会返回主ID和副ID，都是纯数字形式的编号，没有``chebi:``前缀的
 </summary>
 <param name="compound"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity">
 <summary>
 The complete entity including synonyms, database links and chemical structures.
 (ChEBI数据库之中的一个对某种代谢物的完整的描述的数据模型，
 <see cref="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.INamedValue"/>的主键为<see cref="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity.chebiId"/>主ID)
 </summary>
 <remarks>
 这个对象的XML布局是根据ChEBI的Web Services来生成的，所以为了能够正确的读取ChEBI的数据，不能够再随意修改了
 return节点之中的数据
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity.chebiId">
 <summary>
 Chebi的主ID
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.ChEBIEntity.SecondaryChEBIIds">
 <summary>
 次级编号，和主编号都代表同一样物质
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.Extensions.Compile(System.String)">
 <summary>
 将单个的chebi分子数据文件合并在一个大文件之中，方便进行数据的加载
 </summary>
 <param name="directory$"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.Formulae">
 <summary>
 分子式
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.Formulae.data">
 <summary>
 分子式字符串
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.XML.Formulae.source">
 <summary>
 分子式的数据来源
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.WebServices.WebServices">
 <summary>
 The main aim of ChEBI Web Services is to provide programmatic access 
 to the ChEBI database in order to aid our users in integrating ChEBI 
 into their applications. Web Services is an integration technology. 
 To ensure software from various sources work well together, this 
 technology is built on open standards such as Simple Object Access 
 Protocol (SOAP), a messaging protocol for transporting information, 
 Web Services Description Language (WSDL), a standard method of describing 
 Web Services and their capabilities. For the transport layer itself, 
 Web Services utilise most of the commonly available network protocols, 
 especially Hypertext Transfer Protocol (HTTP).

 ChEBI provides SOAP access To its database. If you just wish To obtain 
 light weight ontology objects you can use the Ontology Lookup Service 
 As alternative Web Services.
 
 > https://www.ebi.ac.uk/chebi/webServices.do
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.WebServices.WebServices.GetCompleteEntity(System.String)">
 <summary>
 Retrieves the complete entity including synonyms, database links and chemical structures, using the ChEBI identifier.
 </summary>
 <param name="chebiId$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.WebServices.WebServices.QueryChEBI(System.String,System.String)">
 <summary>
 查询在线数据或者读取本地的缓存数据(ChEBI的编号<paramref name="chebiID"/>参数必须为纯数字的编号参数)
 </summary>
 <param name="chebiID$">纯数字的编号，不能够带有``chebi:``前缀</param>
 <param name="localCache$">函数会分别使用主ID和二级ID构建缓存数据</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.ELIXIR.EBI.ChEBI.WebServices.WebServices.BatchQuery(System.String[],System.String,System.Int32)">
 <summary>
 执行批量数据查询
 </summary>
 <param name="chebiIDlist">编号列表是不带有``CHEBI:``前缀的chebi物质编号</param>
 <param name="localCache$"></param>
 <returns></returns>
 
</member>
<member name="T:SMRUCC.genomics.Assembly.ELIXIR.NamespaceDoc">
 <summary>
 ## ELIXIR Core Data Resources
 
 ELIXIR Core Data Resources are a set of European data resources of fundamental importance to 
 the wider life-science community and the long-term preservation of biological data.

 Identification of the ELIXIR Core Data Resources involves a careful evaluation of the 
 multiple facets of the data resources. Indicators used in the evaluation are grouped into 
 five categories:

 + Scientific focus And quality Of science
 + Community served by the resource
 + Quality of service
 + Legal And funding infrastructure, And governance
 + Impact And translational stories
 
 The details Of the selection criteria are described In the F1000R ELIXIR track article 
 'Identifying ELIXIR Core Data Resources'. The initial Core Data Resource list was defined 
 in July of 2017. For a summary of that process, watch the ELIXIR webinar presented in 
 September 2017. The list will be reviewed regularly.

 ELIXIR Is committed to Open Access as a core principle for publicly funded research. 
 ELIXIR Core Data Resources should reflect this commitment And have terms of use Or a 
 licence that enables the reuse And remixing of data. The Creative Commons licenses CC0, 
 CC-BY Or CC-BY-SA are all conformant with the Open Definition (http//opendefinition.org/licenses/), 
 as are equivalent open terms of use.1
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.Uniprot.IdMapping">
 <summary>
 idmapping_selected.tab
 We also provide this tab-delimited table which includes
 the following mappings delimited by tab
 
 1. UniProtKB-AC
 2. UniProtKB-ID
 3. GeneID (EntrezGene)
 4. RefSeq
 5. GI
 6. PDB
 7. GO
 8. UniRef100
 9. UniRef90
 10. UniRef50
 11. UniParc
 12. PIR
 13. NCBI-taxon
 14. MIM
 15. UniGene
 16. PubMed
 17. EMBL
 18. EMBL-CDS
 19. Ensembl
 20. Ensembl_TRS
 21. Ensembl_PRO
 22. Additional PubMed
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.FastaHeader.UniprotID">
 <summary>
 UniqueIdentifier Is the primary accession number of the UniProtKB entry.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.FastaHeader.EntryName">
 <summary>
 EntryName Is the entry name of the UniProtKB entry.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.FastaHeader.OrgnsmSpName">
 <summary>
 OrganismName Is the scientific name of the organism of the UniProtKB entry.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.FastaHeader.GN">
 <summary>
 GeneName Is the first gene name of the UniProtKB entry. If there Is no gene name, OrderedLocusName Or ORFname, the GN field Is Not listed. GeneName(基因名称)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.FastaHeader.PE">
 <summary>
 ProteinExistence Is the numerical value describing the evidence for the existence of the protein.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.FastaHeader.SV">
 <summary>
 SequenceVersion Is the version number of the sequence.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.FastaHeader.ProtName">
 <summary>
 ProteinName Is the recommended name of the UniProtKB entry as annotated in the RecName field. For UniProtKB/TrEMBL entries without a RecName field, the SubName field Is used. 
 In case of multiple SubNames, the first one Is used. The 'precursor' attribute is excluded, 'Fragment' is included with the name if applicable.
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.Uniprot.UniprotFasta">
 <summary>
 A fasta object which is specific for the uniprot fasta title parsing.(专门用于解析Uniprot蛋白质序列记录的Fasta对象)
 
 The following is a description of FASTA headers for UniProtKB (including alternative isoforms), UniRef, UniParc and archived UniProtKB versions. 
 NCBI's program formatdb (in particular its -o option) is compatible with the UniProtKB fasta headers.
 
 UniProtKB
 >db|UniqueIdentifier|EntryName ProteinName OS=OrganismName[ GN=GeneName]PE=ProteinExistence SV=SequenceVersion
 
 Where:
 db Is 'sp' for UniProtKB/Swiss-Prot and 'tr' for UniProtKB/TrEMBL.
 UniqueIdentifier Is the primary accession number of the UniProtKB entry.
 EntryName Is the entry name of the UniProtKB entry.
 ProteinName Is the recommended name of the UniProtKB entry as annotated in the RecName field. For UniProtKB/TrEMBL entries without a RecName field, the SubName field Is used. 
 In case of multiple SubNames, the first one Is used. The 'precursor' attribute is excluded, 'Fragment' is included with the name if applicable.
 OrganismName Is the scientific name of the organism of the UniProtKB entry.
 GeneName Is the first gene name of the UniProtKB entry. If there Is no gene name, OrderedLocusName Or ORFname, the GN field Is Not listed.
 ProteinExistence Is the numerical value describing the evidence for the existence of the protein.
 SequenceVersion Is the version number of the sequence.
 </summary>
 <remarks>http://www.uniprot.org/help/fasta-headers</remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.UniprotFasta.CreateObject(SMRUCC.genomics.SequenceModel.FASTA.FastaSeq)">
 <summary>
 从读取的文件数据之中创建一个Uniprot序列对象
 </summary>
 <param name="fasta"></param>
 <returns></returns>
 <remarks>
 >sp|Q197F8|002R_IIV3 Uncharacterized protein 002R OS=Invertebrate iridescent virus 3 GN=IIV3-002R PE=4 SV=1
 </remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.UniprotFasta.ParseHeader(System.String,System.String)">
 <summary>
 Parse the fasta header of the sequence from UniProt database.
 </summary>
 <param name="s$"></param>
 <param name="id$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.UniprotFasta.LoadFasta(System.String)">
 <summary>
 Load the uniprot fasta sequence file. 
 </summary>
 <param name="path"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.ACC_ID">
 <summary>
 UniProtKB AC/ID
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.UPARC">
 <summary>
 UniParc
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.NF50">
 <summary>
 UniRef50
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.NF90">
 <summary>
 UniRef90
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.NF100">
 <summary>
 UniRef100
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.GENENAME">
 <summary>
 Gene name
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.EMBL_ID">
 <summary>
 EMBL/GenBank/DDBJ
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.EMBL">
 <summary>
 EMBL/GenBank/DDBJ CDS
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.P_ENTREZGENEID">
 <summary>
 Entrez Gene (GeneID)
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.P_GI">
 <summary>
 GI number
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.PIR">
 <summary>
 PIR
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.REFSEQ_NT_ID">
 <summary>
 RefSeq Nucleotide
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.P_REFSEQ_AC">
 <summary>
 RefSeq Protein
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.UNIGENE_ID">
 <summary>
 UniGene
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.PDB_ID">
 <summary>
 PDB
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.DISPROT_ID">
 <summary>
 DisProt
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.BIOGRID_ID">
 <summary>
 BioGrid
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.DIP_ID">
 <summary>
 DIP
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.MINT_ID">
 <summary>
 MINT
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.STRING_ID">
 <summary>
 String
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.CHEMBL_ID">
 <summary>
 ChEMBL
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.DRUGBANK_ID">
 <summary>
 DrugBank
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.GUIDETOPHARMACOLOGY_ID">
 <summary>
 GuidetoPHARMACOLOGY
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.SWISSLIPIDS_ID">
 <summary>
 SwissLipids
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.ALLERGOME_ID">
 <summary>
 Allergome
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.ESTHER_ID">
 <summary>
 ESTHER
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.MEROPS_ID">
 <summary>
 MEROPS
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.MYCOCLAP_ID">
 <summary>
 mycoCLAP
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.PEROXIBASE_ID">
 <summary>
 PeroxiBase
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.REBASE_ID">
 <summary>
 REBASE
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.TCDB_ID">
 <summary>
 TCDB
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.BIOMUTA_ID">
 <summary>
 BioMuta
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.DMDM_ID">
 <summary>
 DMDM
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.WORLD_2DPAGE_ID">
 <summary>
 World-2DPAGE
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.DNASU_ID">
 <summary>
 DNASU
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.ENSEMBL_ID">
 <summary>
 Ensembl
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.ENSEMBL_PRO_ID">
 <summary>
 Ensembl Protein
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.ENSEMBL_TRS_ID">
 <summary>
 Ensembl Transcript
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.ENSEMBLGENOME_ID">
 <summary>
 Ensembl Genomes
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.ENSEMBLGENOME_PRO_ID">
 <summary>
 Ensembl Genomes Protein
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.ENSEMBLGENOME_TRS_ID">
 <summary>
 Ensembl Genomes Transcript
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.GENEDB_ID">
 <summary>
 GeneDB
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.KEGG_ID">
 <summary>
 KEGG
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.PATRIC_ID">
 <summary>
 PATRIC
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.UCSC_ID">
 <summary>
 UCSC
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.VECTORBASE_ID">
 <summary>
 VectorBase
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.WBPARASITE_ID">
 <summary>
 WBParaSite
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.ARACHNOSERVER_ID">
 <summary>
 ArachnoServer
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.CCDS_ID">
 <summary>
 CCDS
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.CGD">
 <summary>
 CGD
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.CONOSERVER_ID">
 <summary>
 ConoServer
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.DICTYBASE_ID">
 <summary>
 dictyBase
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.ECHOBASE_ID">
 <summary>
 EchoBASE
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.ECOGENE_ID">
 <summary>
 EcoGene
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.EUHCVDB_ID">
 <summary>
 euHCVdb
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.EUPATHDB_ID">
 <summary>
 EuPathDB
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.FLYBASE_ID">
 <summary>
 FlyBase
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.GENECARDS_ID">
 <summary>
 GeneCards
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.GENEREVIEWS_ID">
 <summary>
 GeneReviews
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.H_INVDB_ID">
 <summary>
 H-InvDB
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.HGNC_ID">
 <summary>
 HGNC
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.HPA_ID">
 <summary>
 HPA
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.LEGIOLIST_ID">
 <summary>
 LegioList
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.LEPROMA_ID">
 <summary>
 Leproma
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.MAIZEGDB_ID">
 <summary>
 MaizeGDB
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.MGI_ID">
 <summary>
 MGI
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.MIM_ID">
 <summary>
 MIM
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.NEXTPROT_ID">
 <summary>
 neXtProt
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.ORPHANET_ID">
 <summary>
 Orphanet
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.PHARMGKB_ID">
 <summary>
 PharmGKB
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.POMBASE_ID">
 <summary>
 PomBase
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.PSEUDOCAP_ID">
 <summary>
 PseudoCAP
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.RGD_ID">
 <summary>
 RGD
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.SGD_ID">
 <summary>
 SGD
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.TAIR_ID">
 <summary>
 TAIR
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.TUBERCULIST_ID">
 <summary>
 TubercuList
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.WORMBASE_ID">
 <summary>
 WormBase
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.WORMBASE_PRO_ID">
 <summary>
 WormBase Protein
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.WORMBASE_TRS_ID">
 <summary>
 WormBase Transcript
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.XENBASE_ID">
 <summary>
 Xenbase
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.ZFIN_ID">
 <summary>
 ZFIN
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.EGGNOG_ID">
 <summary>
 eggNOG
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.GENETREE_ID">
 <summary>
 GeneTree
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.HOGENOM_ID">
 <summary>
 HOGENOM
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.HOVERGEN_ID">
 <summary>
 HOVERGEN
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.KO_ID">
 <summary>
 KO
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.OMA_ID">
 <summary>
 OMA
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.ORTHODB_ID">
 <summary>
 OrthoDB
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.TREEFAM_ID">
 <summary>
 TreeFam
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.BIOCYC_ID">
 <summary>
 BioCyc
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.REACTOME_ID">
 <summary>
 Reactome
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.UNIPATHWAY_ID">
 <summary>
 UniPathway
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.CLEANEX_ID">
 <summary>
 CleanEx
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.COLLECTF_ID">
 <summary>
 CollecTF
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.CHITARS_ID">
 <summary>
 ChiTaRS
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.GENEWIKI_ID">
 <summary>
 GeneWiki
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.ID_types.GENOMERNAI_ID">
 <summary>
 GenomeRNAi
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.Web.Retrieve_IDmapping.Mapping(System.Collections.Generic.IEnumerable{System.String},SMRUCC.genomics.Assembly.Uniprot.Web.ID_types,SMRUCC.genomics.Assembly.Uniprot.Web.ID_types,System.String,System.String,SMRUCC.genomics.Assembly.Uniprot.Web.Formats)">
 <summary>
 
 </summary>
 <param name="uploadQuery"></param>
 <param name="from"></param>
 <param name="[to]"></param>
 <param name="save$">这是一个文件名来的</param>
 <param name="compress$">
 假若这个参数为<see cref="F:SMRUCC.genomics.Assembly.Uniprot.Web.Retrieve_IDmapping.yes"/>的话，下载的是一个``*.gz``格式的压缩文件
 </param>
 <param name="format"></param>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.Web.Retrieve_IDmapping.MappingReader(System.String)">
 <summary>
 读取从uniprot上面所下载下来的id mapping表
 </summary>
 <param name="path$"></param>
 <returns></returns>
 <remarks>
 可能每一行之中会存在多对多的情况，但是不需要担心，这个函数会自动处理这些非一对一的情况的
 </remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.Web.Retrieve_IDmapping.UniprotIDFilter(System.Collections.Generic.Dictionary{System.String,System.String[]},System.String)">
 <summary>
 
 </summary>
 <param name="mappings"></param>
 <param name="initials">Q开头的编号一般都是reviewed状态的蛋白数据</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.Web.Retrieve_IDmapping.MappingsReader(System.String)">
 <summary>
 与<see cref="M:SMRUCC.genomics.Assembly.Uniprot.Web.Retrieve_IDmapping.MappingReader(System.String)"/>所不同的是，这个函数是读取一个文件夹之中的所有的
 mapping table(``*.tsv``, ``*.tab``)作为一个mapping数据的整体来使用的
 </summary>
 <param name="DIR$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.Web.Retrieve_IDmapping.SingleMappings(System.String)">
 <summary>
 假若在mapping表之中不存在重复的基因编号的话，可以使用这个函数
 </summary>
 <param name="path$"></param>
 <returns></returns>
 <remarks>
 其实这个函数就是直接读取行数据然后依据TAB符号进行分割之后写入字典之中
 </remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.Web.Retrieve_IDmapping.GetMappingList(System.String)">
 <summary>
 得到mapping的所有的基因编号
 </summary>
 <param name="path$"></param>
 <returns></returns>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.Formats.canonical">
 <summary>
 FASTA (canonical)
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.Formats.isoform">
 <summary>
 FASTA (canonical &amp; isoform)
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.Formats.tab">
 <summary>
 Tab-separated
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.Formats.txt">
 <summary>
 Text
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.Formats.xlsx">
 <summary>
 Excel
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.Formats.gff">
 <summary>
 GFF
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.Formats.xml">
 <summary>
 XML
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.Formats.mappingTable">
 <summary>
 Mapping Table
 </summary>         
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.Formats.rdf">
 <summary>
 RDF/XML
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.Web.Formats.list">
 <summary>
 Target List
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.Web.WebServices.CreateQuery(System.String,System.String)">
 <summary>
 Create a protein query url. 
 </summary>
 <param name="geneId"></param>
 <param name="taxonomy"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.Web.WebServices.DownloadProtein(System.String)">
 <summary>
 Download a protein sequence fasta data from http://www.uniprot.org/ 
 using a specific <paramref name="UniprotId"></paramref>. 
 （从http://www.uniprot.org/网站之上下载一条蛋白质序列）
 </summary>
 <param name="UniprotId">The uniprot id of a protein sequence.(蛋白质在Uniprot数据库之中的编号)</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.Web.WebServices.GetEntries(System.String)">
 <summary>
 
 </summary>
 <param name="url">CreateQuery(geneId, taxonomy)</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.XML.Extensions.ProteinSequence(SMRUCC.genomics.Assembly.Uniprot.XML.entry)">
 <summary>
 Get protein sequence
 </summary>
 <param name="prot"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.XML.Extensions.KO(SMRUCC.genomics.Assembly.Uniprot.XML.entry)">
 <summary>
 Get KO number of this protein
 </summary>
 <param name="protein"></param>
 <returns>returns nothing if not found</returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.XML.Extensions.GO(SMRUCC.genomics.Assembly.Uniprot.XML.entry)">
 <summary>
 Get KO number of this protein
 </summary>
 <param name="protein"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.XML.Extensions.EnumerateAllIDs(SMRUCC.genomics.Assembly.Uniprot.XML.entry)">
 <summary>
 includes uniprot accession id and db entry in other database
 </summary>
 <param name="entry"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.XML.Extensions.SubCellularLocations(SMRUCC.genomics.Assembly.Uniprot.XML.entry)">
 <summary>
 获取蛋白质在细胞内的亚细胞定位结果
 </summary>
 <param name="protein"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.XML.Extensions.GetDomainData(SMRUCC.genomics.Assembly.Uniprot.XML.entry)">
 <summary>
 获取蛋白质的功能结构信息
 </summary>
 <param name="prot"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.XML.Extensions.Term2Gene(SMRUCC.genomics.Assembly.Uniprot.XML.UniProtXML,System.String,SMRUCC.genomics.Assembly.Uniprot.XML.GetIDs.IDTypes)">
 <summary>
 生成KEGG或者GO注释分类的mapping表
 </summary>
 <param name="uniprotXML"></param>
 <param name="type$"></param>
 <param name="idType"></param>
 <returns>``term --> geneID``</returns>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.XML.GetIDs.IDTypes.Accession">
 <summary>
 Uniprot accession ID
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.XML.GetIDs.parser">
 <summary>
 名字是小写的
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.XML.comment.GetText">
 <summary>
 get text string from <see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.comment.text"/> data.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.reaction.text">
 <summary>
 the text of the reaction equation
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.Uniprot.XML.sequence">
 <summary>
 the protein sequence data
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.Uniprot.XML.gene">
 <summary>
 Describes a gene.
 Equivalent to the flat file GN-line.
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.gene.names">
 <summary>
 Describes different types of gene designations.
 Equivalent to the flat file GN-line.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.gene.Primary">
 <summary>
 (primary) 基因名称
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.gene.ORF">
 <summary>
 (ORF) 基因编号
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.Uniprot.XML.protein">
 <summary>
 Describes the names for the protein and parts thereof.
 Equivalent to the flat file DE-line.
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.protein.fullName">
 <summary>
 <see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.protein.recommendedName"/> -> <see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.protein.submittedName"/> -> <see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.protein.alternativeNames"/>
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.Uniprot.XML.featureTypes">
 <summary>
 Describes the type of a sequence annotation.
 Equivalent to the flat file FT feature keys, but using full terms instead 
 of acronyms. The string value enumeration of <see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.feature.type"/>
 property.
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.Uniprot.XML.feature">
 <summary>
 Describes different types of sequence annotations.
 Equivalent to the flat file FT-line.
 Get by types using <see cref="M:Microsoft.VisualBasic.Linq.TakesExtension.Takes``1(System.Collections.Generic.IEnumerable{``0},System.Boolean[])"/> extensions
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.feature.type">
 <summary>
 Describes the type of a sequence annotation.
 Equivalent to the flat file FT feature keys, but using full terms instead 
 of acronyms.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.feature.status">
 <summary>
 string value could be one of these enumeration:
 
 + by similarity
 + probable
 + potential
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.feature.original">
 <summary>
 Describes the original sequence in annotations that describe natural 
 or artifical sequence variations.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.feature.variation">
 <summary>
 Describes the variant sequence in annotations that describe natural 
 or artifical sequence variations.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.feature.location">
 <summary>
 Describes the sequence coordinates of the annotation.
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.Uniprot.XML.location">
 <summary>
 Describes a sequence location as either a range with a begin and end or as a 
 position. The 'sequence' attribute is only used when the location is not on 
 the canonical sequence displayed in the current entry.
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.location.begin">
 <summary>
 片段的起点位置
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.location.end">
 <summary>
 片段的结束位置
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.location.position">
 <summary>
 单个位点的位置
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.Uniprot.XML.position">
 <summary>
 序列上面的某一个位点位置
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.position.status">
 <summary>
 Value could be one of these enumeration:
 
 + certain
 + uncertain
 + less than
 + greater than
 + unknown
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.recommendedName.ecNumber">
 <summary>
 一个蛋白可能会有多个EC编号
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.Uniprot.XML.value">
 <summary>
 一条值数据记录
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.value.value">
 <summary>
 这条值对象的文本内容
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.dbReference.type">
 <summary>
 外部数据库的名称
 </summary>
 <returns></returns>
 <remarks>
 对于RefSeq而言，RefSeq的编号是蛋白序列在NCBI数据库之中的编号，如果需要找到对应的核酸编号，
 则会需要通过<see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.dbReference.properties"/>列表之中的``nucleotide sequence ID``键值对来获取
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.dbReference.id">
 <summary>
 外部数据库的编号
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.Uniprot.XML.molecule">
 <summary>
 Describes a molecule by name or unique identifier.
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.Uniprot.XML.entry">
 <summary>
 Describes a UniProtKB entry.
 (因为<see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.entry.accessions"/>可能会出现多个值，所以会需要使用
 <see cref="M:SMRUCC.genomics.Assembly.Uniprot.XML.entry.ShadowCopy"/>函数来解决实体多态的问题。
 经过shadow copy之后可以使用主键<see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.entry.accession"/>来创建字典)
 </summary>
 
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.entry.accession">
 <summary>
 shadow copy之后的唯一标识符
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.entry.accessions">
 <summary>
 蛋白质的唯一标识符，可以用作为字典的键名
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.entry.sequence">
 <summary>
 当前的这个蛋白质的蛋白序列，在Uniprot数据库之中，蛋白记录只有蛋白序列
 没有核酸序列，如果需要核酸序列，则会需要通过accession编号从nt库之中
 提取出来
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.entry.dbReferences">
 <summary>
 Dictionary table can be read from <see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.entry.xrefs"/> property
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.entry.CommentList">
 <summary>
 indexed by <see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.comment.type"/>
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.entry.xrefs">
 <summary>
 <see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.entry.dbReferences"/> table
 </summary>
 <returns></returns>
 <remarks>
 indexed by the <see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.dbReference.type"/>
 </remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.XML.entry.ShadowCopy">
 <summary>
 这个是处理有多个accession的情况
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.citation.name">
 <summary>
 期刊名称
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.citation.title">
 <summary>
 ``submission``类型的引用的标题可能是空的
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.Uniprot.XML.UniProtXML">
 <summary>
 Describes a collection of UniProtKB entries, XML file can be download from the uniprot database id mappings result.
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.Uniprot.XML.UniProtXML.uniparc_ns">
 <summary>
 ```xml
 &lt;uniparc xmlns="http://uniprot.org/uniparc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://uniprot.org/uniparc http://www.uniprot.org/docs/uniparc.xsd" version="2017_03"> 
 ```
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.Uniprot.XML.UniProtXML.entries">
 <summary>
 <see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.entry.accession"/>可以用作为字典的键名
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.XML.UniProtXML.Load(System.String)">
 <summary>
 从文件系统中的rdf文件加载XML反序列化数据结果.(这个函数只适用于小文件的加载操作)
 </summary>
 <param name="path">XML文件路径</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.XML.UniProtXML.EnumerateEntries(System.String,System.Boolean,System.Boolean)">
 <summary>
 Enumerate all of the data entries in a ultra large size uniprot XML database.
 (使用这个函数来读取超大的uniprot XML数据库)
 </summary>
 <param name="path">因为uniprot和uniparc这两个数据库的数据结构都是一样的,所以可以使用这个函数来兼容这两个数据库</param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.XML.UniProtXML.LoadDictionary(System.String)">
 <summary>
 因为可能会存在一个蛋白质entry对应多个accession的情况，
 所以这个函数会自动将这些重复的<see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.entry.accessions"/>进行展开，
 则取出唯一的accessionID只需要使用表达式
 
 ```vbnet
 DirectCast(entry, <see cref="T:Microsoft.VisualBasic.ComponentModel.Collection.Generic.INamedValue"/>).Key
 ```
 </summary>
 <param name="handle$">file or directory</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.Uniprot.XML.UniProtXML.ToIndexTable">
 <summary>
 对<see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.UniProtXML.entries"/>属性使用<see cref="P:SMRUCC.genomics.Assembly.Uniprot.XML.entry.accessions"/>建立索引
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.Uniprot.XML.UniRef.entry">
 <summary>
 http://uniprot.org/uniref
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.API.GenerateBasicDocument(SMRUCC.genomics.Assembly.Expasy.Database.Enzyme[])">
 <summary>
 从Expasy数据库之中创建基本的数据
 </summary>
 <param name="enzymes"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.API.__enzymeClassify(SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.T_EnzymeClass_BLAST_OUT[],SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.API._____ENZYME_CLASS_HANDLER_)">
 <summary>
 由于evalue已经是在做blast的时候已经通过evalue开关参数所限制了，都认为evalue符合要求，故而在这里以identities值为标准
 </summary>
 <param name="data"></param>
 <returns></returns>
 <remarks>在上一层待用之中已经使用了查询并行化了，所以在本函数之中将不能够再使用并行化，以免影响程序效率</remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.API._____ENZYME_CLASS_HANDLER_">
 <summary>
 Handler for process the duplicated enzyme classification data.
 </summary>
 <param name="DuplicatedData"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.API.InvokeAnnotations(SMRUCC.genomics.Assembly.Expasy.Database.NomenclatureDB,SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.T_EnzymeClass_BLAST_OUT[])">
 <summary>
 
 </summary>
 <param name="Expasy"></param>
 <param name="Aligned">经过筛选之后的之后比对结果</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.API.__getKEGGReaction(SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.EnzymeClass,System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction})">
 <summary>
 通过EC编号来查找KEGG Reaction数据库之中的相应的记录
 </summary>
 <param name="EC"></param>
 <param name="KEGG"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.EnzymeClass">
 <summary>
 这个是最终的酶分类结果的呈现形式
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.EnzymeClass.EC_Class">
 <summary>
 一种酶分子是可能同时具备有多个酶分类编号的
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.EnzymeClass.ExpasyAnnotations">
 <summary>
 {[EC] Annotation}
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.EnzymeClass.KEGG_ENTRIES">
 <summary>
 KEGG数据库之中的Reaction的编号: {[KEGG_Reaction_Entry] Reaction}
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.T_EnzymeClass_BLAST_OUT">
 <summary>
 The raw annotation data which was export from the blast output text.(蛋白酶的酶编号分类（这个数据结构是用来表示blast比对结果的）)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.Expasy.AnnotationsTool.T_EnzymeClass_BLAST_OUT.Class">
 <summary>
 酶分类的EC编号
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.Expasy.Database.Enzyme">
 <summary>
 使用Uniprot编号为主的酶分类数据记录
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.Expasy.Database.Enzyme.Identification">
 <summary>
 (ID)  EC编号
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.Expasy.Database.Enzyme.Description">
 <summary>
 (DE)  (official name)         
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.Expasy.Database.Enzyme.AlternateName">
 <summary>
 (AN)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.Expasy.Database.Enzyme.CatalyticActivity">
 <summary>
 (CA)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.Expasy.Database.Enzyme.Cofactor">
 <summary>
 (CF)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.Expasy.Database.Enzyme.Comments">
 <summary>
 (CC)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.Expasy.Database.Enzyme.PROSITE">
 <summary>
 (PR)  Cross-references to PROSITE
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.Expasy.Database.Enzyme.SwissProt">
 <summary>
 (DR)  Cross-references to Swiss-Prot 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.Expasy.Database.NomenclatureDB">
 <summary>
 ENZYME nomenclature database.(Expasy数据库之中的enzyme.dat注释文件)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.Expasy.Database.NomenclatureDB.DataItem(System.String)">
 <summary>
 当目标编号不存在于Expasy数据库之中的时候会返回空值
 </summary>
 <param name="EC"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.Expasy.Database.NomenclatureDB.GetSwissProtEntries(System.String,System.Boolean)">
 <summary>
 从Expasy数据库之中导出某一种酶分类编号的所有的Uniprot数据库之中的蛋白质编号
 </summary>
 <param name="ECNumber"></param>
 <param name="Strict">是否严格匹配酶分类编号，假若严格匹配的话，则必须要字符串完全相等才会有输出结果，假若不严格匹配，理论上假若所输入的酶分类标号有通配符，即相连着的两个".."符号存在的话，则所有该大分类之下的所有的蛋白酶分子的编号都会被输出</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.Expasy.Database.NomenclatureDB.CreateObject(System.String)">
 <summary>
 Load the expasy database from the text file.(从文本文件之中加载expasy数据库)
 </summary>
 <param name="path">File path of the expasy database file.(exapsy数据库文件的文件路径)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.iGEM.PartSeq.Parse(System.String)">
 <summary>
 
 </summary>
 <param name="file"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Archives.Csv.Module.Type">
 <summary>
 A
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Archives.Csv.Module.Class">
 <summary>
 B
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Archives.Csv.Module.Category">
 <summary>
 C
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Archives.Csv.Module.Imports``1(``0)">
 <summary>
 导出XML文件之中的数据至Csv文件之中
 </summary>
 <typeparam name="TSource"></typeparam>
 <param name="Data"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.Archives.Csv.Pathway">
 <summary>
 CSV data model for storage the kegg pathway brief information.(用于向Csv文件保存数据的简单格式的代谢途径数据存储对象)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Archives.Csv.Pathway.EntryId">
 <summary>
 Pathway object KEGG database entry id.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Archives.Csv.Pathway.Class">
 <summary>
 Phenotype Class
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Archives.Csv.Pathway.Category">
 <summary>
 Phenotype Category
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Archives.Csv.Pathway.PathwayGenes">
 <summary>
 The enzyme gene which was involved in this pathway catalysts.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Archives.Csv.Pathway.LoadData(System.String,System.String)">
 <summary>
 将所下载的代谢途径数据转换为CSV文档保存
 </summary>
 <param name="directory"></param>
 <param name="sp_code">物种名称的三字母简写，例如xcb</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Archives.SequenceDump.TitleParser(System.String)">
 <summary>
 需要兼容KEGG和Regprecise数据库  _(:зゝ∠)_
 </summary>
 <param name="title"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Archives.Xml.CompilerAPI.Compile(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.KEGG.Archives.Xml.Nodes.PwyBriteFunc},System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Module},System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction},System.String)">
 <summary>
 
 </summary>
 <param name="Pathways"></param>
 <param name="Modules"></param>
 <param name="Reactions">数据库之中的所有的代谢反应数据</param>
 <param name="speciesCode"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Archives.Xml.MapAPI.EcParser(System.String)">
 <summary>
 
 </summary>
 <param name="value">sensory histidine kinase CreC; K07641 two-component system, OmpR family, sensor histidine kinase CreC [EC:2.7.13.3] [KO:K07641] [EC:2.7.13.3]</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Archives.Xml.MapAPI.GetReactions(SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Pathway,SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction[])">
 <summary>
 得到初步的代谢反应
 </summary>
 <param name="from"></param>
 <param name="source"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Archives.Xml.MapAPI.GetReactions(System.String[],SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction[])">
 <summary>
 得到有Compound所构成的所有反应
 </summary>
 <param name="allCompounds"></param>
 <param name="from"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Archives.Xml.Nodes.EC_Mapping.locusId">
 <summary>
 酶分子的基因编号
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Archives.Xml.Nodes.EC_Mapping.ContainsRxn(System.String)">
 <summary>
 这个映射之中是否包含有某一个代谢过程
 </summary>
 <param name="rxn"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Archives.Xml.Nodes.EC_Mapping.IsECEquals(System.String[],System.String)">
 <summary>
 
 </summary>
 <param name="def">代谢过程之中定义的EC的集合</param>
 <param name="mappedEC">目标比较的EC编号值</param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Archives.Xml.Nodes.PwyBriteFunc.Class">
 <summary>
 大分类
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Archives.Xml.Nodes.PwyBriteFunc.Category">
 <summary>
 小分类
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.Archives.Xml.XmlModel">
 <summary>
 The compile data of the target bacteria species genome database in the KEGG.(KEGG数据库之中的关于目标研究的微生物菌株的KEGG数据库之中的所有的信息的编译的集合)
 </summary>
 <remarks></remarks>
 
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Archives.Xml.XmlModel.Metabolome">
 <summary>
 The reaction information which can be annotated in this bacteria species.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Archives.Xml.XmlModel.spCode">
 <summary>
 The kegg species brief code.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Archives.Xml.XmlModel.GetMaps(System.String)">
 <summary>
 获取得到某一个基因所映射得到的酶促反应过程
 </summary>
 <param name="locus">基因号</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Archives.Xml.XmlModel.GetAllPathways">
 <summary>
 Gets the pathway information data from this species genome compile data.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText">
 <summary>
 BRITE Functional Hierarchies
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.classLabel">
 <summary>
 大分类的标签
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.degree">
 <summary>
 ``ABCDEFG``, etc...
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.categoryItems">
 <summary>
 假若这个层次还可以进行细分的话，则这个属性就是当前的小分类的子分类列表
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.entryID">
 <summary>
 KEGG db-get对象名词
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.class">
 <summary>
 Root class label
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.GetHPath(System.String)">
 <summary>
 查找不到会返回空值
 </summary>
 <param name="key"><see cref="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.entryID"/> or <see cref="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.entryID"/> in <see cref="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.categoryItems"/></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.GetEntries">
 <summary>
 获取得到当前的分类之下的所有的<see cref="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.entryID"/>列表
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.EnumerateEntries">
 <summary>
 递归枚举当前的分类对象之下的所有的Entry列表
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.Load(System.String)">
 <summary>
 
 </summary>
 <param name="data$">文本内容或者文件的路径</param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.Load_ko00001">
 <summary>
 KEGG Orthology
 </summary>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.BuildPath(System.String,System.String)">
 <summary>
 创建分层次的文件保存路径
 </summary>
 <param name="EXPORT$">数据文件所导出的文件夹</param>
 <param name="ext$">文件拓展名，KEGG数据库文件默认为``xml``格式</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHTextParser.Load(System.String)">
 <summary>
 
 </summary>
 <param name="text$">文本内容或者文件的路径</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHTextParser.loadData(System.String[],System.Int32@,System.Int32,SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText)">
 <summary>
 递归加载层次数据
 </summary>
 <param name="lines"></param>
 <param name="p"></param>
 <param name="level"></param>
 <returns></returns>
 
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteTerm">
 <summary>
 A general brite term
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteTerm.class">
 <summary>
 A
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteTerm.category">
 <summary>
 B
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteTerm.subcategory">
 <summary>
 C
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteTerm.order">
 <summary>
 D
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteTerm.entry">
 <summary>
 ``{compoundID => name}``
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteTerm.kegg_id">
 <summary>
 <see cref="P:Microsoft.VisualBasic.Text.Xml.Models.KeyValuePair.Key"/> of property <see cref="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteTerm.entry"/>
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.htext">
 <summary>
 KEGG BRITE is a collection of manually created hierarchical text (htext) files capturing 
 functional hierarchies of various biological objects, especially those represented as 
 KEGG objects. In contrast to KEGG PATHWAY, which is limited to molecular interactions and 
 reactions, KEGG BRITE incorporates many different types of relationships. 

 Some BRITE hierarchy files are computationally expanded, adding a hierarchy level Or a 
 tab-delimited column, by incorporating additional information. This Is accomplished by the 
 Join Brite operation Of KEGG Mapper, which combines a BRITE hierarchy file (such As ATC 
 drug classification) And a binary relation file (such As D number To target relationships 
 extracted from KEGG DRUG). 

 Some other BRITE hierarchy files contain tab-delimited attributes that are manually added. 
 Recently introduced BRITE table files are essentailly the same As such multi-column BRITE 
 hierarchy files. Because the table representation Is often easier To understand, certain 
 hierarchy files For disease And drug information have been converted To table files.
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.htext.Hierarchical">
 <summary>
 <see cref="T:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText"/>层次分类数据
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.htext.GetEntryDictionary">
 <summary>
 ``KOxxxxx``为键名，注释信息为对应的键值
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.htext.StreamParser(System.String)">
 <summary>
 从文本文件之中进行解析操作，<paramref name="res"/>参数为文本内容或者文件的路径
 </summary>
 <param name="res$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.htext.ko00001">
 <summary>
 KEGG Orthology (KO)
 </summary>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.htext.br08201">
 <summary>
 Enzymatic Reactions
 </summary>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.htext.br08204">
 <summary>
 reaction class
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.htext.br08901">
 <summary>
 KEGG pathway maps category
 </summary>
 <returns></returns>
 <remarks>
 https://rest.kegg.jp/get/br:br08901
 </remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.CompoundBrite">
 <summary>
 Compounds with Biological Roles.(在这里面包含有KEGG compounds的下载API)
 </summary>
 <remarks>
 Compounds
 
  br08001  Compounds with biological roles
  br08002  Lipids
  br08003  Phytochemical compounds
  br08021  Glycosides
  br08005  Bioactive peptides
  br08006  Endocrine disrupting compounds
  br08007  Pesticides
  br08008  Carcinogens
  br08009  Natural toxins
  br08010  Target-based classification of compounds
 </remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.CompoundBrite.cpd_br08001">
 <summary>
 ``br08001``  Compounds with biological roles
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.CompoundBrite.cpd_br08002">
 <summary>
 ``br08002``  Lipids
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.CompoundBrite.cpd_br08003">
 <summary>
 ``br08003``  Phytochemical compounds
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.CompoundBrite.cpd_br08005">
 <summary>
 ``br08005``  Bioactive peptides
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.CompoundBrite.cpd_br08006">
 <summary>
 ``br08006``  Endocrine disrupting compounds
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.CompoundBrite.cpd_br08007">
 <summary>
 ``br08007``  Pesticides
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.CompoundBrite.cpd_br08008">
 <summary>
 ``br08008``  Carcinogens
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.CompoundBrite.cpd_br08009">
 <summary>
 ``br08009``  Natural toxins
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.CompoundBrite.cpd_br08010">
 <summary>
 ``br08010``  Target-based classification of compounds
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.CompoundBrite.cpd_br08021">
 <summary>
 ``br08021``  Glycosides
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.CompoundBrite.Lipids">
 <summary>
 KEGG BRITE contains a classification of lipids
 
 > http://www.kegg.jp/kegg-bin/get_htext?br08002.keg
 </summary>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.CompoundBrite.GetAllCompoundResources">
 <summary>
 get all 10 compound class from the internal kegg database
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.EnzymaticReaction">
 <summary>
 Extract data from the <see cref="T:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.htext"/> entry model
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.EnzymaticReaction.EC">
 <summary>
 level: D
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.EnzymaticReaction.Class">
 <summary>
 level: A
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.EnzymaticReaction.Category">
 <summary>
 level: B
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.EnzymaticReaction.SubCategory">
 <summary>
 level: C
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.EnzymaticReaction.LoadFromResource">
 <summary>
 br08201
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.EnzymeEntry">
 <summary>
 在这里的entry是KO编号，而非Reaction编号
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.EnzymeEntry.GetResource">
 <summary>
 从卫星资源程序集之中加载数据库数据
 </summary>
 <returns></returns>
 <remarks>Load resource using <see cref="M:Microsoft.VisualBasic.EmitReflection.ResourcesSatellite(System.Reflection.Assembly)"/></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.KOCatalog.ko00000">
 <summary>
 ###### KEGG Orthology (KO) - All Categories
 
 > http://www.kegg.jp/kegg-bin/get_htext?ko00000.keg
 
 In general KO grouping of functional orthologs is defined in the context of KEGG molecular networks (KEGG pathway maps, 
 BRITE hierarchies and KEGG modules), which are in fact represented as networks of nodes identified by K numbers. 
 The relationships between KOs and corresponding molecular networks are represented in the following KO system.
 
 The fact that functional information is associated with ortholog groups is a unique aspect of the KEGG resource. 
 The sequence similarity based inference as a generalization of limited amount of experimental evidence is predefined 
 in KEGG. As implemented in BlastKOALA and other tools, the sequence similarity search against KEGG GENES is a search 
 for most appropriate K numbers. Once K numbers are assigned to genes in the genome, the KEGG pathways maps, Brite 
 hierarchies, and KEGG modules are automatically reconstructed, enabling biological interpretation of high-level 
 functions. 
 </summary>
 <returns>
 因为一个基因会出现在若干个不同的代谢途径之中，所以某一个KO编号是会出现重复的内容定义的，但是他们的所属的代谢途径的定义却是不同的，
 所以函数返回的字典为一个KO编号对应若干个KO term
 </returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Module">
 <summary>
 KEGG里面的模块的入口点的定义数据
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Module.SubCategory">
 <summary>
 C
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Module.Class">
 <summary>
 A
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Module.Category">
 <summary>
 B
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Module.Entry">
 <summary>
 KO
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Module.LoadFromResource">
 <summary>
 从资源文件之中加载模块的入口点的定义数据
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Module.GetDictionary">
 <summary>
 从内部资源之中加载数据然后生成字典返回
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Module.TrimPath(System.String)">
 <summary>
 防止文件夹的名称过长而出错
 </summary>
 <param name="pathToken"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Organism">
 <summary>
 ### br08601
 
 > http://www.kegg.jp/kegg-bin/download_htext?htext=br08601.keg&amp;format=htext&amp;filedir=
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Organism.GetResource">
 <summary>
 从卫星资源程序集之中加载数据库数据
 </summary>
 <returns></returns>
 <remarks>Load resource using <see cref="M:Microsoft.VisualBasic.EmitReflection.ResourcesSatellite(System.Reflection.Assembly)"/></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Pathway">
 <summary>
 The brief entry information for the pathway objects in the KEGG database.
 (KEGG数据库之中的代谢途径对象的分类以及入口点信息) 
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Pathway.class">
 <summary>
 A
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Pathway.category">
 <summary>
 B
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Pathway.entry">
 <summary>
 **C**, example as: ``01100  Metabolic pathways``
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Pathway.EntryId">
 <summary>
 <see cref="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Pathway.entry"/>::<see cref="P:Microsoft.VisualBasic.Text.Xml.Models.NamedValue.name"/>, ``\d+``
 </summary>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Pathway.LoadFromResource">
 <summary>
 从程序的自身的资源文件之中加载数据
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Pathway.LoadData(System.String)">
 <summary>
 从文件之中加载数据
 </summary>
 <param name="path"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Pathway.GetClass(System.String,System.Collections.Generic.Dictionary{System.String,SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Pathway})">
 <summary>
 
 </summary>
 <param name="KO"></param>
 <param name="data">``<see cref="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Pathway.EntryId"/> -> <see cref="T:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Pathway"/>``</param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.ReactionClass.class">
 <summary>
 A
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.ReactionClass.subclass">
 <summary>
 B
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.ReactionClass.category">
 <summary>
 C
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.ReactionClass.ECNumber">
 <summary>
 D
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.ReactionClass.RCNumber">
 <summary>
 E: The KEGG RC number
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.ModsBrite`1">
 <summary>
 加载代谢途径或者KEGG Modules的Brite文档的模块
 </summary>
 <typeparam name="TMod">
 <see cref="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Pathway"/> or <see cref="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Module"/>
 </typeparam>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.ModsBrite`1.GetType(`0)">
 <summary>
 A
 </summary>
 <param name="x"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.ModsBrite`1.GetClass(`0)">
 <summary>
 B
 </summary>
 <param name="x"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.ModsBrite`1.GetCategory(`0)">
 <summary>
 B
 </summary>
 <param name="x"></param>
 <returns></returns>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.ModuleClassAPI.__getType">
 <summary>
 A
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.ModuleClassAPI.__getClass">
 <summary>
 B
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.ModuleClassAPI.__getCategory">
 <summary>
 C
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.ModuleClassAPI.GetModule(System.String)">
 <summary>
 Get description
 </summary>
 <param name="name"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.PathwayProfiles.GetProfileMapping(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Map},System.Collections.Generic.Dictionary{System.String,System.String})">
 <summary>
 mapping kegg category to a given meta id list
 </summary>
 <param name="maps">a collection of kegg maps contains kegg id data</param>
 <param name="metainfo">
 a mapping of ``[keggId => metaID]``
 </param>
 <returns>
 a mapping of ``[kegg_category => metaID()]``
 </returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.PathwayProfiles.GetPathwayClass">
 <summary>
 load pathway category class information from the internal database resource
 </summary>
 <returns>
 pathway entry id is integer number, zero padding may be exists
 </returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.KEGGObjects">
 <summary>
 KEGG数据库之中的对象的类型的列表
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.KEGGObjects.Compound">
 <summary>
 代谢化合物
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.KEGGObjects.Galycan">
 <summary>
 多糖
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.KEGGObjects.Reaction">
 <summary>
 代谢反应
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.KEGGObjects.Enzyme">
 <summary>
 生物酶
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.KEGGObjects.Pathway">
 <summary>
 代谢途径
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.KEGGObjects.Module">
 <summary>
 代谢反应模块
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.KEGGObjects.Drug">
 <summary>
 药物
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.KEGGObjects.HumanDisease">
 <summary>
 人类疾病
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.KEGGObjects.HumanGenome">
 <summary>
 人类基因组
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.KEGGObjects.Orthology">
 <summary>
 直系同源
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.LinkDB.Relationships.equivalent">
 <summary>
 links are special original links to signify equivalent contents between 
 KEGG GENES, COMPOUND, DRUG, REACTION databases and databases other 
 than KEGG.
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.LinkDB.Relationships.indirect">
 <summary>
 links are derived by combining two or more original links. Currently, 
 links from KEGG GENES to REACTION via KO, and to COMPOUND via REACTION 
 are available.
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.LinkDB.Relationships.original">
 <summary>
 links are extracted from the database entries provided by the GenomeNet 
 DBGET system.
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.LinkDB.Relationships.reverse">
 <summary>
 links are derived from the original links by exchanging a source entry 
 and its target entry.
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.bGetObject">
 <summary>
 dbget-bin/www_bget
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Disease.HumanGeneID(System.String)">
 <summary>
 从标签文本之中解析出人基因组的基因的编号
 </summary>
 <param name="s$"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Hsa_gene">
 <summary>
 The data model of the genes in the human genome.(人类基因组之中的基因模型)    
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Hsa_gene.MyNames">
 <summary>
 Split of the <see cref="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Hsa_gene.GeneName"/> property value
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Hsa_gene.Match(System.String,System.String)">
 <summary>
 + 两个都匹配，则返回2
 + 匹配任意一个，则返回1
 + 匹配不上任何一个，则返回0
 </summary>
 <param name="pos$"></param>
 <param name="symbol$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Hsa_gene.MatchAnyName(System.String)">
 <summary>
 目标输入的基因名称符号能够匹配上这个基因对象的任意一个名称
 </summary>
 <param name="symbol$"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.Organism.Species">
 <summary>
 物种全称
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.Organism.Tcode">
 <summary>
 T code for KEGG www_bfind
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.Organism.KEGGId">
 <summary>
 KEGG里面的物种的简称代码
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.Organism.RefSeq">
 <summary>
 FTP url on NCBI
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.Prokaryote">
 <summary>
 原核生物
 </summary>
 <remarks>
 原核生物相较于真核生物的数据，在KEGG的列表中多了一个pubmed编号数据
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.Prokaryote.Year">
 <summary>
 首次测序发表的年份
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.Prokaryote.pubmed">
 <summary>
 首次测序发表的论文的在NCBI的pubmed数据库中的文献编号
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.EntryAPI">
 <summary>
 
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.EntryAPI.OrgCodes">
 <summary>
 {brief_sp, <see cref="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.Organism"/>}
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.EntryAPI.GetValue(System.String)">
 <summary>
 Gets the organism value from the KEGG database through the brief code, 
 if the data is not exists in the database, Nothing will be returns.
 </summary>
 <param name="sp">The organism brief code in the KEGG database</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.EntryAPI.GetKEGGSpeciesCode(System.String)">
 <summary>
 通过本地资源从基因组全名之中得到KEGG之中的三字母的简写代码
 </summary>
 <param name="Name"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.EntryAPI.GetOrganismListFromResource">
 <summary>
 Load KEGG organism list from the internal resource.
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.EntryAPI.fillTaxonomyClass(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.Organism})">
 <summary>
 从上往下填充物种分类信息
 </summary>
 <param name="eukaryotes"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.EntryAPI.FromResource(System.String)">
 <summary>
 Data from the external resources.
 </summary>
 <param name="url">
 By default is fetch from kegg web server for gets the latest KEGG organism list from query the KEGG database.
 </param>
 <returns></returns>
 
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.KEGGOrganism">
 <summary>
 KEGG Organisms: Complete Genomes (http://www.genome.jp/kegg/catalog/org_list.html)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.KEGGOrganism.ToArray">
 <summary>
 returns all of the organism data in an array
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.OrganismInfo">
 <summary>
 http://www.kegg.jp/kegg-bin/show_organism?org={code}
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.OrganismInfo.TID">
 <summary>
 T number
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.OrganismInfo.code">
 <summary>
 物种在KEGG数据库之中的简要缩写代码
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.OrthologyTerms.EntityList">
 <summary>
 A collection of term id in array <see cref="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.OrthologyTerms.Terms"/>
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.OrthologyTerms.Terms">
 <summary>
 The KO terms?
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Compound">
 <summary>
 A data model for the KEGG compound.
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Compound.entry">
 <summary>
 KEGG compound ID: ``cpd:C\d+``
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Compound.commonNames">
 <summary>
 the metabolite common names
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Compound.reactionId">
 <summary>
 The <see cref="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Compound.entry">compound</see> was involved in these reactions. (http://www.kegg.jp/dbget-bin/www_bget?rn:[KEGG_Reaction_ID])
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Compound.DbLinks">
 <summary>
 the database cross reference links
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Compound.KCF">
 <summary>
 2D分子结构数据
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Compound.Image">
 <summary>
 A png image that encoded in base64 string format
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Glycan.CompoundId">
 <summary>
 Glycan id to kegg compound id
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Module">
 <summary>
 KEGG MODULE is a collection of manually defined functional units, called KEGG modules and identified by the M numbers, 
 used for annotation and biological interpretation of sequenced genomes. 
 
 There are four types of KEGG modules:
 
 + ``pathway modules``      – representing tight functional units In KEGG metabolic pathway maps, such As M00002 (Glycolysis, 
 core Module involving three-carbon compounds)
 + ``structural complexes`` – often forming molecular machineries, such As M00072 (Oligosaccharyltransferase)
 + ``functional sets``      – For other types Of essential sets, such As M00360 (Aminoacyl-tRNA synthases, prokaryotes)
 + ``signature modules``    – As markers Of phenotypes, such As M00363 (EHEC pathogenicity signature, Shiga toxin)
 
 The entire list Of KEGG modules can be viewed from the BRITE hierarchy file:
 KEGG modules
 
 Logical Expression
 
 The M number entry Is defined by a logical expression Of K numbers (And other M numbers), allowing automatic evaluation 
 Of whether the gene Set Is complete, i.e., the Module Is present, In a given genome. A space Or a plus sign represents 
 an And operation, And a comma sign represents an Or operation In this expression. A plus sign Is used For a molecular 
 complex And a minus sign designates an Optional item In the complex. 
 
 Each space-separated unit Is called a block, And the distinction Is made for:
 complete modules
 incomplete but almost complete modules With only 1 Or 2 blocks missing
 all modules that contain any matching K numbers
 in the KEGG MODULE database, as well as in the KEGG Mapper tool "Reconstruct Module".
 Module Map
 
 KEGG modules are associated With graphical diagrams called Module maps. For example, M00002 represents glycolysis core 
 Module involving three-carbon compounds And its organism specific Module can be selected from the pop-up menu Or 
 directly specified In the form Of hsa_M00002. While KEGG pathway maps are all manually drawn, KEGG Module maps are 
 computationally generated from the text definition describe above. There Is also a difference Of how organism-specific 
 versions are generated. Organism specific Module entries are created only For complete modules, While organism-specific 
 pathway map entries are created When a few matching elements exist under a predefined taxonomic constraint.
 Ortholog Table
 
 The ortholog table Is a useful tool To check completeness And consistency Of genome annotations. It shows currently 
 annotated genes In individual genomes For a given Set Of K numbers, together With coloring Of adjacent genes 
 (operon-Like structures) On the chromosome. Each KEGG Module contains a link To the corresponding ortholog table, 
 such As For M00165, together With Option To Select complete Or other modules.
 Taxonomy Mapping
 
 Each KEGG module also contains a link to KEGG taxonomy mapping, showing which organisms Or organism groups have the module 
 under the taxonomic classification of KEGG organisms. The taxonomy link from the ortholog table (designated by T) allows 
 mapping of both complete And incomplete modules. The result Is shown in the color coding shown below.
  	complete
  	incomplete, 1 block missing
  	incomplete, 2 blocks missing
 KEGG Modules And Reaction Modules
 
 It Is interesting to note that KEGG modules sometimes correspond to reaction modules extracted from purely chemical 
 properties as summarized in the following BRITE hierarchy file:
 KEGG reaction modules
 A New category of KEGG metabolic pathway maps, called overview maps, shows this correspondence as well as an overall 
 architecture of the metabolic network. The following Is an example taken from the overview map for Degradation of 
 aromatic compounds. 
 
 A single M number Or a combination of M numbers can be used for characterizing phenotypic features encoded in the genome. 
 For example, the BTX (benzene, toluene, And xylene) degradation capacity can be seen from the following diagram where 
 M numbers are linked to the ortholog tables indicating which organisms have complete modules.
 benzene	— M00548 →	catechol
 toluene	— M00538 →	benzoate	— M00551 →	catechol	— M00569 →	meta-cleavage
 — M00568 →	ortho-cleavage
 xylene	— M00537 →	methyl-
 benzoate	— M00551 →	methyl-
 catechol	— M00569 →	meta-cleavage
 — M00568 →	ortho-cleavage
 This example can be rewritten In terms Of the reaction modules.
 benzene	— RM006 →	catechol
 toluene	— RM003 →	benzoate	— RM005 →	catechol	— RM009 →	meta-cleavage
 — RM008 →	ortho-cleavage
 xylene	— RM003 →	methyl-
 benzoate	— RM005 →	methyl-
 catechol	— RM009 →	meta-cleavage
 — RM008 →	ortho-cleavage
 See more details In:
 Muto, A., Kotera, M., Tokimatsu, T., Nakagawa, Z., Goto, S., And Kanehisa, M.; Modular architecture of metabolic 
 pathways revealed by conserved sequences of reactions. J. Chem. Inf. Model. 53, 613-622 (2013). [pubmed] [pdf] 
 
 Kanehisa, M.; Chemical And genomic evolution of enzyme-catalyzed reaction networks. FEBS Lett. 587, 2731-2737 (2013). [pubmed] [pdf] 
 
 Kanehisa, M., Goto, S., Sato, Y., Kawashima, M., Furumichi, M., And Tanabe, M.; Data, information, knowledge And 
 principle back to metabolism in KEGG. Nucleic Acids Res. 42, D199–D205 (2014). [pubmed] [pdf]
 
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Module.GetPathwayGenes">
 <summary>
 得到当前的模块之中的基因的编号的列表，这是个安全的函数，不会返回空值
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Pathway">
 <summary>
 The kegg pathway annotation data.(这个代谢途径模型是针对某一个物种而言的)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Pathway.modules">
 <summary>
 The module entry collection data in this pathway.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Pathway.compound">
 <summary>
 The kegg compound entry collection data in this pathway.
 (可以通过这个代谢物的列表得到可以出现在当前的这个代谢途径之中的所有的非酶促反应过程，
 将整个基因组里面的化合物合并起来则可以得到整个细胞内可能存在的非酶促反应过程) 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Pathway.references">
 <summary>
 Reference list of this biological pathway
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Pathway.IsContainsModule(System.String)">
 <summary>
 Is current pathway object contains the specific module information?(当前的代谢途径对象是否包含有目标模块信息.)
 </summary>
 <param name="ModuleId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Pathway.GetCompoundCollection(System.String)">
 <summary>
 Imports KEGG compounds from pathways model.
 </summary>
 <param name="ImportsDIR"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Pathway.GetPathwayGenes">
 <summary>
 获取这个代谢途径之中的所有的基因。这个是安全的函数，当出现空值的基因集合的时候函数会返回一个空集合而非空值
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.PathwayMap">
 <summary>
 <see cref="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Pathway.LoadFromResource"/>.
 (相对于<see cref="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Pathway"/>而言，这个对象是参考用的，并非某个特定的物种的)
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.PathwayMap.Map">
 <summary>
 base64 image data.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.PathwayMap.KEGGOrthology">
 <summary>
 http://www.genome.jp/dbget-bin/get_linkdb?-t+orthology+path:map01100
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.PathwayMap.KEGGCompound">
 <summary>
 http://www.genome.jp/dbget-bin/get_linkdb?-t+compound+path:map01100
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.PathwayMap.KEGGGlycan">
 <summary>
 http://www.genome.jp/dbget-bin/get_linkdb?-t+glycan+path:map01100
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.PathwayMap.KEGGEnzyme">
 <summary>
 http://www.genome.jp/dbget-bin/get_linkdb?-t+enzyme+path:map01100
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.PathwayMap.KEGGReaction">
 <summary>
 http://www.genome.jp/dbget-bin/get_linkdb?-t+reaction+path:map01100
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.PathwayMap.DownloadPathwayMap(System.String,System.String,System.String)">
 <summary>
 下载pathway的图片
 </summary>
 <param name="sp$"></param>
 <param name="entry$"></param>
 <param name="EXPORT$"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction">
 <summary>
 KEGG reaction annotation data.
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction.ID">
 <summary>
 代谢反应的KEGG编号，格式为``R\d+``，同时这个属性也是<see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IKeyedEntity`1.Key"/>
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction.Equation">
 <summary>
 使用KEGG compound编号作为代谢物的反应过程的表达式
 </summary>
 <returns></returns>
 
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction.Enzyme">
 <summary>
 标号： <see cref="P:SMRUCC.genomics.Assembly.Expasy.Database.Enzyme.Identification"></see>
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction.Orthology">
 <summary>
 KO list
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction.Class">
 <summary>
 The reaction class
 </summary>
 <returns></returns>
 
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction.polymers">
 <summary>
 + (...)
 + m
 + n
 + [nm]-1
 + [nm]+1
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction.ReactionModel">
 <summary>
 从<see cref="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction.Equation"/>属性值字符串创建一个代谢过程的模型
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction.Reversible">
 <summary>
 这个反应过程是否是可逆的代谢反应？
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction.GetSubstrateCompounds">
 <summary>
 得到本反应过程对象中的所有的代谢底物的KEGG编号，以便于查询和下载
 </summary>
 <returns>
 a collection of the kegg id from the substrate list and product list
 </returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction.IsConnectWith(SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction)">
 <summary>
 通过查看化合物的编号是否有交集来判断这两个代谢过程是否是应该相连的？
 </summary>
 <param name="[next]"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.ReactionClass">
 <summary>
 represents a collection of the kegg <see cref="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction"/> data model which 
 are have similar compound structure transformation result.
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.ReactionClass.reactantPairs">
 <summary>
 ``CXXXXX -> CYYYYY`` 
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.ReactionClass.ScanRepository(System.String,System.Boolean)">
 <summary>
 scan a directory for load <see cref="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.ReactionClass"/> data stream from this repository folder.
 </summary>
 <param name="repository">a directory which contains reaction class xml model files</param>
 <param name="loadsAll">load all models files or distinct(ignores duplicated in different class category)</param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.ReactionCompoundTransform">
 <summary>
 反应左端代谢物在经过了代谢反应之后结果上的转换变化的结果（反应的右端）
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.ReactionCompoundTransform.from">
 <summary>
 the kegg compound id
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.ReactionCompoundTransform.to">
 <summary>
 the kegg compound id
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reference">
 <summary>
 参考文献
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reference.#ctor(System.String[])">
 <summary>
 解析Disease文件之中的参考文献数据
 </summary>
 <param name="meta$"></param>
 <remarks>
 Example as:
 
 ```
 REFERENCE   PMID:19585782 (description, env_factor)
   AUTHORS   Larsen JC, Johnson NH
   TITLE     Pathogenesis Of Burkholderia pseudomallei And Burkholderia mallei.
   JOURNAL   Mil Med 174:647-51 (2009)
 ```
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.SSDB.Enzyme.entry">
 <summary>
 The ``EC`` number
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.SSDB.Enzyme.reactions">
 <summary>
 The kegg reaction id list
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.SSDB.Ortholog">
 <summary>
 ``*.csv``
 
 > http://www.kegg.jp/ssdb-bin/ssdb_best?org_gene=sp:locus_tag
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.SSDB.Ortholog.LocusId">
 <summary>
 query_name
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.SSDB.Orthology">
 <summary>
 KEGG KO分类
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.SSDB.OrthologREST">
 <summary>
 蛋白质直系同源比对blastp结果, ``*.xml``
 </summary>
 <remarks>
 在直系同源的数据被下载下来之后，这个对象会被直接保存为Xml文档
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.SSDB.OrthologREST.Orthologs">
 <summary>
 直系同源的蛋白质比对结果
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.ReferenceMap.ReferenceReaction.SSDBs">
 <summary>
 酶分子的直系同源的参考序列
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.DBGET.ReferenceMap.ReferenceMapData">
 <summary>
 KEGG数据库之中的参考途径
 </summary>
 <remarks></remarks>
 
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.DBGET.ReferenceMap.ReferenceMapData.ReferenceGenes">
 <summary>
 直系同源的参考基因
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.Extensions.KEGGCompoundIDPatterns">
 <summary>
 + C compound
 + D drug
 + G glycan
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Extensions.GetIDpairedList(System.String)">
 <summary>
 这个主要是应用于ID mapping操作的拓展函数
 </summary>
 <param name="text$">
 Example as the text data in the kegg drugs or kegg disease object:
 
 ```
 E2A-PBX1 (translocation) [HSA:6929 5087] [KO:K09063 K09355]
 ```
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Extensions.DirectGetChEBI(SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Compound)">
 <summary>
 Example as: ``[ChEBI] 16810``
 </summary>
 <param name="cpd"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Extensions.IDlistStrings(System.String,System.String[])">
 <summary>
 
 </summary>
 <param name="tag$"></param>
 <param name="list$"></param>
 <returns>
 Example as:
 
 ```
 HSA:6929 5087
 ```
 </returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Extensions.ValidateEntryFormat(System.String)">
 <summary>
 检测判断所输入的字符串是否是符合格式要求的？
 </summary>
 <param name="s$"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Extensions.TheSameAs(System.String[])">
 <summary>
 Example as:
 
 ```
 Same as: C00001
 ```
 </summary>
 <param name="s$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Extensions.RemarksTable``1(``0)">
 <summary>
 将Remarks数据转换为字典对象
 </summary>
 <typeparam name="T"></typeparam>
 <param name="o"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Extensions.TheSameAs``1(``0)">
 <summary>
 得到和这个药物同义的KEGG代谢物编号, 返回来的字符串可能会包含有多个ID编号
 例如C\d+和G\d+可能会同时出现
 </summary>
 <typeparam name="T"></typeparam>
 <param name="o"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Extensions.GetPathwayBrite(System.Collections.Generic.Dictionary{System.String,SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.Pathway},System.String)">
 <summary>
 这个函数会自动将物种的KEGG前缀去除掉，从而能够直接匹配字典之中的键名
 </summary>
 <param name="table"></param>
 <param name="ID$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Extensions.DoKeggProfiles(System.Collections.Generic.Dictionary{System.String,System.Double},System.Int32)">
 <summary>
 
 </summary>
 <param name="profiles">[kegg_pathwayMapId -> value]</param>
 <param name="displays"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Extensions.LevelAKOStatics(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}},SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.KOCatalog[]@,System.Boolean)">
 <summary>
 
 </summary>
 <param name="mappings">``{geneID -> KO}`` mapping data collection.</param>
 <param name="keepsZERO">默认不保存计数为零的分类</param>
 <returns>这个函数所返回去的数据一般是用作于绘图操作的</returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Medical.Disease.Comments">
 <summary>
 多行数据已经join过了的单行字符串
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Medical.ClassInheritance.IsAgent">
 <summary>
 是否为药物
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Medical.ClassInheritance.IsAminoAcid">
 <summary>
 是否为氨基酸
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.Medical.ClassInheritance.IsAntiInflammatory">
 <summary>
 是否为消炎药物
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.Medical.Drug">
 <summary>
 药物分子的注释信息
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.Medical.DrugParser">
 <summary>
 解析KEGG ftp服务器上面的药物数据模型
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Medical.DrugParser.ParseStream(System.String)">
 <summary>
 解析药物数据库的文件
 </summary>
 <param name="pathOrDoc$">文件路径或者文件的文本内容</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Medical.DrugParser.CreateDrugModel(System.Func{System.String,System.String[]})">
 <summary>
 
 </summary>
 <param name="getValue">数据源的函数指针</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Medical.DrugParser.ParseStream(System.String[],SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reference[]@)">
 <summary>
 
 </summary>
 <param name="lines$"></param>
 <param name="ref">假设参考文献都是在每一个小节最末尾的部分</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Medical.Extensions.DrugTargetGenes(SMRUCC.genomics.Assembly.KEGG.Medical.Drug)">
 <summary>
 从<see cref="P:SMRUCC.genomics.Assembly.KEGG.Medical.Drug.Targets"/>属性之中解析出``geneID``列表
 </summary>
 <param name="drug"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.Medical.Extensions.CompoundsDrugs(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.KEGG.Medical.Drug})">
 <summary>
 Using remarks the ``same as`` map compound to drug
 </summary>
 <param name="drugs"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.FetchSequence.parseSeqHtml(System.String,System.Type)">
 <summary>
 解析从KEGG数据库下载基因或者蛋白序列数据
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.WebServices.InternalWebFormParsers.WebForm">
 <summary>
 parser for the kegg form data text, example like request text 
 content from the rest: ``https://rest.kegg.jp/get/hsa00592``
 (KEGG 网页表格的数据解析方法，在Value之中可能会有重复的Key数据出现)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.WebServices.InternalWebFormParsers.WebForm._strData">
 <summary>
 Entry, {trim_formatted, non-process}
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.WebServices.InternalWebFormParsers.WebForm.References">
 <summary>
 Reference list of this biological object
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.InternalWebFormParsers.WebForm.#ctor(System.String,System.Boolean)">
 <summary>
 这个构造函数同时支持url或者文本内容
 </summary>
 <param name="resource"></param>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.InternalWebFormParsers.WebForm.GetValue(System.String)">
 <summary>
 获取某一个字段的数据
 </summary>
 <param name="KeyWord">网页的表格之中的最左端的字段名</param>
 <returns>
 this is a null safe function: key not found will 
 returns an empty collection.
 </returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.WebServices.KGML.Link">
 <summary>
 Network edges
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.WebServices.KGML.entry">
 <summary>
 Network nodes
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.WebServices.KGML.pathway">
 <summary>
 The kegg pathway map data in KGML file format.
 
 + pathway map: http://www.kegg.jp/kegg-bin/download?entry=xcb00280&amp;format=kgml
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.WebServices.LocalRender">
 <summary>
 KEGG pathway map local rendering engine
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.WebServices.LocalRender.mapTable">
 <summary>
 Index by map id
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.LocalRender.#ctor(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Map}},System.Boolean)">
 <summary>
 因为KEGG的对应物种的pathway map都是来自于标准的pathway map
 所以他们的数字id都是一样的，在这里会将id解析为数字id
 </summary>
 <param name="maps"></param>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.LocalRender.GetTitle(System.String)">
 <summary>
 Get display title of the target pathway map
 </summary>
 <param name="mapName$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.LocalRender.FromRepository(System.String,System.Boolean)">
 <summary>
 Create renderer from a directory which contains required map file.
 </summary>
 <param name="repo$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.LocalRender.IteratesMapNames(System.String[],System.Int32)">
 <summary>
 函数返回``{mapName -> idlist}``，其中idlist为产生交集的编号列表
 </summary>
 <param name="list$"></param>
 <param name="threshold%"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.LocalRender.Rendering(System.String,System.Drawing.Font,System.String,System.String)">
 <summary>
 解析url之中的数据，将指定的基因按照给定的颜色进行高亮显示
 </summary>
 <param name="url$"></param>
 <param name="font"></param>
 <param name="textColor$"></param>
 <param name="scale$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.LocalRender.Rendering(System.String,SMRUCC.genomics.Assembly.KEGG.WebServices.MapHighlights,System.Drawing.Font,System.String,System.String)">
 <summary>
 
 </summary>
 <param name="mapName$"></param>
 <param name="nodes">``{id -> color}``</param>
 <param name="font"></param>
 <param name="textColor$"></param>
 <param name="scale$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.LocalRender.renderGenes(Microsoft.VisualBasic.Imaging.Graphics2D@,System.Drawing.Font,System.Drawing.Brush,SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Map,System.Drawing.SizeF,SMRUCC.genomics.Assembly.KEGG.WebServices.MapHighlights)">
 <summary>
 rect
 </summary>
 <param name="g"></param>
 <param name="map"></param>
 <param name="list"></param>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.LocalRender.renderCompound(Microsoft.VisualBasic.Imaging.Graphics2D@,System.Drawing.Font,SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Map,System.Drawing.SizeF,Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}[])">
 <summary>
 circle
 </summary>
 <param name="g"></param>
 <param name="map"></param>
 <param name="list"></param>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.LocalRender.CompoundShapeDrawing(Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String},System.Collections.Generic.Dictionary{System.String,Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Area[]}},System.Drawing.Font,Microsoft.VisualBasic.Imaging.Graphics2D,System.Drawing.SizeF,System.Drawing.SizeF)">
 <summary>
 
 </summary>
 <param name="id"></param>
 <param name="shapes"></param>
 <param name="font"></param>
 <param name="g"></param>
 <param name="scale"></param>
 <param name="scaleCircle">通用的缩放</param>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.WebServices.MapHighlights">
 <summary>
 mix rendering
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.MapHighlights.CheckTextColorWarning(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}},System.Drawing.Color)">
 <summary>
 warning about the elements which has the plot color that the same as the text color,
 
 example as: text color is white, and the gene color is white, so that we will could not
 read the text label, due to the reason of the color of these two element are the same.
 </summary>
 <param name="highlights"></param>
 <param name="text_color"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.MapHighlights.CreateAuto(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}})">
 <summary>
 check highlights automatically via kegg id prefix
 </summary>
 <param name="list"></param>
 <returns></returns>
 <remarks>
 can not determine the gene/proteins at here
 </remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.WebServices.MapIndex">
 <summary>
 a subclass of <see cref="T:SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Map"/>
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.WebServices.MapIndex.index">
 <summary>
 KO, compoundID, reactionID, etc.
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.WebServices.MapRepository">
 <summary>
 The repository xml data of kegg <see cref="T:SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Map"/>
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.WebServices.MapRepository.table">
 <summary>
 Get by ID
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.MapRepository.QueryMapsByMembers(System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 query all pathway maps which is contains any <paramref name="entity"/> id list.
 </summary>
 <param name="entity"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.MapRepository.BuildRepository(System.String,System.Boolean)">
 <summary>
 
 </summary>
 <param name="directory">The reference map download directory</param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.MapRepository.GetMapsAuto(System.String)">
 <summary>
 scan directory or load from a xml pack file
 </summary>
 <param name="repository"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.MapRepository.GenericEnumerator">
 <summary>
 因为<see cref="T:SMRUCC.genomics.Assembly.KEGG.WebServices.MapIndex"/>是直接继承至<see cref="T:SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Map"/>对象类型的，所以在这里可以直接返回这个序列
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.WebServices.URLEncoder">
 <summary>
 The kegg pathway map url encoder
 
 pattern:
 
 ```
 http://www.genome.jp/kegg-bin/show_pathway?{pathway_ID}/{geneID}%09{color}/{geneID}%09{color}/{geneID}%09{color}
 ```
 </summary>
 <remarks>
 Generates the enrichment term result for kegg url example like:
 http://www.genome.jp/kegg-bin/show_pathway?hsa03013/hsa:8563%09red/hsa:3837%09red/hsa:1983%09red/hsa:4686%09red/hsa:1974%09red/hsa:23165%09red/hsa:9688%09red/hsa:57510%09red/hsa:7514%09red/hsa:60528%09red/hsa:1981%09red/hsa:51068%09red/hsa:5905%09red/hsa:1917%09red/hsa:57187%09red/hsa:1977%09red/hsa:8894%09red/hsa:79023%09red/hsa:8891%09red/hsa:8890%09red/hsa:8893%09red/hsa:8892%09red/hsa:11260%09red/hsa:79902%09red/hsa:8669%09red/hsa:26986%09red/hsa:9984%09red/hsa:23191%09red/hsa:26019%09red/hsa:79228%09red/hsa:1965%09red/hsa:9669%09red
 </remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.URLEncoder.URLParser(System.String)">
 <summary>
 
 </summary>
 <param name="urlStr">
 + http://www.genome.jp/kegg-bin/show_pathway?{pathway_ID}/{geneID}%09{color}/{geneID}%09{color}/{geneID}%09{color}
 + https://www.kegg.jp/pathway/map00121+C00695%09blue+C01921%09blue+C05466%09blue+C07880%09blue
 + http://www.kegg.jp/pathway/mmu04140+C00035+C00044
 + http://www.kegg.jp/pathway/map01230/C00037/red/C00049/blue
 + http://www.kegg.jp/pathway/hsa00860/C00430/blue/C06416/blue
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.URLEncoder.URLParser3(System.String)">
 <summary>
 
 </summary>
 <param name="url">mmu04140+C00035+C00044</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.URLEncoder.URLParser2(System.String)">
 <summary>
 
 </summary>
 <param name="url">http://www.kegg.jp/pathway/map01230/C00037/red/C00049/blue</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.URLEncoder.URLParser1(System.String)">
 <summary>
 ``{id -> color}``
 </summary>
 <param name="url">
 http://www.genome.jp/kegg-bin/show_pathway?{pathway_ID}/{geneID}%09{color}/{geneID}%09{color}/{geneID}%09{color}
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.URLEncoder.KEGGURLEncode(Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedCollection{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}})">
 <summary>
 用于可视化差异表达基因或者富集结果
 </summary>
 <param name="profiles"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.URLEncoder.VisualizePathwayMap(Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedCollection{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}},System.String)">
 <summary>
 可视化差异表达基因的代谢途径或者功能富集分析结果的代谢途径
 </summary>
 <param name="profiles"></param>
 <param name="save$"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Area.shape">
 <summary>
 + rect
 + poly
 + circle
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Area.coords">
 <summary>
 位置坐标信息
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Area.Rectangle">
 <summary>
 如果是方块的话，则这个属性代表图上面的方块的参数，包括位置和大小
 如果是圆的话，则这个属性的中心点为圆心，宽度的一半为半径
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Area.Type">
 <summary>
 Compound, Gene, Pathway, Reaction
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Map">
 <summary>
 The kegg reference map
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Map.shapes">
 <summary>
 节点的位置，在这里面包含有代谢物(小圆圈)以及基因(方块)的位置定义
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Map.PathwayImage">
 <summary>
 base64 image
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Map.GetMembers">
 <summary>
 Get all member id list from this pathway map object.
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Map.GetPathwayGenes">
 <summary>
 
 </summary>
 <returns>
 a unique set of the gene id
 </returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.XML.Map.GetCompoundSet">
 <summary>
 
 </summary>
 <returns>
 a unique set of the kegg compound id
 </returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.WebServices.XML.MapData.mapdata">
 <summary>
 the pathway map data
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.WebServices.XML.MapData.module_mapdata">
 <summary>
 the module network data
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.WebServices.PathwayMapping">
 <summary>
 需要程序处于联网状态
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.PathwayMapping.Reconstruct(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}},System.Boolean,System.String)">
 <summary>
 ###### KEGG Mapper – Reconstruct Pathway
 
 > http://www.genome.jp/kegg/tool/map_pathway.html
 
 **Reconstruct Pathway** is a KEGG PATHWAY mapping tool that assists genome and metagenome annotations. 
 The input data is a single gene list (for a single organism) or multiple gene lists (for multiple 
 organisms) annotated with KEGG Orthology (KO) identifiers or K numbers. Each line of the gene list 
 contains the user-defined gene identifier followed by, if any, the assigned K number. The mapping is 
 performed through the K numbers against the KEGG reference pathways. 
 </summary>
 <param name="list$">Enter gene list with KO annotation(line format:  ``geneID\tKO``)</param>
 <param name="globalmap">Include global/overview maps</param>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.PathwayMapping.Reconstruct(System.String,System.Boolean,System.String)">
 <summary>
 ###### KEGG Mapper – Reconstruct Pathway
 
 > http://www.genome.jp/kegg/tool/map_pathway.html
 
 **Reconstruct Pathway** is a KEGG PATHWAY mapping tool that assists genome and metagenome annotations. 
 The input data is a single gene list (for a single organism) or multiple gene lists (for multiple 
 organisms) annotated with KEGG Orthology (KO) identifiers or K numbers. Each line of the gene list 
 contains the user-defined gene identifier followed by, if any, the assigned K number. The mapping is 
 performed through the K numbers against the KEGG reference pathways. 
 </summary>
 <param name="list$">Enter gene list with KO annotation</param>
 <param name="globalmap">Include global/overview maps</param>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.PathwayMapping.ColorPathway(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
 <summary>
 **Search&amp;Color Pathway** is an advanced version of the KEGG pathway mapping tool, where given objects 
 (genes, proteins, compounds, glycans, reactions, drugs, etc.) are searched against KEGG pathway 
 maps and found objects are marked in any background and foreground colors (bgcolor and fgcolor). 
 The objects in different types of pathway maps are specified by the following KEGG identifiers 
 and aliases. 
 
 > http://www.kegg.jp/kegg/tool/map_pathway2.html
 </summary>
 <param name="list$"></param>
 <param name="work$"></param>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.PathwayMapping.GetKOlist(System.Collections.Generic.IEnumerable{System.String},System.String)">
 <summary>
 
 </summary>
 <param name="geneIDs"></param>
 <param name="DIR$">
 文件夹之中存放着以基因号为文件名的<see cref="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.SSDB.OrthologREST"/>Xml
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.PathwayMapping.KOCatalog(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}},System.Collections.Generic.Dictionary{System.String,SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText})">
 <summary>
 KEGG直系同源分类统计
 </summary>
 <param name="KO_maps">``{geneID -> KO}`` map data collection.</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.PathwayMapping.KOCatalog(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}})">
 <summary>
 KEGG直系同源分类统计
 </summary>
 <param name="KO_maps">``{geneID -> KO}`` map data collection.</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.PathwayMapping.DefaultKOTable">
 <summary>
 Build default from <see cref="M:SMRUCC.genomics.Assembly.KEGG.DBGET.BriteHEntry.BriteHText.Load_ko00001"/>
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.PathwayMapping.KOCatalog(System.Collections.Generic.IEnumerable{Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue{System.String}},System.String)">
 <summary>
 Custom KO classification set can be download from: http://www.kegg.jp/kegg-bin/get_htext?ko00001.keg. 
 You can replace the %s mark Using kegg organism code In url example As: 
 http://www.kegg.jp/kegg-bin/download_htext?htext=%s00001&amp;format=htext&amp;filedir= for download the custom KO classification set.
 </summary>
 <param name="KO_maps"></param>
 <param name="ko00001$">User custom classification database</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.PathwayMapping.CustomPathwayTable(System.String)">
 <summary>
 http://www.kegg.jp/kegg-bin/get_htext?ko00001.keg
 </summary>
 <param name="ko00001$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.PathwayMapping.ShowEnrichmentPathway(System.String,System.String)">
 <summary>
 url can be encoding by <see cref="T:SMRUCC.genomics.Assembly.KEGG.WebServices.URLEncoder"/>
 </summary>
 <param name="url$">
 Example as: http://www.genome.jp/kegg-bin/show_pathway?aor01100/aor:AOR_1_348154%09red/aor:AOR_1_1018164%09red/aor:AOR_1_46074%09red/aor:AOR_1_1132054%09red/aor:AOR_1_1796154%09red/aor:AOR_1_724024%09red/aor:AOR_1_980074%09red/aor:AOR_1_132064%09red/aor:AOR_1_936184%09red/aor:AOR_1_750024%09red/aor:AOR_1_858084%09red/aor:AOR_1_920184%09red/aor:AOR_1_1152144%09red/aor:AOR_1_1464054%09red/aor:AOR_1_506014%09red/aor:AOR_1_26114%09red/aor:AOR_1_654074%09red/aor:AOR_1_336094%09red/aor:AOR_1_700094%09red/aor:AOR_1_2326154%09red/aor:AOR_1_448144%09red/aor:AOR_1_1152014%09red/aor:AOR_1_964164%09red/aor:AOR_1_556094%09red/aor:AOR_1_76084%09red/aor:AOR_1_2070174%09red/aor:AOR_1_664034%09red/aor:AOR_1_890144%09red/aor:AOR_1_1888174%09red/aor:AOR_1_2198154%09red/aor:AOR_1_598144%09red/aor:AOR_1_1676014%09red/aor:AOR_1_1160154%09red/aor:AOR_1_362184%09red/aor:AOR_1_236174%09red/aor:AOR_1_514024%09red/aor:AOR_1_1554054%09red/aor:AOR_1_2706174%09red/aor:AOR_1_1692144%09red/aor:AOR_1_1046084%09red/aor:AOR_1_340154%09red/aor:AOR_1_968134%09red/aor:AOR_1_562034%09red/aor:AOR_1_1214024%09red/aor:AOR_1_1124054%09red/aor:AOR_1_988014%09red/aor:AOR_1_780164%09red/aor:AOR_1_622134%09red/aor:AOR_1_284154%09red/aor:AOR_1_968024%09red/aor:AOR_1_1062184%09red/aor:AOR_1_1274164%09red/aor:AOR_1_1272164%09red/aor:AOR_1_1114084%09red/aor:AOR_1_990184%09red/aor:AOR_1_2146154%09red/aor:AOR_1_1074144%09red/aor:AOR_1_1056134%09red/aor:AOR_1_504114%09red/aor:AOR_1_560024%09red/aor:AOR_1_462144%09red/aor:AOR_1_858054%09red/aor:AOR_1_2842174%09red
 
 Which this enrichment result url can be obtained from KOBAS KEGG enrichment analysis.
 </param>
 <param name="save">File name</param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.WebServices.QuerySource">
 <summary>
 Meta data for query KEGG database
 </summary>
 <remarks>
 The example format as:
 
 ```
 Nostoc sp. PCC 7120
 #
 alr4156
 alr4157
 alr1320
 all0862
 all2134
 all2133
 ......
 ```
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.WebServices.QuerySource.genome">
 <summary>
 The genome name.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.WebServices.QuerySource.locusId">
 <summary>
 The list of gene locus id that using for the query.
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.QuerySource.QuerySpCode(System.Boolean)">
 <summary>
 Gets the brief code of the organism name in the KEGG database.
 (获取得到KEGG数据库里面的物种的简称)
 </summary>
 <returns></returns>
 <param name="offline">Work in offline mode?</param>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.WebServices.ListEntry">
 <summary>
 Search entry
 </summary>
 <remarks>
 ```html
 &lt;a href="/dbget-bin/www_bget?ko:K00001">K00001&lt;/a>               E1.1.1.1, adh; alcohol dehydrogenase [EC:1.1.1.1]
 ```
 </remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.WebServices.ListEntry.entryId">
 <summary>
 The entry data which can be using for downloads data using the KEGG DBGET system.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.WebServices.ListEntry.url">
 <summary>
 The url which indicates the DBGET resource of this <see cref="F:SMRUCC.genomics.Assembly.KEGG.WebServices.ListEntry.entryId">object</see>.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.WebServices.ListEntry.description">
 <summary>
 The brief description information about this <see cref="F:SMRUCC.genomics.Assembly.KEGG.WebServices.ListEntry.entryId">object</see>.
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.WebServices.QueryEntry.speciesID">
 <summary>SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest.QueryEntry
 KEGG species id, the general species string in NCBI database can be mapping through the organism list which can 
 be get from method <see cref="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.EntryAPI.FromResource(System.String)"></see>.(KEGG
 数据库中的物种ID编号的简写形式，NCBI数据库中的标准的物种编号可以通过方法<see cref="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Organism.EntryAPI.FromResource(System.String)"></see>
 来进行映射)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.KEGG.WebServices.QueryEntry.locusID">
 <summary>
 LocusId in the NCBI database.(NCBI数据库中的基因号)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest">
 <summary>
 KEGG web query request handler.(KEGG数据库web查询处理模块)
 
 ``KEGG``是一个代谢图，收录基因和基因组的数据库，数据库可以分为 3 大部分，基因数据库，化学分子物质数据库，以及基于基因和化学分子物质相互关系而建立起来的代谢路径数据库，
 在KEGG数据库中，有一个“专有名词”KO（KEGG Orthology），它是蛋白质（酶）的一个分类体系，序列高度相似，并且在同一条通路上有相似功能的蛋白质被归为一组，然后打上KO
 （或K标签，KEGG orthology (ko)代表的是某个代谢途径，k代表的是某个酶，c代表的是某个化合物，M代表的是某个模块，后面都会跟着编号。图中的正方形代表酶，圆形代表代谢物，
 ``5.4.4.4``代表的是EC编号。
 </summary>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest.GetText(SMRUCC.genomics.Assembly.KEGG.WebServices.InternalWebFormParsers.WebForm,System.String)">
 <summary>
 得到表格之中的某一项的文本值
 </summary>
 <param name="form"></param>
 <param name="key$"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest.GetFastaSequenceMethod">
 <summary>
 The unify interface for gets the data from KEGG database.(从KEGG数据库获取序列数据以及从本底的数据库之中获取序列数据的统一接口)
 </summary>
 <param name="speciesId">The KEGG brief code of the species genome.(物种简号)</param>
 <param name="LocusID">The GeneID.(基因号)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest.FetchSeq(System.String,System.String)">
 <summary>
 Download a protein sequence data from the KEGG database.
 (从KEGG数据库之中下载一条蛋白质分子序列)
 </summary>
 <param name="specieId">KEGG species id.(KEGG物种编号)</param>
 <param name="accessionId">NCBI gene locus tag.(NCBI基因编号)</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest.FetchNt(System.String,System.String)">
 <summary>
 Fetch the nucleotide sequence fasta data from the kegg database.
 </summary>
 <param name="specieId"></param>
 <param name="accessionId"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest.FetchNt(SMRUCC.genomics.Assembly.KEGG.WebServices.QueryEntry)">
 <summary>
 Fetch the nucleotide sequence fasta data from the kegg database.
 </summary>
 <param name="entry"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest.FetchSeq(SMRUCC.genomics.Assembly.KEGG.WebServices.QueryEntry)">
 <summary>
 Download a protein sequence data from the KEGG database.(从KEGG数据库之中下载一条蛋白质分子序列)
 </summary>
 <param name="entry">KEGG sequence query entry.(KEGG数据库的分子序列查询入口点)</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest.HandleQuery(System.String)">
 <summary>
 Get an entry list from a keyword throught the KEGG database web request.``{(speciesId:AccessionId), entry_description}``
 </summary>
 <param name="keyword"></param>
 <returns>如果没有任何结果则返回一个空列表</returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest.HandleQuery(System.String,System.Int32)">
 <summary>
 Get an entry list from a keyword throught the KEGG database web request.``{(speciesId:AccessionId), entry_description}``
 </summary>
 <param name="keyword"></param>
 <returns>如果没有任何结果则返回一个空列表</returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest.BatchQuery(System.String,System.Int32)">
 <summary>
 Batch query protein sequence fasta data from the KEGG server.
 </summary>
 <param name="keyword"></param>
 <param name="limit">大批量的数据查询会不会被KEGG封IP？，可以使用本参数来控制数据的返回量</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest.DownloadSequence(System.String)">
 <summary>
 Download fasta sequence data from KEGG database, this function will automatically handles the species brief code.
 </summary>
 <param name="id"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest.GetQueryEntry(System.String)">
 <summary>
 Handle query for a gene locus from KEGG
 </summary>
 <param name="locus_id"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest.DownloadsBatch(System.String,System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 同一个基因组内的蛋白质的序列下载推荐使用这个方法来完成，这个方法KEGG服务器的负担会比较轻
 </summary>
 <returns></returns>
 
</member>
<member name="F:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest._16S_rRNA">
 <summary>
 都定义在这个地方了。。。。
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest.Download16S_rRNA(System.String)">
 <summary>
 http://www.genome.jp/dbget-bin/www_bget?ko:K01977
 
 这个函数先下载单独的16sRNA序列，然后再合并为同一个大文件返回
 </summary>
 <param name="outDIR"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.KEGG.WebServices.WebRequest.GetSpCode(System.String)">
 <summary>
 从KEGG服务器上面得到基因组的摘要代码
 </summary>
 <param name="locusId"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Extensions.ContactLines(System.String[])">
 <summary>
 不会保留PGDB中的断行
 </summary>
 <param name="source"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.AttributeValue">
 <summary>
 Attribute-Value: Each attribute-value file contains data for one class of objects,
 such as genes or proteins. A file is divided into entries, where one entry describes
 one database object.
 </summary>
 <remarks>
 An entry consists of a set of attribute-value pairs, •which describe properties of
 the object, and relationships of the object to other object. Each attribute-value
 pair typically resides on a single line of the file, although in some cases for
 values that are long strings, the value will reside on multiple lines. An attribute-
 value pair consists of an attribute name, followed by the string " - " and a value,
 for example:

 LEFT - NADP

 A value that requires more than one line is continued by a newline followed by a /.
 Thus, literal slashes at the beginning of a line must be escaped as //. A line that
 contains only // separates objects. Comment lines can be anywhere in the file and
 must begin with the following symbol:

 #

 Starting in version 6.5 of Pathway Tools, attribute-value files can also contain
 annotation-value pairs. Annotations are a mechanism for attaching labeled values
 to specific attribute values. For example, we might want to specify a coefficient
 for a reactant in a chemical reaction. An annotations refers to the attribute value
 that immediately precedes the annotation.
 An annotation-value pair consists of a caret symbol "^" that points upward to indicate
 that the annotation annotates the preceding attribute value, followed by the annotation
 label, followed by the string " - ", followed by a value. The same attribute name or
 annotation label with different values can appear any number of times in an object.
 An example annotation-value pair that refers to the preceding attribute-value pair is:

 LEFT - NADP
 ^COEFFICIENT - 1
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.AttributeValue.DbProperty">
 <summary>
 The database property in the head section.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.AttributeValue.Objects">
 <summary>
 Slots objects reader model.
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.DataFile`1">
 <summary>
 All of the data file object in the metacyc database will be inherits from this class object type.
 (在MetaCyc数据库之中的所有元素对象都必须要继承自此对象类型)
 </summary>
 <typeparam name="T"></typeparam>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.DataFile`1.Select2(System.String)">
 <summary>
 使用Index对象进行对象实例目标的查找操作
 </summary>
 <param name="UniqueId"></param>
 <returns></returns>
 <remarks>请务必要确保Index的顺序和FrameObjects的顺序一致</remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.DataFile`1.Takes(System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 Takes a sub list of the elements that were pointed by the unique-id collection.
 (获取一个UniqueId集合所指向的对象元素列表，会自动过滤掉不存在的UniqueId值)
 </summary>
 <param name="uids">
 The unique-id collection of the objects that wants to take from the list obejct.
 (将要从本列表对象获取的对象的唯一标识符的集合)
 </param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.DataFile`1.Select(`0,System.String[])">
 <summary>
 使用值比较来查询出目标对象列表
 </summary>
 <param name="Object"></param>
 <param name="Fields"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.DataFile`1.Select(`0,System.Reflection.PropertyInfo[],SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.MetaCycField[],System.Boolean)">
 <summary>
 本函数较[Select]([Object] As T, ParamArray Fields As String())函数有着更高的查询性能
 </summary>
 <param name="Object"></param>
 <param name="ItemProperties">所缓存的类型信息</param>
 <param name="FieldAttributes">所缓存的类型信息</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.DataFile`1.AttributeList">
 <summary>
 BaseType Attribute List is empty.
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.DataFile`1.Clear">
 <summary>
 Clear all of the data that exists in this list object.(将本列表对象中的所有的数据进行清除操作)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.DataFile`1.IndexOf(System.String)">
 <summary>
 Locate the target object using its unique id property, this function will return the location point of 
 the target object in the list if we found it or return -1 if the object was not found.
 (使用目标对象的唯一标识符属性对其进行在本列表对象中的定位操作，假若查找到了目标对象则返回其位置，反之则返回-1值)
 </summary>
 <param name="UniqueId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.DataFile`1.Add(`0)">
 <summary>
 Adding the target element object instance into the current list object, if the target element is 
 already exists in the list object then not add the target object and return its current position 
 in the list or add the target object into the list when it is not appear in the list object and 
 then return the length of the current list object.
 (将目标元素对象添加至当前的列表之中，假若目标对象存在于列表之中，则进行添加并返回列表的最后一个元素的位置，
 否则不对目标元素进行添加并返回目标元素在列表中的当前位置)
 </summary>
 <param name="x">
 The target element that want to added into the list object.(将要添加进入列表之中的目标元素对象)
 </param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.DataFile`1.Append(`0)">
 <summary>
 Just add the element into the current list object and return the length of it, this method is fast than [Add(T) As Long] function, 
 but an element duplicate error may occur.
 (仅仅只是将目标元素添加进入当前的列表对象之中并返回添加了该元素的列表对象的新长度，本方法的速度要快于Add方法，但是可能会出现列表元素重复的错误) 
 </summary>
 <param name="e">
 The element that will be add into the current list object.(将要添加进入当前的列表对象的目标元素对象)
 </param>
 <returns>The length of the current list object.(当前列表元素的长度)</returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.DataFile`1.Item(System.String)">
 <summary>
 Get a object from current list object using its <see cref="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object.Identifier">unique-id</see> property.(根据一个对象的Unique-Id字段的值来获取该目标对象，查询失败则返回空值)
 </summary>
 <param name="key"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.DataFile`1.NumOfTokens">
 <summary>
 The length of the current list objetc.(当前的列表对象的长度)
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Compounds">
 <summary>
 该细胞系统中的所有的小分子化合物的集合，本集合取决于代谢网络的结构以及控制物质跨膜运输的蛋白质
 </summary>
 <remarks>
 对于Compounds表而言，由于其包含的对象仅为小分子的代谢物，故而大分子的蛋白质分子不会出现在此列表之中
 </remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Compounds.GetObject(System.String)">
 <summary>
 Get an object instance in the compounds table using its common name or synonymous name.
 </summary>
 <param name="CommonName"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Compounds.LoadCompoundsData(System.String)">
 <summary>
 Tested load method.
 </summary>
 <param name="path"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.DNABindSites">
 <summary>
 This class describes DNA regions that are binding sites for transcription factors.
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Enzrxns">
 <summary>
 Frames in the class Enzymatic-Reactions describe attributes of an enzyme with respect 
 to a particular reaction. For reactions that are catalyzed by more than one enzyme, 
 or for enzymes that catalyze more than one reaction, multiple Enzymatic-Reactions 
 frames are created, one for each enzyme/reaction pair. For example, Enzymatic-Reactions 
 frames can represent the fact that two enzymes that catalyze the same reaction may be 
 controlled by different activators and inhibitors.
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Genes">
 <summary>
 Each frame in the class Genes describes a single gene, meaning a region of DNA that defines a 
 coding region for one or more gene products. Multiple gene products may be produced because 
 of modification of an RNA or protein.
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Genes.GetAllGeneIds">
 <summary>
 获取所有基因对象的UniqueId所组成的集合
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Genes.TryParsePromoters(SMRUCC.genomics.SequenceModel.FASTA.FastaSeq)">
 <summary>
 尝试着取出所有的基因对象的启动子序列，结果不是很准确，请慎用！！！
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Pathways">
 <summary>
 Frames in class Pathways encode metabolic and signaling pathways.
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Promoters">
 <summary>
 Frames in this class define transcription start sites.
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Promoters.GetPromoters(SMRUCC.genomics.SequenceModel.FASTA.FastaSeq)">
 <summary>
 获取所有的启动子的序列的集合
 </summary>
 <param name="Genome"></param>
 <returns></returns>
 <remarks>启动子的序列长度取250bp</remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.ProteinFeatures">
 <summary>
 Protein features (for example, active sites), This file lists all the protein 
 features (such as active sites) in the PGDB. /* protein-features.dat */
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Proteins">
 <summary>
 本文件中列举出了所有的蛋白质复合物(CPLX)以及单体蛋白(MONOMER)
 </summary>
 <remarks>
 对于某一种蛋白质而言，其以单体形式存在的时候，没有催化能力，但是在形成了蛋白质复合物之后，具备了催化能力
 </remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Proteins.GetProteinComplexByComponent(System.String)">
 <summary>
 递归的使用一个组分对象的UniqueId属性值查询出包含其所有的蛋白质复合物
 </summary>
 <param name="Component">Component列表中的一个元素</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.ProtLigandCplxes">
 <summary>
 The file lists all the complexes of proteins with small-molecule ligands in the PGDB.
 (在本文件中列出了本菌种内的所有与小分子配基所形成的蛋白质复合物)
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reactions">
 <summary>
 Frames within the Reactions class describe properties of a biochemical reaction independent
 of any enzyme or enzymes that catalyze that reaction. A reaction is a biochemical
 transformation that interconverts two sets of chemical compounds (which includes small
 metabolites, proteins, and DNA regions), and may translocate compounds from one cellular
 compartment to another. Most reactions are written in a conventional direction that
 has been assigned by the Enzyme Nomenclature Commission, but that direction may or
 may not be the predominate physiological direction of the reaction. Reaction substrates
 can include small-molecular-weight compounds (for metabolic reactions), proteins (such
 as in signaling pathways), and DNA sites (such as for reactions involving binding of transcription
 factors to DNA).
 </summary>
 <remarks>
 This file lists all chemical reactions in the PGDB.
 (本数据库文件中记录了本菌种内所有的化学反应)
 </remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Regulations">
 <summary>
 This class describes most forms of protein, RNA or activity regulation.
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Regulations.GetRegulationsByRegulator(System.String)">
 <summary>
 查找出某一个指定UniqueId编号值的Regulation集合
 </summary>
 <param name="Regulator">Regulator的UniqueID属性值</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Regulons">
 <summary>
 This file lists all transcription factors in the PGDB and the genes that 
 they regulate by binding upstream of the transcription unit containing 
 those genes.
 (本数据库文件中记录了所有的转录因子以及通过与包含这些基因的转录单元的上游区域
 进行结合而发挥调控作用的基因)
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.TransUnits">
 <summary>
 Frames in this class encode transcription units, which are defined as a set of genes and
 associated control regions that produce a single transcript. Thus, there is a one-to-one
 correspondence between transcription start sites and transcription units. If a set of genes
 is controlled by multiple transcription start sites, then a PGDB should define multiple
 transcription-unit frames, one for each transcription start site.
 (在本类型中所定义的对象编码一个转录单元，一个转录单元定义了一个基因及与其相关联的转录调控DNA片段
 的集合，故而，在本对象中有一个与转录单元相一一对应的转录起始位点。假若一个基因簇是由多个转录起始
 位点所控制的，那么将会在MetaCyc数据库之中分别定义与这些转录起始位点相对应的转录单元【即，每一个
 本类型的对象的属性之中，仅有一个转录起始位点属性】)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.TransUnits.AttributeList">
 <summary>
 定义在转录单元类型之中的所有的属性的列表
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.DataTabular.GeneLink">
 <summary>
 在不同的数据库之间交换数据所需要的对象连接映射，即由PGDB中的Unique映射至通用基因号的关系对象
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.FileStream.ReadingThread`2">
 <summary>
 数据库并发读取线程委托
 </summary>
 <typeparam name="TObject"></typeparam>
 <typeparam name="T"></typeparam>
 <param name="File"></param>
 <param name="Stream"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.FileStream.Generate``1(``0,System.Reflection.PropertyInfo[],SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.MetaCycField[])">
 <summary>
 将一个MetaCyc数据库中的对象转换为字符串
 </summary>
 <typeparam name="TObject"></typeparam>
 <param name="e"></param>
 <param name="props"></param>
 <param name="Fieldattrs"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.FileStream.GetMetaCycField``1(System.Reflection.PropertyInfo[]@,SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.MetaCycField[]@)">
 <summary>
 获取一个MetaCyc记录类型对象的所有域以及相对应的属性信息
 </summary>
 <typeparam name="T"></typeparam>
 <param name="PropertyInfo"></param>
 <param name="FieldAttributes"></param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.FileStream.SplitSlotName(System.String)">
 <summary>
 将字符串按照大写字母进行分割，生成符合MetaCyc字段名称格式的字符串
 </summary>
 <param name="SlotName"></param>
 <returns></returns>
 <remarks>SlotName:  SLOT-NAME</remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.FileStream.Read``2(System.String,``1@)">
 <summary>

 </summary>
 <typeparam name="TObject"></typeparam>
 <typeparam name="T"></typeparam>
 <param name="file"></param>
 <param name="Stream">
 The stream object for output the read data, it must be construct first before call this method.
 (用于输出所读取的数据的流对象，其在调用本函数之前必须被构造出来)
 </param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.FileStream.CType``1(SMRUCC.genomics.Assembly.MetaCyc.File.ObjectModel,System.Reflection.PropertyInfo[],System.Reflection.PropertyInfo[],SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.MetaCycField[])">
 <summary>
 使用反射，将字典之中的数据赋值到相对应的属性之上
 </summary>
 <typeparam name="TObject"></typeparam>
 <param name="om"></param>
 <param name="ItemProperties"></param>
 <param name="FieldAttributes"></param>
 <param name="TSchema"><typeparamref name="TObject"/>的Schema的缓存</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.FileStream.Equals``1(``0,``0,System.String[])">
 <summary>
 使用反射的方法判断两个对象的值是否相同
 </summary>
 <typeparam name="TObject">将要进行判断的对象的具体类型</typeparam>
 <param name="objA"></param>
 <param name="objB"></param>
 <param name="ComparedFields">将要进行比较的域，假若该列表为空的话，则默认比较所有域，对于列表中不存在的域，则忽略</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.FileStream.Equals``1(``0,``0,System.Reflection.PropertyInfo[],SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.MetaCycField[])">
 <summary>
 采用类型信息缓存机制的等价判断函数，请保证ItemProperties和FieldAttributes着两个参数的列表的数目的一致性
 </summary>
 <typeparam name="TObject"></typeparam>
 <param name="objA"></param>
 <param name="objB"></param>
 <param name="ItemProperties"></param>
 <param name="FieldAttributes"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.FileStream.Equals``1(``0,``0,System.Reflection.PropertyInfo[],SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.MetaCycField[],System.Nullable{System.Boolean})">
 <summary>
 采用类型信息缓存机制的等价判断函数，请保证ItemProperties和FieldAttributes着两个参数的列表的数目的一致性，（注意：在本函数中不允许出现空值）
 </summary>
 <typeparam name="TObject"></typeparam>
 <param name="objA"></param>
 <param name="objB"></param>
 <param name="ItemProperties"></param>
 <param name="FieldAttributes"></param>
 <param name="OverloadsNullable">无意义的参数，任意值</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.MetaCycField">
 <summary>
 MetaCyc数据库中的一个对象的一个属性值
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.MetaCycField.Name">
 <summary>
 域名称
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.MetaCycField.Type">
 <summary>
 域类型，提供三种类型：字符，字符串以及字符数组
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.MetaCycField.Types">
 <summary>
 Data field type in a Metacyc database object instance.(MetaCyc数据库中的一个对象实例的数据属性域的数据类型)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.MetaCycField.Types.String">
 <summary>
 A single string type variable.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.MetaCycField.Types.TStr">
 <summary>
 A string array type variable.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Reflection.MetaCycField.Types.Char">
 <summary>
 A single Char type variable.
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.BindReaction">
 <summary>
 Binding reaction between proteins and DNA binding sites such as promoters
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Compound">
 <summary>
 The Class Compounds describe small-molecular-weight chemical compounds — typically,
 compounds that are substrates of metabolic reactions or compounds that activate or
 inhibit metabolic enzymes.
 </summary>
 <remarks>
 One of the component in the Class ProtLigandCplxe (Protein-Small-Molecule-Complexes) with class protein
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Compound.Regulates">
 <summary>
 
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.DNABindSite">
 <summary>
 The class describes DNA regions that are binding sites for transcription factors.
 (本对象描述了一个能够与转录因子相结合的DNA片段)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.DNABindSite.AbsCenterPos">
 <summary>
 This slot defines the position on the replicon of the center of this binding site.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.DNABindSite.InvolvedInRegulation">
 <summary>
 This slot links the binding site to a Regulation frame describing the regulatory 
 interaction in which this binding site participates.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>本属性指向Regulation对象</remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.DNABindSite.SiteLength">
 <summary>
 This slot defines the extent of a binding site in base pairs. If a value for this 
 slot is omitted, the site length will be computed based on the DNA-Footprint-Size 
 of the binding protein. Thus, a value for this slot should only be supplied here 
 if the site length for a particular transcription factor is not consistent across 
 all its sites.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Enzrxn.Enzyme">
 <summary>
 This slot lists the enzyme whose activity is described in this frame. More specifically, 
 the value of this slot is the key of a frame from the class [Protein-Complexes] or 
 [Polypeptides].
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Enzrxn.RequiredProteinComplex">
 <summary>
 Some enzymes catalyze only a particular reaction when they are components of a larger 
 protein complex. For such an enzyme, this slot identifies the particular protein complex 
 of which the enzyme must be a component.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Enzrxn.Reaction">
 <summary>
 The value of this slot is the key of a frame from the Reactions class -- the second half 
 of the enzyme/reaction pair that the current frame describes. In fact, this slot can have 
 multiple values, which encode the multiple reactions that one catalytic site of an enzyme 
 catalyzes.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 这里表示的是一个多对多的关系
 即本对象表示的是Enzyme所指向的蛋白质分子可以催化本列表的所有反应，即某一个酶分子可以催化一系列反应
 而对于每一个Reaction对象而言，其EnzymaticReaction也为一个列表，即某一个反应可以被几个酶分子进行催化
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Enzrxn.RegulatedBy">
 <summary>
 The values of this slot are members of the [Regulation] class, describing activator or 
 inhibitor compounds for this enzymatic reaction.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Enzrxn.Km">
 <summary>
 The Michaelis constant (KM) of an enzyme is equal to the substrate concentration at which
 the rate of the reaction is at half of its maximum value. The Michaelis constant is an apparent
 dissociation constant of the enzyme-substrate complex, and thereby is an indicator
 of the affinity of an enzyme to a given substrate. Values of this slot are two-element lists
 of the form (cpd-frame Km) where cpd-frame is the frame id for a substrate of the reaction
 referred to by this enzymatic-reaction frame and Km is the Michaelis constant, a floating
 point number.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Enzrxn.ReactionDirection">
 <summary>
 This slot specifies the directionality of a reaction. This slot is used in slightly different 
 ways in class Reactions and Enzymatic-Reactions. In class Enzymatic-Reactions, the slot 
 specifies information about the direction of the reaction associated with the enzymatic-reaction, 
 by the associated enzyme. That is, the directionality information refers only to the case in 
 which the reaction is catalyzed by that enzyme, and may be influenced by the regulation of 
 that enzyme.
 The slot is particularly important to fill for reactions that are not part of a pathway, because 
 for such reactions, the direction cannot be determined automatically, whereas for reactions 
 within a pathway, the direction can be inferred from the pathway context. This slot aids the user 
 and software in inferring the direction in which the reaction typically occurs in physiological 
 settings, relative to the direction in which the reaction is stored in the database.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Enzrxn.PhysiologicallyRelevant">
 <summary>
 PHYSIOLOGICALLY-RELEVANT?
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Gene.LeftEndPosition">
 <summary>
 These slots encode the position of the left and right ends of the gene on the 
 chromosome or plasmid on which the gene resides. "Left" means the end of the 
 gene toward the coordinate-system origin (0). Therefore, the Left-End-Position 
 is always less than the Right-End-Position.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Gene.RightEndPosition">
 <summary>
 These slots encode the position of the left and right ends of the gene on the 
 chromosome or plasmid on which the gene resides. "Left" means the end of the 
 gene toward the coordinate-system origin (0). Therefore, the Left-End-Position 
 is always less than the Right-End-Position.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Gene.CentisomePosition">
 <summary>
 This slot lists the map position of this gene on the chromosome in centisome units 
 (percentage length of the chromosome). The centisome-position values are computed 
 automatically by Pathway Tools from the Left-End-Position slot. The value is a number 
 between 0 and 100, inclusive.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Gene.TranscriptionDirection">
 <summary>
 This slot specifies the direction along the chromosome in which this gene is transcribed; 
 allowable values are "+" and "-".
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Gene.Product">
 <summary>
 This slot holds the ID of a polypeptide or tRNA frame, which is the product of this gene. 
 This slot may contain multiple values for two possible reasons: a given gene might be 
 translated from more than one start codon, giving rise to products of different lengths; 
 the product of the gene may undergo chemical modification. In the latter case, the gene 
 lists all modified forms of the protein in its Product slot.(对于MetaCyc数据库而言，本属性
 值包含有所有类型的蛋白质对象的UniqueID，但是在编译后的计算机模型之中，仅包含有不同启动子而形成
 的所有不同长度的多肽链)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Gene.Interrupted">
 <summary>
 If True, indicates that the specified gene is interrupted, that is, has a premature stop codon.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Gene.Accession1">
 <summary>
 The unique identifier of this gene object in the NCBI genbak database.
 (本基因对象在NCBI Genbak数据库之中的唯一标识符)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Citation">
 <summary>
 Any of the above components may be omitted, but it is meaningless to supply a timestamp, 
 curator or probability if the evidence-code is omitted. Trailing colons should be 
 omitted, but if a value contains an evidence-code with no accompanying citation, the 
 leading colon must be present. The square brackets are optional.
 </summary>
 <remarks>
 Examples:
   [123456] -- a PubMed or MEDLINE reference
   [SMITH95] -- a non-PubMed reference
   [123456:EV-IDA] -- an evidence code with associated PubMed reference
   [:EV-HINF] -- an evidence code with no associated reference
   [123456:EV-IGI:9876543:paley] -- a time- and user-stamped evidence code with associated reference
 </remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Citation.ReferenceId">
 <summary>
 reference-ID is a PubMed unique identifier or the identifier of a Publications object 
 (without the leading "PUB-").
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Citation.EvidenceCode">
 <summary>
 evidence-code is the object identifier of some class belonging to the Evidence class, e.g. EV-EXP.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Citation.TimeStamp">
 <summary>
 timestamp is a lisp universal time (not human readable) corresponding to the time the 
 evidence code was assigned.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Citation.Curator">
 <summary>
 curator is the username of the curator who assigned the evidence code.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Citation.Probability">
 <summary>
 probability is a number between 0 and 1 describing the probability 
 that the evidence is correct, where available.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Citation.With">
 <summary>
 with is a free text string that modifies the evidence-code when the citation annotates a GO term. 
 This is the "with" field described in GO documentation.
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Citation.ToString">
 <summary>
 
 </summary>
 <returns></returns>
 <remarks>CITATIONS - :EV-COMP-AINF:3567386625:kaipa</remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Citation.EmptyFill">
 <summary>
 为了防止Citation初始化的时候，由于在列表中的元素的数目不够的时候，赋值出现错误
 </summary>
 <remarks>使用On Error Resume Next会明显降低性能，使用这个空填充向量，可以改善错误容忍性能</remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.IComplexes">
 <summary>
 复合物对象的接口
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.IComplexes.Components">
 <summary>
 The components module of this regulator entity.(构成本复合物对象的组件模块的UniqueId列表)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object">
 <summary>
 The object type is the base type of the objects definition both in the namespace PGDB.DataFile and PGDB.Schemas 
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object.CommonName">
 <summary>
 (Common-Name) This slot defines the primary name by which an object is known 
 to scientists -- a widely used and familiar name (in some cases arbitrary 
 choices must be made). This field can have only one value; that value must 
 be a string.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object.AbbrevName">
 <summary>
 (Abbrev-Name) This slot stores an abbreviated name for an object. It is used in 
 some displays.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object.Synonyms">
 <summary>
 (Synonyms) This field defines one or more secondary names for an object -- names 
 that a scientist might attempt to use to retrieve the object. These names may be 
 out of date or ambiguous, but are used to facilitate retrieval -- the Synonyms 
 should include any name that you might use to try to retrieve an object. In a 
 sense, the name "Synonyms" is misleading because the names listed in this slot may 
 not be exactly synonymous with the preferred name of the object.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object.Comment">
 <summary>
 (Comment) The Comment slot stores a general comment about the object that contains 
 the slot. The comment should always be enclosed in double quotes.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object.Citations">
 <summary>
 (Citations) This slot lists general citations pertaining to the object containing 
 the slot. Citations may or may not have evidence codes attached to them. Each value 
 of the slot is a string of the form 
 [reference-ID] or 
 [reference-id:evidence-code:timestamp:curator:probability:with]
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object.Types">
 <summary>
 The TYPES enumerate values in each object.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object.UNIQUE_ID_REGX">
 <summary>
 (解析Unique-Id字段的值所需要的正则表达式)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object.Table">
 <summary>
 当前的对象所属的表对象
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object.StringQuery(System.String,System.Boolean)">
 <summary>
 使用关键词查询<see cref="F:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object._innerHash"></see>字典对象
 </summary>
 <param name="Key"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object.Exists(System.String)">
 <summary>
 查询某一个键名是否存在于这个对象之中
 </summary>
 <param name="KeyName">键名</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object.TypeCast``1(SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object,``0@)">
 <summary>
 基类至派生类的转换
 </summary>
 <param name="target">数据源，基类</param>
 <param name="ToType">转换至的目标类型</param> 
 <typeparam name="T">类型约束</typeparam> 
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.PathwayInteractions">
 <summary>
 This slot holds a comment that describes interactions between this pathway and other
 biochemical pathways, such as those pathways that supply an important precursor.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.Predecessors">
 <summary>
 This slot describes the linked reactions that compose the current pathway. Since pathways
 have a variety of topologies — from linear to circular to tree structured — pathways
 cannot be represented as simple sequences of reactions. A pathway is a list of reaction/
 predecessor pairs.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.ReactionList">
 <summary>
 This slot lists all reactions in the current pathway, in no particular order.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.HypotheticalReactions">
 <summary>
 A list of reactions in this pathway that are considered hypothetical, probably because
 presence of the enzyme has not been demonstrated.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.AssumeUniqueEnzymes">
 <summary>
 By default it is assumed that all enzymes that can catalyze a reaction will do so in each
 pathway in which the reaction occurs. That default assumption is encoded by the default
 value of FALSE for this slot; when you want to assume that only one enzyme exists in the
 DB to catalyze every reaction in this pathway, this slot should be given the value TRUE.
 This slot can be used for consistency-checking purposes, that is, in a pathway for which
 this slot is TRUE, there should not be any reactions that are catalyzed by more than one
 reaction.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Boolean</remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.EnzymeUse">
 <summary>
 By default it is assumed that all enzymes that can catalyze a reaction will do so in each
 pathway in which the reaction occurs. This slot is used in the case that this assumption
 does not hold, that is, if a reaction is catalyzed in a particular pathway by only a subset
 (or none) of the possible enzymes that are known to catalyze that reaction. Therefore,
 this slot can be used only when the value of the assume-unique-enzymes slot is FALSE
 (because multiple enzymes catalyze some step in the pathway).
 The form of a value for the slot is (reaction-ID enzymatic-reaction-ID-1... enzymaticreaction-
 ID-n). That is, each value specifies a reaction, and specifies the one or more
 enzymatic reactions that catalyze that reaction in this pathway. If no enzymatic reactions
 are specified, then none of the enzymes that are known to catalyze the reaction do so in
 this pathway.
 For example, under aerobic conditions the oxidation of succinate to fumarate is catalyzed
 by succinate dehydrogenase in the forward direction, and, under anaerobic conditions,
 by fumarate reductase in the reverse direction. The TCA cycle is active only in aerobic
 conditions, so only succinate dehydrogenase is used in this pathway. This fact would be
 recorded as follows:
 enzyme-use: (succ-fum-oxred-rxn succinate-oxn-enzrxn)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.EnzymesNotUsed">
 <summary>
 Proteins or protein-RNA complexes listed in this slot are those which would otherwise
 have been inferred to take part in the pathway or reaction, but which in reality do not.
 The protein may catalyze a reaction of the pathway in other circumstances, but not as
 part of the pathway (e.g. it may be not be in the same cellular compartment as the other
 components of the pathway, or it may not be expressed in situations when the pathway
 is active.).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.Primaries">
 <summary>
 When drawing a pathway, the Navigator software usually computes automatically which
 compounds are primaries (mains) and which compounds are secondaries (sides). Occasionally,
 the heuristics used are not sufficient to make the correct distinction, in which
 case you can specify primary compounds explicitly. This slot can contain the list of primary
 reactants, primary products, or both for a particular reaction in the pathway. Each
 value for this slot is of the form (reaction-ID (primary-reactant-ID-1 ... primary-reactant-
 ID-n) (primary-product-ID-1 ... primary-product-ID-n)), where an empty list in either
 the reactant or product position means that that information is not supplied and should
 be computed. An empty list in the product position can also be omitted completely.
 For example, in the purine synthesis pathway, we want to specify that the primary product
 for the final reaction in the pathway should be AMP and not fumarate. The primary
 reactants are still computed. The corresponding slot value would be
 primaries: (ampsyn-rxn () (amp))
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.Species">
 <summary>
 This slot is used only in pathway frames in the MetaCyc DB, in which case the slot identifies
 the one or more species in which this pathway is known to occur experimentally.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.DisableDisplay">
 <summary>
 When the value is true, this slot disables display of the pathway drawing for a pathway.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.SuperPathways">
 <summary>
 This slot lists direct super-pathways of a pathway.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.SubPathways">
 <summary>
 This slot is the inverse of the Super-Pathways slot. It lists all the direct subpathways of a
 pathway.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.PathwayLinks">
 <summary>
 This slot indicates linkages among pathways in pathway drawings. Each value of this slot
 is a list of the form (cpd other-pwy*). The Navigator draws an arrow from the specified
 compound pointing to the names of the specified pathways, to note that the compound
 is also a substrate in those other pathways. If no other pathways are specified, then links
 are drawn to and from all other pathways that the compound is in (i.e., if the compound
 is produced by the current pathway, then links are drawn to all other pathways that consume
 it, and vice versa).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.PolymerizationLinks">
 <summary>
 This slot controls drawing of polymerization relationships within a pathway. Each
 value of this slot is of the form (cpd-class product-rxn reactant-rxn). When both reactions
 are non-nil, an identity link is created between the polymer compound class cpd-
 class, a product of product-rxn, and the same compound class as a reactant of reactantrxn.
 The PRODUCT-NAME-SLOT and REACTANT-NAME-SLOT annotations specify
 which slot should be used to derive the compound label in product-rxn and reactant-rxn
 above, respectively, if one or both are omitted, COMMON-NAME is assumed. Either
 reaction above may be nil; in this case, no identity link is created. This form is used solely
 in conjunction with one of the name-slot annotations to specify a name-slot other than
 COMMON-NAME for a polymer compound class in a reaction of the pathway.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.ClassInstanceLinks">
 <summary>
 Each value of this slot is a reaction in the pathway. Two annotations (in addition to the
 usual possibilities) are available on this slot: REACTANT-INSTANCES and PRODUCTINSTANCES,
 whose values are compounds. If one of the reactants of the slot-value
 reaction is a class C and the REACTANT-INSTANCES are instances of C, then the instances
 are drawn as part of the pathway, with identity links to the class. The PRODUCTINSTANCES
 are treated similarly.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Pathway.LayoutAdvice">
 <summary>
 Each value of this slot is a dotted pair of the form (advice-keyword . advice, and represents
 some piece of advice to the automatic pathway layout code. Currently supported
 advice keywords are
   1. :CYCLE-TOP-CPD: The advice is a compound key. In pathways containing a cycle,
      the cycle will be rotated so that the specified compound is positioned at twelve
      o’clock.
   2. :REVERSIBLE-RXNS: The advice is a list of reactions that should be drawn as reversible,
      even when the pathway is being drawn to show pathway flow (rather than
      true reversibility).
   3. :CASCADE-RXN-ORDERING: The advice is a list of reactions that form a partial order
      for reactions in a cascade pathway (i.e., the 2-component signaling pathways).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Promoter">
 <summary>
 Frames in this class define transcription start sites.
 (本对象定义了一个转录起始位点)
 </summary>
 <remarks>
 启动子（promoter）是基因的一个组成部分，在遗传学中是指一段能使基因进行转录的脱氧核糖核酸（DNA）序列。
 启动子可以被RNA聚合酶辨认，并开始转录。在核糖核酸（RNA）合成中，启动子可以和决定转录的开始的转录因子
 产成相互作用，控制基因表达（转录）的起始时间和表达的程度，包含核心启动子区域和调控区域,就像“开关”，
 决定基因的活动，继而控制细胞开始生产哪一种蛋白质。
 启动子本身并无编译功能，但它拥有对基因翻译氨基酸的指挥作用，就像一面旗帜，其核心部分是非编码区上游的
 RNA聚合酶结合位点，指挥聚合酶的合成，这种酶指导RNA的复制合成。因此该段位的启动子发生突变（变异），
 将对基因的表达有着毁灭性作用。
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Promoter.AbsolutePlus1Pos">
 <summary>
 The absolute base pair position of the transcription start site on the DNA strand.
 (本转录起始位点在DNA链上面的碱基位置)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Promoter.BindsSigmaFactor">
 <summary>
 This slot links to the one or more sigma factors that can bind to a promoter, thereby
 initiating transcription.
 (本属性链接至1至多个可以与本启动子相结合的Sigma因子，然后启动转录过程)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Promoter.ComponentOf">
 <summary>
 This slot links to the transcription-unit(s) to which the promoter belongs.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Promoter.Minus35Left">
 <summary>
 These slots list chromosomal coordinates of the left and right ends of the -35 and -10 boxes
 associated with the promoter.
 (本属性列举了-35和-10区的位置)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Promoter.Minus35Right">
 <summary>
 These slots list chromosomal coordinates of the left and right ends of the -35 and -10 boxes
 associated with the promoter.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Promoter.Minus10Left">
 <summary>
 These slots list chromosomal coordinates of the left and right ends of the -35 and -10 boxes
 associated with the promoter.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Promoter.Minus10Right">
 <summary>
 These slots list chromosomal coordinates of the left and right ends of the -35 and -10 boxes
 associated with the promoter.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Promoter.Direction">
 <summary>
 -1 这个启动子序列是位于互补链的;
 0 无法判断;
 1 这个启动子序列是位于正链的.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 左端小于右端，在正链，反之在互补链
 </remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein">
 <summary>
 The class of all proteins is divided into two subclasses: protein complexes and polypeptides.
 A polypeptide is a single amino acid chain produced from a single gene. A protein
 complex is a multimeric aggregation of more than one polypeptide subunit. A protein
 complex may in some cases have another protein complex as a component. Many of the
 slots that are applicable to Proteins are also applicable to members of the RNA class.
 (本类型的对象会枚举所有的Component对象的UniqueID)
 </summary>
 <remarks>
 Protein表对象和ProtLigandCplxe表对象相比较：
 Protein表中包含有所有类型的蛋白质对象，而ProtLigandCplxe则仅包含有蛋白质和小分子化合物配合的之后所形成的复合物，
 所以基因的产物在ProtLigandCplxe表中是无法找到的
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.ComponentOf">
 <summary>
 This slot lists the complex(es) that this protein is a component of, if any, including protein
 complexes, protein-small-molecule complexes, protein-RNA complexes, and so on.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.DNAFootprintSize">
 <summary>
 For proteins that bind to DNA, the number of base pairs on the DNA strand that the
 binding protein covers.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.GoTerms">
 <summary>
 Values of this slot are the Gene Ontology terms to which this object is annotated. Each
 value should be annotated with citations, including evidence codes.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.Locations">
 <summary>
 This slot describes the one or more cellular locations in which this protein is found. It’s
 values are members of the CCO (Cell Component Ontology) class.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.ModifiedForm">
 <summary>
 This slot points from the unmodified form of a protein to one or more chemically modified
 forms of that protein. For example, the slot might point from the unmodified form of
 a polypeptide (or a protein complex) to a phosphorylated form of that polypeptide (or
 protein complex).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.MolecularWeightKD">
 <summary>
 This computed slot lists the known molecular weight(s) of a macromolecule by taking the
 union of the slots Molecular-Weight-Seq and Molecular-Weight-Exp. Units: kilodaltons.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.MolecularWeightSeq">
 <summary>
 This slot lists the molecular weight of the protein complex or polypeptide, as derived
 from sequence data. Units: kilodaltons.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.MolecularWeightExp">
 <summary>
 This slot lists the molecular weight of the protein complex or polypeptide, derived experimentally.
 Multiple values of this slot correspond to multiple experimental observations.
 Units: kilodaltons.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.pI">
 <summary>
 This slot lists the pI of the polypeptide.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.Regulates">
 <summary>
 For proteins that have regulatory activity (e.g. as transcription factors), this slot points to
 the Regulation frames that describe the regulation and link to the regulated entity.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.Species">
 <summary>
 This slot is used in proteins only in the MetaCyc DB, in which case it identifies the species
 in which the current protein is found.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.Catalyzes">
 <summary>
 A list of enzymatic reaction unique id that catalyzed by this protein.(本蛋白质所催化的酶促反应的UniqueId的列表)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.UnmodifiedForm">
 <summary>
 This slot points from a chemically modified form of some protein, to the native unmodified
 form of that protein (e.g., from a phosphorylated form to the unphosphorylated
 form).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.Gene">
 <summary>
 The gene's UniqueId that indicated that which gene codes this polypeptide.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.IsModifiedProtein">
 <summary>
 判断本蛋白质对象是否为经过化学修饰的蛋白质
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.IsPolypeptide">
 <summary>
 判断本蛋白质对象是否为一个多肽链对象
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.IEnzyme">
 <summary>
 A general data structure of the enzyme entity that can catalyze a reaction.(能够催化酶促反应的酶分子的通用数据类型)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.IEnzyme.ComponentOf">
 <summary>
 本类型的对象最为其他的对象的组件而存在的时候，则本属性值指明了本对象所能够构成的对象的Unique-Id列表
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.IEnzyme.Catalyze">
 <summary>
 The catalyzed object of this enzyme instance.(所催化的对象列表)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein.New">
 <summary>
 返回一个新构造出来的Protein对象
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.ProteinFeature">
 <summary>
 This class describes sites of interest (such as binding sites, modification sites, cleavage
 sites) on a polypeptide. Instances of this class define a region of interest on a polypeptide,
 plus, optionally, one or more states associated with the region. Different subclasses are used 
 to specify single amino acid sites, linear regions, and regions involving noncontiguous 
 segments of an amino-acid chain. For example, an instance F of this class could define an amino 
 acid residue that can be phosphorylated, plus the fact that this residue can take on two 
 possible states: PHOSPHORYLATED and UNPHOSPHORYLATED.
 The feature instance itself does not describe the state of a particular protein. Instead, we 
 would represent the phosphorylated and unphosphorylated forms of a protein by creating two 
 instances of class Polypeptides. Both of those instances would link to the same feature F via 
 the FEATURES slot. However, in the two proteins, F would be annotated differently to indicate 
 the state of that feature. One protein would use an annotation label STATE with the value 
 PHOSPHORYLATED to denote that the residue is phosphorylated, while the other would use the same 
 annotation label STATE with the value UNPHOSPHORYLATED.
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.ProteinFeature.AttachedGroup">
 <summary>
 For a binding feature, this slot lists the entity that binds to the protein feature — it can be
 either an instance of Chemicals or another Protein-Feature (e.g., in the case of crosslinks
 forming between two sites on the same or different polypeptide).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.ProteinFeature.FeatureOf">
 <summary>
 This slot points to the polypeptide frames with which this feature is associated (there
 could be more than one such frame, if all are different forms of the same protein, e.g., a
 modified and an unmodified form).
 </summary>
 <value></value>
 <returns></returns>
 <remarks>这个活性位点是属于哪一个蛋白质多肽链的</remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.ProteinFeature.LeftEndPosition">
 <summary>
 For a feature that consists of a contiguous linear stretch of amino acids, this slot encodes
 the residue number of the leftmost amino acid, with number 1 referring to the N-terminal
 amino acid.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.ProteinFeature.PossibleFeatureStates">
 <summary>
 For a given feature class, this slot describes the possible states available to instances of
 the class. For example, a feature that represents a binding site can have either a bound or 
 unbound state. The list of possible states is stored at the class level as values for this slot. 
 
 A particular instance F of the class (a specific feature of a specific protein) can then be 
 labeled with this state information using the STATE annotation when F appears in the FEATURES 
 slot of the protein. For example, two forms of the same protein would link to the same feature 
 F, but one form P1 would have the feature annotated label STATE and value BOUND, whereas the 
 other form P2 would use the label STATE and value UNBOUND.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.ProteinFeature.ResidueNumber">
 <summary>
 For a feature that consists of a single amino acid or some number of noncontiguous amino
 acids, this slot contains the numeric index or indices of the amino acid residue or residues
 that make up this site. Number 1 corresponds to the N-terminal amino acid.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.ProteinFeature.RightEndPosition">
 <summary>
 For a feature that consists of a contiguous linear stretch of amino acids, this slot encodes
 the residue number of the rightmost amino acid, relative to the start of the protein.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.ProtLigandCplxe">
 <summary>
 Protein-Small-Molecule-Complexes
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.ProtLigandCplxe.Components">
 <summary>
 The proteins and compounds that consists this complexes 
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.ProtLigandCplxe.Catalyzes">
 <summary>
 A list of enzymatic reaction unique id that catalyzed by this protein.(本蛋白质所催化的酶促反应的UniqueId的列表)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.ProtLigandCplxe.ConsensusSequence">
 <summary>
 
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.ProtLigandCplxe.Regulates">
 <summary>
 The reaction that this complex regulates
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Reaction">
 <summary>
 Reactions are organized into two parallel ontologies. Most reaction frames will have one
 or more parents in both ontologies. The first classifies reactions by the nature of their
 substrates, for example, small-molecule reactions are reactions in which all substrates are
 small molecules, whereas protein reactions are reactions in which at least one substrate
 is a protein. The second ontology classifies reactions by conversion type. For example,
 chemical reactions are those in which a chemical transformation takes place, transport
 reactions are those in which a substrate is transported from one compartment to another
 (some reactions may be both transport reactions and chemical reactions if the substrate is
 chemically altered during transport), and binding reactions are those in which substrates
 weakly bind to each other to form a complex.
 Two novel features of our conceptualization with respect to previous metabolic databases
 are to separate reactions from the enzymes that catalyze them, and to use the EC numbers
 defined by the International Union of Biochemistry and Molecular Biology (IUBMB) to
 uniquely identify reactions, not enzymes. (In database terms, the EC number is a key
 for the Reaction class.) The reason for this separation is that the catalyzes relationship
 between reactions and enzymes is many-to-many: a given enzyme might catalyze more
 than one reaction, and the same reaction might be catalyzed by more than one enzyme.
 Frames in the class Enzymatic-Reaction describe the association between an enzyme and
 a reaction. The entire EC taxonomy can be found under the Chemical-Reactions class.
 You should always write transport reactions in the predominate direction in which the
 reaction occurs. Transport reactions are encoded by labeling substrates with their abstract
 (in vs. out) compartment. For example, if a given substrate is transported from the
 periplasm to the cytosol, it would be labeled with “out” as its compartment as a reactant,
 and with “in” as its compartment as a product. Please see the detailed discussion for the
 Rxn-Locations slot. The default compartment is the cytosol, so the cytosol label may be
 omitted for regular reactions. These labels are implemented as annotations in Ocelot.
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Reaction.ECNumber">
 <summary>
 This slot holds the EC (Enzyme Commission) number associated with the current reaction,
 if such a number has been assigned by the IUBMB. This slot is single valued.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Reaction.Left">
 <summary>
 These slots hold the compounds from the left and right sides, respectively, of the reaction
 equation. Each value is either the key of a compound frame, or a string that names a
 compound (when the compound is not yet described within the DB as a frame). The terms
 reactant and product are not used because these terms may falsely imply the physiological
 direction of the reaction.
 The coefficient of each substrate, when that coefficient is not equal to 1, is stored as an
 annotation on the substrate value. The annotation label is COEFFICIENT.
 The substrates of transport reactions are also described using the Left and Right slots.
 However, the values of these slots are annotated to indicate their compartments. For
 example, a transporter that moves succinate from the periplasm to the cytosol, accompanied
 by hydrolysis of ATP in the cytosol, would be described with succinate and ATP as
 the values of the Left slot, and with succinate, ADP, and Pi as the values of the Right
 slot. The succinate in the Left slot would be annotated with CCO-OUT under the label
 Compartment. The other substrates need to be annotated with CCO-IN. Additionally, a
 location has to be stored in the Rxn-Locations slot. Please see the detailed comments of
 that slot.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Reaction.Right">
 <summary>
 These slots hold the compounds from the left and right sides, respectively, of the reaction
 equation. Each value is either the key of a compound frame, or a string that names a
 compound (when the compound is not yet described within the DB as a frame). The terms
 reactant and product are not used because these terms may falsely imply the physiological
 direction of the reaction.
 The coefficient of each substrate, when that coefficient is not equal to 1, is stored as an
 annotation on the substrate value. The annotation label is COEFFICIENT.
 The substrates of transport reactions are also described using the Left and Right slots.
 However, the values of these slots are annotated to indicate their compartments. For
 example, a transporter that moves succinate from the periplasm to the cytosol, accompanied
 by hydrolysis of ATP in the cytosol, would be described with succinate and ATP as
 the values of the Left slot, and with succinate, ADP, and Pi as the values of the Right
 slot. The succinate in the Left slot would be annotated with CCO-OUT under the label
 Compartment. The other substrates need to be annotated with CCO-IN. Additionally, a
 location has to be stored in the Rxn-Locations slot. Please see the detailed comments of
 that slot.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Reaction.Substrates">
 <summary>
 The value of this slot is computed automatically — its values may not be changed by the
 user. The values of the slot are computed as the union of the values of the Left and Right
 slots.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Left和Right字段的值的集合，不能够被用户指定的一个只读属性</remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Reaction.EnzymesNotused">
 <summary>
 Proteins or protein-RNA complexes listed in this slot are those which would otherwise
 have been inferred to take part in the pathway or reaction, but which in reality do not. In
 other words, the protein may catalyze a general reaction with non-specific substrates, but
 is known not to catalyze this specific form of the reaction.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Reaction.DeltaG0">
 <summary>
 This slot contains the change in Gibbs free energy for the reaction in the direction the
 reaction is written.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Reaction.Spontaneous">
 <summary>
 This slot is true in the case when this reaction occurs spontaneously, that is, it is not
 catalyzed by any enzyme.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Reaction.Species">
 <summary>
 This slot is used to indicate that a reaction is known to occur in an organism in the case
 where the enzyme that catalyzes the reaction is unknown. In such cases, the value for this
 slot in a given reaction would be the symbolic identifier of the species for the organism
 for the current PGDB.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Reaction.RxnLocations">
 <summary>
 This slot is used for storing information about the metabolite compartments of a reaction,
 in the case where non-default compartments are involved. The default compartment is
 defined as the frame CCO-CYTOSOL. There are two cases of reactions:
 
    S: Reactions that have all of their metabolites in the same compartment.
 
    T: Reactions that have metabolites in multiple compartments. This can only happen
       at membranes, involving transport reactions or electron transfer reactions (ETRs).
       These reactions may use only the generic directional compartments CCO-IN and
       CCO-OUT for their metabolites, which need to be mapped to the actual compartments
       in a given PGDB for certain operations.
 
 The values of this slot differ between these cases.
 
    S: If this reaction occurs in a non-default compartment, or in several compartments,
       then this slot stores for every compartment the corresponding frame (a child of
       CCO-SPACE). In cases where this slot contains a value, and the reaction also occurs
       in the cytosol, then CCO-CYTOSOL must be included as a slot value.
 
    T: This slot contains one or more frames that are children of CCO-MEMBRANE ,
       or potentially symbols that have to be unique in this slot, for situations where the
       metabolites are in spaces that are not directly adjacent to one membrane, or when 3
       spaces are involved (such as if the transporter spans two membranes). If the reaction
       was not assigned to any particular membrane, then no value is stored, which is the
       default case.
       Additionally, each slot value in this slot will have annotations with the labels 
       CCOIN and CCO-OUT, and in the rare case of 3 compartments involved, also another
       label called CCO-MIDDLE. The values of each of these annotations have to be one valid 
       child of CCO-SPACE. These annotations define the mappings between the COMPARTMENT 
       annotation values, which the metabolites have that are listed in the reaction’s Left 
       and Right slots, and the final compartments in this PGDB.
       Every metabolite in the reaction’s Left and Right slots needs to have a COMPARTMENT
       annotation, the value of which needs to be one of CCO-IN, CCO-OUT, or possibly 
       CCO-MIDDLE in complex situations.
 
 If the reaction is catalyzed by more than one enzyme (i.e. it has more than one 
 enzymaticreaction attached), then each value in the RXN-LOCATIONS slot has to have an 
 annotation called ENZRXNS, which has as its values the frame IDs of the corresponding
 enzymatic-reactions. This allows determining the precise compartment(s) in which the
 catalyzed reaction is occurring.
 Whenever a reaction is transferred between PGDBs (by import or schema upgrade operations),
 all values in the RXN-LOCATIONS are filtered away (i.e. not copied). This
 prevents inapplicable compartments from being introduced into other PGDBs.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Reaction.GetCoefficient(System.String)">
 <summary>
 在左端返回-1，在右端返回1，不存在则返回0
 </summary>
 <param name="MetaboliteId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Regulation">
 <summary>
 This class describes most forms of protein, RNA or activity regulation. Regulation can
 be either by a direct influence on the protein’s activity (e.g. allosteric inhibition of an
 enzyme) or by influencing the quantity of active protein available (e.g. by inducing or
 blocking its transcription or translation). The one form of regulation that is not covered
 by this class is when the quantity of a protein is regulated as a result of chemical
 or binding reactions that either produce or consume the active form of a protein – these
 are represented as Reactions instead. There can be some ambiguity as to what should be
 represented as a reaction and what should be represented as a regulation event. In general,
 an event that can be represented as a reaction should be when a) there is sufficiently
 detailed information known to model it as a reaction, b) both reactants and products exist
 as stable, independent entities, and c) our schema supports referring to both reactant
 and product of the reaction independently and there is some justification for wanting
 to go down to that level of detail. For example, a transcription factor bound to a small
 molecule will generally have a different activity than the unbound transcription factor.
 This could be represented either as the reaction TF + x -¿ TF-x or as a regulation event in
 which x activates or inhibits the activity of TF. However, because both TF and TF-x are
 stable molecules which can potentially regulate different transcription units (not all will,
 but some do), or TF could bind another small molecule y and regulate yet another set of
 transcription units, we prefer to model this kind of interaction as a reaction when the data
 is available. On the other hand, an enzyme binding to some inhibitor could also be represented
 as a reaction, but since there is rarely any reason to refer to the enzyme-inhibitor
 complex outside of the context of the reaction the enzyme catalyzes, we choose instead
 to model these events as regulation events in which the inhibitor regulates the activity of
 the enzyme.
 Instances of this class represent a one-to-one mapping between regulator and regulatedentity
 (i.e. an entity may regulate many processes, or a process may be regulated by many
 entities, but each one requires its own instance of Regulation to represent it)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Regulation.AssociatedBindingSite">
 <summary>
 This slot is applicable to regulation of transcription or translation in which an entity 
 (protein, small-molecule or RNA) binds to DNA or the mRNA transcript. Its values are 
 instances of either DNA-Binding-Sites or mRNA-Binding-Sites, depending on the type of
 regulation.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Regulation.Mechanism">
 <summary>
 This slot optionally contains a keyword which describes the mechanism of the regulation.
 Appropriate possible values will vary depending on the particular subclass of regulation.
 Some subclasses will not use this slot at all.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Regulation.Mode">
 <summary>
 This slot specifies whether the regulator activates or inhibits the regulated-entity. Possible
 values are:
 “+” — The regulator activates or increases quantity or activity of the regulated-entity
 (an exception is transcription attenuation, in which even though the regulated-entity is a
 terminator object, “+” means activation of transcription of the downstream genes rather
 than of the terminator).
 “-” — The regulator inhibits or decreases quantity or activity of the regulated-entity (with
 the same caveat about transcription attenuation as above)..
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Regulation.RegulatedEntity">
 <summary>
 This slot links the regulation frame to the object that is being regulated. In the case of
 enzyme modulation, this object will be an Enzymatic-Reaction frame. In the case of transcription
 initiation regulation, it will be a Promoter frame. In the case of transcription
 attenuation, it will be a Terminator frame. In other cases, it could be a gene or a protein
 frame. The regulated entity will link back to the regulation frame using the inverse of this
 slot, Regulated-By
 (本属性连接本类型的对象至被其所调控的目标对象。当调控对象为酶活力调控的时候，将会链接至酶促反应对象，
 当调控类型为转录起始调控的时候，目标对象将会是启动子对象，当为转录终止调控的时候，目标对象将会是一个
 终止子对象，对于其他情况而言，所调控的目标对象可能为一个基因或者蛋白质。对于被调控的目标对象而言，都
 会有一个Regulated-By属性连接回本对象之上)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Regulation.Regulator">
 <summary>
 This slot links the regulation frame to the object that is doing the regulating, typically
 a protein, RNA or small molecule. The regulator frame will link back to the regulation
 frame using the inverse of this slot, Regulates.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Regulation.Ki">
 <summary>
 This slot is used for instances of regulation of enzyme activity. Ki is the dissociation
 constant for the binding of an inhibitor to an enzyme or an enzyme-substrate complex.
 When the inhibitor is competitive, Ki is the dissociation constant for the binding of an
 inhibitor to the enzyme, and is often written as Kic. When the inhibitor is uncompetitive,
 Ki is the dissociation constant for the binding of an inhibitor to the enzyme-substrate
 complex, and is often written as Kiu or Ki. The units for Ki are mole.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Regulation.IsMetabolismRegulation">
 <summary>
 当前的调控类型对象是否为对酶促反应的调控类型对象
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Regulation.IRegulator">
 <summary>
 An object type that it has the ability to regulates the gene expression process.
 (能够调控基因表达过程的一种对象类型)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Regulation.IRegulator.UniqueId">
 <summary>
 The unique identifier in the metacyc database of this regulator object.
 (本调控因子对象在MetaCyc数据库之中的唯一标识符)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Regulation.IRegulator.CommonName">
 <summary>
 The displaying name of this regulator object in the citation articles.
 (本调控因子对象在引用文献中的名称)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Regulation.IRegulator.ComponentOf">
 <summary>
 本类型的对象最为其他的对象的组件而存在的时候，则本属性值指明了本对象所能够构成的对象的Unique-Id列表
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Regulation.IRegulator.Types">
 <summary>
 The type of this regulator object.(本调控因子对象的类型)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Regulation.IRegulator.Regulates">
 <summary>
 The regulates target that this regulator entity affect.(本调控因子对象所影响到的调控对象的UniqueId列表)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.TransUnit">
 <summary>
 Frames in this class encode transcription units, which are defined as a set of genes and
 associated control regions that produce a single transcript. Thus, there is a one-to-one
 correspondence between transcription start sites and transcription units. If a set of genes
 is controlled by multiple transcription start sites, then a PGDB should define multiple
 transcription-unit frames, one for each transcription start site.
 (在本类型中所定义的对象编码一个转录单元，一个转录单元定义了一个基因及与其相关联的转录调控DNA片段
 的集合，故而，在本对象中有一个与转录单元相一一对应的转录起始位点。假若一个基因簇是由多个转录起始
 位点所控制的，那么将会在MetaCyc数据库之中分别定义与这些转录起始位点相对应的转录单元【即，每一个
 本类型的对象的属性之中，仅有一个转录起始位点属性】)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.TransUnit.Components">
 <summary>
 The Components slot of a transcription unit lists the DNA segments within the transcription
 unit, including transcription start sites (Promoters), Terminators, DNA binding sites,
 and genes.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.TransUnit.ExtentUnknown">
 <summary>
 The value of this slot should be True when it is not known to how many genes the transcription
 unit extends; that is, it is not known which is the last gene in the transcription
 unit.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.TransUnit.GetGeneIds(System.String[])">
 <summary>
 从所有的基因标号的列表中查询出本转录单元对象中是基因对象的标识号的集合
 </summary>
 <param name="GeneList">All Gene List</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.FileReader">
 <summary>
 Database file reader of the metacyc database.
 (MetaCyc数据库中的数据库文件的读取模块)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileReader.TryParse(System.String,SMRUCC.genomics.Assembly.MetaCyc.File.Property@,SMRUCC.genomics.Assembly.MetaCyc.File.ObjectModel[]@)">
 <summary>
 Try parse the data file.
 </summary>
 <param name="path"></param>
 <param name="prop"></param>
 <param name="objs"></param>
 <returns>Returns error message</returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileReader.GetDbProperty(System.String[])">
 <summary>
 从数据库文件中的注释行获取属性值
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileReader.GetData(System.String[])">
 <summary>
 Get the data text line
 (获取非注释的文本行)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.ObjectModel">
 <summary>
 每一个数据文件里面的每一个对象的模型
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.Property">
 <summary>
 The summary database property text content in the attribute-value data file head line. 
 (在键值对的数据文件头部的说明性的数据库文件属性)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.Property.CreateFrom(System.String[])">
 <summary>
 从文本行中创建
 </summary>
 <param name="data"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.Classes">
 <summary>
 The class types that appears in the MetaCyc database.
 (枚举所有在MetaCyc数据库中所出现的对象类型)
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder">
 <summary>
 当对MetaCyc数据库进行延时加载的时候，则需要使用到本对象进行数据的读取操作
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.Database">
 <summary>
 MetaCyc database directory.(MetaCyc数据库文件夹)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.GetCompounds">
 <summary>
 Returns the compounds table in the target metacyc database.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.GetBindRxns">
 <summary>
 Returns the BindRxns table in the target metacyc database.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.GetRegulations">
 <summary>
 Returns the Regulations table in the target metacyc database.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.GetReactions">
 <summary>
 Returns the Reactions table in the target metacyc database.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.GetPathways">
 <summary>
 Returns the Pathways table in the target metacyc database.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.GetProtLigandCplx">
 <summary>
 Returns the ProtLigandCplx table in the target metacyc database.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.GetProteinFeature">
 <summary>
 Returns the ProteinFeature table in the target metacyc database.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.GetGenes">
 <summary>
 Returns the Genes table in the target metacyc database.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.GetTransUnits">
 <summary>
 Returns the TransUnits table in the target metacyc database.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.GetDNABindingSites">
 <summary>
 Returns the DNABindingSites table in the target metacyc database.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.GetPromoters">
 <summary>
 Returns the Promoters table in the target metacyc database.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.GetTerminators">
 <summary>
 Returns the Terminators table in the target metacyc database.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.GetEnzrxns">
 <summary>
 Returns the Enzrxns table in the target metacyc database.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.GetProteins">
 <summary>
 Returns the Proteins table in the target metacyc database.
 </summary>
 <remarks>
 在本处的蛋白质指的是具备有生物学活性的多肽链单体蛋白，而蛋白质复合物则指的是多个多肽链单体蛋白的
 聚合物以及其与小分子化合物所形成的复合物
 </remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder.CreateInstance(System.String,System.Boolean)">
 <summary>
 Preload the target metacyc database.(MetaCyc数据库预加载)
 </summary>
 <param name="MetaCycDir"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.FastaObjects.FastaCollection.Origin">
 <summary>
 The complete genome sequence of the target species.(目标对象的全基因组序列)
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.PGDB">
 <summary>
 The MetaCyc database file reader object.
 (MetaCyc数据库文件的读取对象)
 </summary>
 <remarks>DataFiles</remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.PGDB.BindRxns">
 <summary>
 Binding reactions.(调控因子与DNA分子的结合反应)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.PGDB.Compounds">
 <summary>
 All of the chemical compounds and biomolecule that defines in this table.
 (细胞中的所有的化学物质和生物分子组成)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.PGDB.Regulations">
 <summary>
 Regulation rule of the gene expression and enzyme activity.(对基因表达过程的调控以及酶活力的调节)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.PGDB.ProtLigandCplxes">
 <summary>
 (蛋白质分子和其他的组分结合所形成的蛋白质复合物)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.PGDB.Proteins">
 <summary>
 
 </summary>
 <remarks>
 在本处的蛋白质指的是具备有生物学活性的多肽链单体蛋白，而蛋白质复合物则指的是多个多肽链单体蛋白的
 聚合物以及其与小分子化合物所形成的复合物
 </remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.PGDB.AddingMethods">
 <summary>
 Adding methods for general object add to a specific data table in the metacyc database.
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.PGDB.Add(SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.PGDB,SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Object)">
 <summary>
 Add the target element object into a specific table in a MetaCyc database object.
 (将目标元素对象添加进入一个MetaCyc数据库中的一张指定的数据表之中)
 </summary>
 <param name="MetaCyc"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.PGDB.WholeGenome">
 <summary>
 Get the whole genome sequence data for this species bacteria.
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.PGDB.Save(System.String)">
 <summary>
 保存数据库，假若SavedDir参数不为空的话，则保存至SavedDir所指示的文件夹之内
 </summary>
 <param name="EXPORT">可选参数，目标MetaCyc数据库所要保存的文件夹位置</param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.PGDB.Load(System.String)">
 <summary>
 (使用反射机制进行数据库数据的加载操作，根据条件编译来选择为并行加载还是串行加载)
 </summary>
 <param name="DIR"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.PGDB.PreLoad(System.String,System.Boolean)">
 <summary>
 预加载MetaCyc数据库之中的部分数据
 </summary>
 <param name="DIR">目标MetaCyc数据库的Data文件夹</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.PGDB.ReflectionLoadMetaCyc(System.String)">
 <summary>
 (使用反射机制进行数据库数据的加载操作)
 </summary>
 <param name="Dir"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.TabularDataFiles.Enzymes">
 <summary>
 (enzymes.col) For each enzymatic reaction in the PGDB, the file lists the 
 reaction equation, up to 4 pathways that contain the reaction, up to 4 
 cofactors for the enzyme, up to 4 activators, up to 4 inhibitors, and the 
 subunit structure of the enzyme.
 </summary>
 <remarks>
 Columns (multiple columns are indicated in parentheses):
 
   UNIQUE-ID
   NAME
   REACTION-EQUATION
   PATHWAYS (4)
   COFACTORS (4)
   ACTIVATORS (4)
   INHIBITORS (4)
   SUBUNIT-COMPOSITION
 
 </remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.TabularDataFiles.Pathway">
 <summary>
 代谢途径对象
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.TabularDataFiles.Pathway.UniqueId">
 <summary>
 这个途径对象在PGDB数据库中的唯一标识符
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.TabularDataFiles.Pathway.DisplayingName">
 <summary>
 途径的名称
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.File.TabularDataFiles.Pathway.GeneCollection">
 <summary>
 与其他的数据库的对象连接关系
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.TabularDataFiles.Pathways">
 <summary>
 (pathways.col) For each pathway in the PGDB, the file lists the genes that 
 encode the enzymes in that pathway.
 </summary>
 <remarks>
 Columns (multiple columns are indicated in parentheses; n is the maximum 
 number of genes for all pathways in the PGDB):
 
   UNIQUE-ID
   NAME
   GENE-NAME (n)
   GENE-ID (n)
 
 </remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.File.TabularFile">
 <summary>
 Each tabular file contains data for one class of objects, such as reactions or pathways.
 This type of file contains a single table of tab-delimited columns and newline-delimited
 rows. The first row contains headers which describe the data beneath them. Each of the
 remaining rows represents an object, and each column is an attribute of the object.

 Column names that would otherwise be the same contain a number x having values 1, 2, 3,
 etc. to distinguish them. Comment lines can be anywhere in the file and must begin with
 the following symbol:

 #
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.Schema.DBLinkManager">
 <summary>
 MetaCyc database format dblink manager
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.Schema.DBLinkManager.DBLink">
 <summary>
 与其他的数据库之间的外键链接
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.DBLinkManager.DBLink.TryParseMetaCycDBLink(System.String)">
 <summary>
 解析来自于MetaCyc数据库中的*.dat文件中的DBLinks数据
 </summary>
 <param name="strData"></param>
 <returns></returns>
 <remarks>本方法和<see cref="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.DBLinkManager.DBLink.TryParse(System.String)">另外一个解析方法</see>的解析格式相似，仅在于TryParse方法是使用%进行分割的，由于在Csv文件中使用的是"进行分割，所以使用%符号可以避免一些不必要的字符串解析BUG</remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.DBLinkManager.DBLink.TryParse(System.String)">
 <summary>
 解析来自于Csv文件的DBLinks数据
 </summary>
 <param name="strData"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.DBLinkManager.DBLink.GetFormatValue">
 <summary>
 向Csv文件写入数据所需求的一个方法
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.DBLinkManager.DBLink.GetMetaCycFormatValue">
 <summary>
 向MetaCyc数据库中的*.dat文件写入数据所需求
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.EquationEquals.Equals(System.String,System.String,System.Boolean)">
 <summary>
 
 </summary>
 <param name="Expression1">使用其他代谢物作为标识符的方程表达式</param>
 <param name="Expression2">使用MetaCyc代谢物作为标识的方程表达式</param>
 <param name="Explicit">是否严格等价，假若参数值为假，则仅考虑标识符等价即可</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.EquationEquals.SideEquals(SMRUCC.genomics.ComponentModel.EquaionModel.DefaultTypes.CompoundSpecieReference[],SMRUCC.genomics.ComponentModel.EquaionModel.ICompoundSpecies[],System.Boolean)">
 <summary>
 
 </summary>
 <param name="Side1"></param>
 <param name="Side2">MetaCyc ID</param>
 <param name="Explicit"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.Schema.EffectorMap">
 <summary>
 Regprecise Effector与MetaCyc Compounds Mapping
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.Schema.PathwayBrief.AssignGene">
 <summary>
 将基因与相应的反应过程映射起来
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.PathwayBrief.AssignGene.Performance">
 <summary>
 String() => {Reaction, Associated-Genes}
 </summary>
 <returns>{Reaction, Associated-Genes}</returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.PathwayBrief.AssignGene.ConvertId(System.Collections.Generic.Dictionary{System.String,System.String[]})">
 <summary>
 
 </summary>
 <param name="MetaCycData">从<see cref="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.PathwayBrief.AssignGene.Performance"></see>函数所得到的结果参数列表</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.PathwayBrief.AssignGene.AssignGenes(SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Enzrxn)">
 <summary>
 获取某一个酶促反应中所涉及到的所有基因
 </summary>
 <param name="Enzrxn"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.PathwayBrief.AssignGene.GetGenes(SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Slots.Protein,SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Proteins)">
 <summary>
 递归的查找某一个蛋白质复合物的基因
 </summary>
 <param name="Protein"></param>
 <param name="ProteinList"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.Schema.PathwayBrief.Pathway.SuperPathway">
 <summary> 
 本代谢途径是否为一个超途径
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MetaCyc.Schema.PathwayBrief.Pathway.ContiansSubPathway">
 <summary>
 本代谢途径所包含的的亚途径
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.Schema.PathwayBrief.PwyFilters">
 <summary>
 整理出代谢途径和相应的基因，对于基因个数少于5的代谢途径，其被合并至其他较大的SuperPathway之中去
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.PathwayBrief.PwyFilters.Performance(SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder)">
 <summary>
 
 </summary>
 <returns></returns>
 <remarks>
 过程描述：
 1. 获取所有的代谢途径的数据
 2. 构建所有的反应对象与基因之间的相互联系
 3. 根据Reaction-List属性值列表将基因与相应的代谢途径建立联系，最后输出数据
 </remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.Schema.Metabolism.PathwayLink.SPLIT_REGX_EXPRESSION">
 <summary>
 A regex expression string that use for split the commandline text.
 (用于分析命令行字符串的正则表达式)
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.Schema.Metabolism.PathwayMappingTool">
 <summary>
 使用一个汇总的MetaCyc数据库，根据目标物种的基因组以及蛋白质信息进行MetaCyc数据库的重建工作
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.Metabolism.PathwayMappingTool.#ctor(SMRUCC.genomics.Assembly.MetaCyc.File.FileSystem.DatabaseLoadder)">
 <summary>
 用于进行参考的MetaCyc数据库
 </summary>
 <param name="MetaCyc"></param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.Metabolism.PathwayMappingTool.DownloadFromUniprot(SMRUCC.genomics.Assembly.MetaCyc.File.DataFiles.Proteins,System.String)">
 <summary>
 
 </summary>
 <param name="Proteins"></param>
 <param name="SavedFile"></param>
 <returns>返回序列下载结果，当所有的序列结果都下载完成的时候，返回0，当出现没有被下载的序列的情况时，返回未被下载的序列数</returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.Schema.Metabolism.ReactionDirections">
 <summary>
 This slot specifies the directionality of a reaction. This slot is used in slightly different 
 ways in class Reactions and Enzymatic-Reactions. In class Enzymatic-Reactions, the slot specifies 
 information about the direction of the reaction associated with the enzymatic-reaction, by the 
 associated enzyme. That is, the directionality information refers only to the case in which the 
 reaction is catalyzed by that enzyme, and may be influenced by the regulation of that enzyme.
 
 The slot is particularly important to fill for reactions that are not part of a pathway, because 
 for such reactions, the direction cannot be determined automatically, whereas for reactions 
 within a pathway, the direction can be inferred from the pathway context. This slot aids the 
 user and software in inferring the direction in which the reaction typically occurs in 
 physiological settings, relative to the direction in which the reaction is stored in the database.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.Schema.Metabolism.ReactionDirections.Reversible">
 <summary>
 The reaction occurs in both directions in physiological settings.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.Schema.Metabolism.ReactionDirections.PhysiolLeftToRight">
 <summary>
 The reaction occurs in the specified direction in physiological settings, because of several 
 possible factors including the energetics of the reaction, local concentrations of reactants 
 and products, and the regulation of the enzyme or its expression.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.Schema.Metabolism.ReactionDirections.PhysiolRightToLeft">
 <summary>
 The reaction occurs in the specified direction in physiological settings, because of several 
 possible factors including the energetics of the reaction, local concentrations of reactants 
 and products, and the regulation of the enzyme or its expression.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.Schema.Metabolism.ReactionDirections.IrreversibleLeftToRight">
 <summary>
 For all practical purposes, the reaction occurs only in the specified direction in 
 physiological settings, because of chemical properties of the reaction.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.Schema.Metabolism.ReactionDirections.IrreversibleRightToLeft">
 <summary>
 For all practical purposes, the reaction occurs only in the specified direction in 
 physiological settings, because of chemical properties of the reaction.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.Schema.Metabolism.ReactionDirections.LeftToRight">
 <summary>
 The reaction occurs in the specified direction in physiological settings, but it is unknown 
 whether the reaction is considered irreversible.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.Schema.Metabolism.ReactionDirections.RightToLeft">
 <summary>
 The reaction occurs in the specified direction in physiological settings, but it is unknown 
 whether the reaction is considered irreversible.
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.PropertyAttributes.GetAdditionalAttribute(System.String@)">
 <summary>
 获取连接在某一个属性值的附属属性，以及原有的属性值
 </summary>
 <param name="strValue"></param>
 <returns></returns>
 <remarks>PropertyValue [^AttributeName AttributeValue]</remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.ProteinQuery.GetAllComponentList(System.String)">
 <summary>
 递归的获取某一个指定的蛋白质的所有Component对象
 </summary>
 <param name="ProteinId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.Schema.Reflection.PathRoute">
 <summary>
 寻找MetaCyc数据库之中的任意两个对象之间的连接关系
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.Reflection.PathRoute.#ctor(System.String)">
 <summary>
 MetaCyc数据库的数据文件夹
 </summary>
 <param name="MetaCycDir"></param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.Reflection.PathRoute.GetPath(System.String,System.String)">
 <summary>
 
 </summary>
 <param name="objA">对象A的UniqueId属性</param>
 <param name="objB">对象B的UniqueId属性</param>
 <returns></returns>
 <remarks>
 程序会首先尝试查找A-->B的最短路线，假若没有查找到，则会尝试查找B-->A的最短路线
 </remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.Schema.Reflection.Path">
 <summary>
 ObjA ----> ObjB
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MetaCyc.Schema.Reflection.ExternalKey">
 <summary>
 表示所标识的域为表与表之间的外键
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.Schema.Reflection.ExternalKey.Directions.In">
 <summary>
 由其他对象指向本对象的关系枚举
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.Schema.Reflection.ExternalKey.Directions.Out">
 <summary>
 由本对象指向其他对象的关系枚举
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.MetaCyc.Schema.Reflection.ExternalKey.Directions.Unknown">
 <summary>
 未知的关系
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.Reflection.ExternalKey.#ctor(System.String,System.String,SMRUCC.genomics.Assembly.MetaCyc.Schema.Reflection.ExternalKey.Directions)">
 <summary>
 
 </summary>
 <param name="NameList">表名称列表，每一个表之间使用逗号分隔</param>
 <param name="Direction"></param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MetaCyc.Schema.TransportReaction.CompoundSpecies.#ctor(System.String)">
 <summary>
 <see cref="T:SMRUCC.genomics.Assembly.MetaCyc.Schema.TransportReaction">转运反应对象</see>的<see cref="P:SMRUCC.genomics.Assembly.MetaCyc.Schema.TransportReaction.LEFT">左</see><see cref="P:SMRUCC.genomics.Assembly.MetaCyc.Schema.TransportReaction.RIGHT">右</see>两边的原始属性值
 </summary>
 <param name="strValue"></param>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MiST2.Domain">
 <summary>
 The Microbial Signal Transduction database contains the signal transduction proteins 
 for bacterial and archaeal genomes (2,457 complete and 5,181 draft). These are 
 identified using various domain profiles that directly or indirectly implicate a 
 particular protein in participating in signal transduction.
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MiST2.Domain.Load">
 <summary>
 从内部的资源文件之中进行加载
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.MiST2.MiST2">
 <summary>
 MiST2对某一个基因组的注释所产生的数据库文件
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.MiST2.MiST2.ProfileImageUrl">
 <summary>
 * Note: Chart based on domain counts
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MiST2.Replicon">
 <summary>
 基因组之中的一个复制子
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.MiST2.Replicon.Size">
 <summary>
 Replicon Size (Mbp)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MiST2.Replicon.OneComponent">
 <summary>
 One-component
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MiST2.Replicon.ECF">
 <summary>
 Extra Cytoplasmic Function
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MiST2.Replicon.SignalProteinCollection">
 <summary>
 获取在本对象中所存储的所有的蛋白质对象
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.MiST2.Transducin">
 <summary>
 Signal Transduction Protein
 </summary>
 <remarks></remarks>

</member>
<member name="P:SMRUCC.genomics.Assembly.MiST2.Transducin.ImageUrl">
 <summary>
 Image file url
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MiST2.Transducin.GetDomainArchitecture">
 <summary>
 从DomainImage字符串之中解析出结构域数据，并返回自身
 </summary>
 <returns></returns>
 <remarks>
 http://mistdb.com/arch.php?l=646;seg(115|136)+seg(242|254)+seg(517|521)+coil(266|286)+PAS_4(145|244)+HisKA(284|350)+HK_CA:3(353|508)+RR(8|127)+RR(530|646)+
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MiST2.TwoComponent.HisK">
 <summary>
 Histidine kinase
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MiST2.TwoComponent.HHK">
 <summary>
 Hybrid histidine kinase
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MiST2.TwoComponent.RR">
 <summary>
 Response regulator
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.MiST2.TwoComponent.HRR">
 <summary>
 Hybrid response regulator
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.MiST2.TwoComponent.GetRR">
 <summary>
 获取所有的双组份系统之中的RR蛋白质的基因编号
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.MiST2.TwoComponent.get_HisKinase">
 <summary>
 获取所有的双组份系统之中的Hisk蛋白质的基因编号
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.MiST2.WebServices.DownloadData(System.String)">
 <summary>
 使用这个方法进行数据的下载：
 获取某一个物种基因组内的信号转导网络数据
 首先，在MisT2网站上搜索菌株名称，得到菌株编号
 之后在使用所得到的<paramref name="speciesCode">菌株编号</paramref>调用本方法既可以下载数据了
 </summary>
 <param name="speciesCode">MiST2数据库内的物种编码</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.MiST2.WebServices.Download(System.String)">
 <summary>
 获取目标页面内部的所有蛋白质数据
 </summary>
 <param name="url"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.CDD.Blastp.Domain">
 <summary>
 The protein domain object that parse from the output log.
 (从日志文件之中所解析出来的蛋白质结构域对象)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.CDD.Blastp.Domain.ID">
 <summary>
 The protein domain id in the CDD database.
 (目标蛋白质结构域在CDD数据库之中的ID编号)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.CDD.Blastp.Domain.Left">
 <summary>
 The left side residue number of this domain.(本结构域的左侧的残基编号)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.CDD.Blastp.Domain.Right">
 <summary>
 The right side residue number of this domain.(本结构域的右侧的残基编号) 
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.CDD.Blastp.Domain.ToString">
 <summary>
 IDE debug
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.CDD.Blastp.Domain.op_GreaterThan(SMRUCC.genomics.Assembly.NCBI.CDD.Blastp.Domain,SMRUCC.genomics.Assembly.NCBI.CDD.Blastp.Domain)">
 <summary>
 比较两个Domain对象的位置的前后关系
 </summary>
 <param name="a"></param>
 <param name="b"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.CDD.Blastp.DomnArch">
 <summary>
 The blast+ program alignment output log file analysis module.
 (blast+程序的序列比对日志输出文件的分析模块)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.CDD.Blastp.DomnArch.Save(System.String)">
 <summary>
 Save the domain architecture model into a xml file.
 (将本蛋白质的结构域模型保存为一个XML文件)
 </summary>
 <param name="XmlFile"></param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.CDD.Blastp.DomnArch.Parse(System.String)">
 <summary>
 Parsing a blastp output log file and get the protein domains.
 (通过分析一个BLASTP分析得到的报告文件而获取一个蛋白质的结构数据)
 </summary>
 <param name="LogFile">The path of the target log file.(目标日志文件的文件路径)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.CDD.Blastp.DomnArch.Load(System.String)">
 <summary>
 Restore a domain architecture model from a xml file.
 (从一个XML文件之中读取一个蛋白质结构域模型)
 </summary>
 <param name="XmlFile"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.CDD.Blastp.DomnArch.op_Implicit(System.String)~SMRUCC.genomics.Assembly.NCBI.CDD.Blastp.DomnArch">
 <summary>
 Read the out put log file from a specific file.
 (从日个指定的文件之中读取输出日志，进而进行下一步的分析)
 </summary>
 <param name="File">The path of the log file.(目标日志文件的文件路径)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.CDD.DomainInfo">
 <summary>
 The query interface of the local CDD database.(CDD数据库的查询接口)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.CDD.DomainInfo.Query(System.String)">
 <summary>
 没有查询到的时候会返回一个空值
 </summary>
 <param name="Id"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.CDD.Database.Db(System.String)">
 <summary>
 返回指定名称的数据库的文件路径
 </summary>
 <param name="Name"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.CDD.Database.Cdd">
 <summary>
 cdd.fasta
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.CDD.Database.Cog">
 <summary>
 cog.fasta
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.CDD.Database.Kog">
 <summary>
 kog.fasta
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.CDD.Database.Pfam">
 <summary>
 pfam.fasta
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.CDD.Database.Prk">
 <summary>
 prk.fasta
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.CDD.Database.Smart">
 <summary>
 smart.fasta
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.CDD.Database.Tigr">
 <summary>
 tigr.fasta
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.CDD.Database.FastaLoader">
 <summary>
 本对象会将读取的数据缓存与内存之中，以加速下一次查询的速度
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.CDD.DbFile">
 <summary>
 CDD database builder.(CDD数据库构建工具)
 </summary>
 <remarks>
 ftp://ftp.ncbi.nlm.nih.gov/pub/mmdb/cdd/cdd.tar.gz
 </remarks>
 
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.CDD.DbFile.Smp(System.String)">
 <summary>
 不存在则返回空值
 </summary>
 <param name="Id"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.CDD.DbFile.ContainsId(System.String)">
 <summary>
 非并行版本的<see cref="P:SMRUCC.genomics.Assembly.NCBI.CDD.SmpFile.Name">AccessionId</see>, <see cref="P:SMRUCC.genomics.Assembly.NCBI.CDD.SmpFile.ID">TagId</see>, <see cref="P:SMRUCC.genomics.Assembly.NCBI.CDD.SmpFile.CommonName">CommonName</see>
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.CDD.DbFile.ContainsId_p(System.String)">
 <summary>
 并行版本的
 </summary>
 <param name="Id"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.CDD.DbFile.Takes(System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 根据唯一标识符的集合来获取数据库记录数据
 </summary>
 <param name="lstAccId"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.CDD.DbFile.PreLoad(System.String)">
 <summary>
 在编译整个CDD数据库之前进行预加载
 </summary>
 <param name="DIR"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.CDD.Pn.FileList">
 <summary>
 The file list of the sub database in this CDD database.
 (这个数据库子库的文件列表)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.CDD.Pn.FilePath">
 <summary>
 The file path of this pn file.
 (这个pn文件的文件路径)
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.CDD.SmpFile">
 <summary>
 The file data structrue description of each domain smp description data before the CDD database compilation operation.
 (在对CDD数据库编译之前，每一个结构域对象的单独的数据文件格式)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.CDD.SmpFile.SequenceData">
 <summary>
 The sequence data of this conserved structure domain.
 (这个保守的结构域的氨基酸分子序列数据)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.CDD.SmpFile.Name">
 <summary>
 UniqueId
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.CDD.SmpFile.EXPORT">
 <summary>
 从一个smp文件之中导出一个FASTA序列数据
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.COG.COGCategories.NotAssigned">
 <summary>
 No function category assigned to this gene
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.COG.COGCategories.Genetics">
 <summary>
 INFORMATION STORAGE AND PROCESSING
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.COG.COGCategories.Signaling">
 <summary>
 CELLULAR PROCESSES AND SIGNALING
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.COG.COGCategories.Metabolism">
 <summary>
 METABOLISM
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.COG.COGCategories.Unclassified">
 <summary>
 POORLY CHARACTERIZED
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.COG.COGFunction">
 <summary>
 COG function description data.
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGFunction.Category">
 <summary>
 COG catagory class enumeration value.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGFunction.Catalog">
 <summary>
 COG
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGName">
 <summary>
 ###### cognames2003-2014.tab
 
 Contains list of COG annotations. Tab-delimited Functional classes 
 (categories) are described in the file ``fun2003-2014.tab`` (see 2.3). 
 Some COGs belong to more than one functional Class; in these cases 
 the class listed first Is considered to be primary.
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGName.COG">
 <summary>
 COG-id
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGName.Func">
 <summary>
 functional-class
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGName.Name">
 <summary>
 COG-annotation
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGName.LoadTable(System.String)">
 <summary>
 Load table data from file.
 </summary>
 <param name="path"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGFunc">
 <summary>
 fun2003-2014.tab
 Contains list of functional classes. Tab-delimited
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGFunc.Code">
 <summary>
 class-id
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGFunc.Name">
 <summary>
 description
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.COG.COGs.Genomes">
 <summary>
 genomes2003-2014.tab
 Contains list of genomes (711). Tab-delimited
 
 The field &lt;genome-name> serves as a subdirectory name on NCBI Genomes
 FTP site

 ftp://ftp.ncbi.nih.gov/genomes/Bacteria/[ncbi-ftp-name]

 where the genome sequence was availavle As Of February 2014. The
 field &lt;ncbi-taxid> Is a semicolon-delimited lineage according to the
 NCBI Taxonomy database (As Of February 2014).
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.Genomes.Code">
 <summary>
 genome-code
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.Genomes.Taxid">
 <summary>
 ncbi-taxid
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.Genomes.FTP_name">
 <summary>
 ncbi-ftp-name
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGProt">
 <summary>
 prot2003-2014.tab
 Contains RefSeq accession codes for all proteins with assigned COG domains.
 
 At the moment (April 02, 2015) RefSeq database is in a state of
 transition; some of the &lt;refseq-acc> entries are Not accessible. This
 table will be updated As soon As RefSeq Is stable.
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGProt.ProtID">
 <summary>
 protein-id
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGProt.RefSeq">
 <summary>
 refseq-acc
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGs">
 <summary>
 
 ############################################################
 0.	General remarks
 ############################################################
 
 This Is a December 2014 release of 2003-2014 COGs constructed by
 Eugene Koonin 's group at the National Center for Biotechnology
 Information (NCBI), National Library of Medicine (NLM), National
 Institutes of Health (NIH).
 
 #-----------------------------------------------------------
 0.1.	Citation
 
 Galperin MY, Makarova KS, Wolf YI, Koonin EV.
 
 Expanded microbial genome coverage And improved protein family
 annotation in the COG database.
 
 Nucleic Acids Res. 43, D261-D269, 2015
  &lt;http: //www.ncbi.nlm.nih.gov/pubmed/25428365>
 
 #-----------------------------------------------------------
 0.2.	Contacts
 
 &lt;COGsncbi.nlm.nih.gov>
 
 ############################################################
 1.	Notes
 ############################################################
 
 #-----------------------------------------------------------
 1.1.	2003-2014 COGs
 
 This release contains 2003 COGs assigned To a representative Set Of
 bacterial And archaeal genomes, available at February 2014. No New
 COGs were constructed.
 
 #-----------------------------------------------------------
 1.2.	GIs And Refseq IDs
 
 Sequences in COGs are identified by GenBank GI numbers. GI numbers
 generally are transient. There are two ways To make a more permanent
 link between the protein In COGs And the outside databases: via the
 RefSeq accession codes (see 2.5) And via the protein sequences (see
 2.6).
 
 Note, however, that at the moment (April 02, 2015) RefSeq database Is
 in a state of transition; some of the &lt;refseq-acc> entries are Not
 accessible. This accession table will be updated as soon as RefSeq Is
 stable.
 
 </summary>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGs.GroupRelease(System.String)">
 <summary>
 将prot2003-2014.fasta按照<see cref="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.ProtFasta.GenomeName"/>分组导出，以方便使用bbh进行注释分析
 </summary>
 <param name="Fasta"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGs.SaveRelease(System.String,System.String)">
 <summary>
 
 </summary>
 <param name="Fasta">prot2003-2014.fasta</param>
 <param name="EXPORT">数据按照基因组分组到处的结果所保存的文件夹</param>
 <returns></returns>
 
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGTable">
 <summary>
 cog2003-2014.csv
 CSV table row for COG, Contains list of orthology domains. Comma-delimited,
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGTable.DomainID">
 <summary>
 &lt;domain-id>
 
 In this version the fields &lt;domain-id> and &lt;protein-id> are identical
 And both normally refer to GenBank GIs. Thus neither &lt;domain-id> nor
 &lt;protein-id> are necessarily unique in this file (this happens when a
 protein consists Of more than one orthology domains, e.g. 48478501).
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGTable.GenomeName">
 <summary>
 &lt;genome-name>
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGTable.ProteinID">
 <summary>
 &lt;protein-id>: GI
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGTable.ProteinLength">
 <summary>
 &lt;protein-length>
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGTable.Start">
 <summary>
 &lt;domain-start>
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGTable.Ends">
 <summary>
 &lt;domain-End>
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGTable.COGId">
 <summary>
 &lt;COG-id>
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGTable.Membership">
 <summary>
 &lt;membership-Class>
 
 The &lt;membership-class> field indicates the nature of the match
 between the sequence And the COG consensus
 
 + ``0`` - the domain matches the COG consensus;
 + ``1`` - the domain Is significantly longer than the COG consensus;
 + ``2`` - the domain Is significantly shorter than the COG consensus;
 + ``3`` - partial match between the domain And the COG consensus.
 
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGTable.LoadCsv(System.String)">
 <summary>
 * Example:

 333894695,Alteromonas_SN2_uid67349,333894695,427,1,427,COG0001,0,
 </summary>
 <param name="path"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGTable.GI2COGs(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.NCBI.COG.COGs.COGTable})">
 <summary>
 一个蛋白可能会因为比对上多个结构域而出现多个COG编号的情况
 </summary>
 <param name="cogTable"></param>
 <returns>``gi, (genome_name, cogs())``</returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.COG.COGs.ProtFasta">
 <summary>
 prot2003-2014.fa.gz
 Sequences of all proteins with assigned COG domains in FASTA format
 (gzipped)

 The first word of the defline always starts with "gi|&lt;protein-id>".
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.COG.COGs.ProtFasta.ToString">
 <summary>
 >gi|103485499|ref|YP_615060.1| chromosomal replication initiation protein [Sphingopyxis alaskensis RB2256]
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.COG.Function">
 <summary>

 </summary>
 <remarks>
 ###### INFORMATION STORAGE AND PROCESSING
 + [J] Translation, ribosomal structure and biogenesis
 + [A] RNA processing and modification
 + [K] Transcription
 + [L] Replication, recombination and repair
 + [B] Chromatin structure and dynamics

 ###### CELLULAR PROCESSES AND SIGNALING
 + [D] Cell cycle control, cell division, chromosome partitioning
 + [Y] Nuclear structure
 + [V] Defense mechanisms
 + [T] Signal transduction mechanisms
 + [M] Cell wall/membrane/envelope biogenesis
 + [N] Cell motility
 + [Z] Cytoskeleton
 + [W] Extracellular structures
 + [U] Intracellular trafficking, secretion, and vesicular transport
 + [O] Posttranslational modification, protein turnover, chaperones

 ###### METABOLISM
 + [C] Energy production and conversion
 + [G] Carbohydrate transport and metabolism
 + [E] Amino acid transport and metabolism
 + [F] Nucleotide transport and metabolism
 + [H] Coenzyme transport and metabolism
 + [I] Lipid transport and metabolism
 + [P] Inorganic ion transport and metabolism
 + [Q] Secondary metabolites biosynthesis, transport and catabolism

 ###### POORLY CHARACTERIZED
 + [R] General function prediction only
 + [S] Function unknown
 </remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.COG.Function.CanbeCategoryAs(System.String,SMRUCC.genomics.Assembly.NCBI.COG.COGCategories)">
 <summary>
 当具有多个COG分类的时候，可以用这个来判断该基因是否可以被分类为指定的大分类
 </summary>
 <returns></returns>
 <param name="COG">必须是经过<see cref="M:SMRUCC.genomics.BioAssemblyExtensions.GetCOGCategory(System.String)"/>修剪的字符串</param>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.COG.Function.__getCategory(System.Char)">
 <summary>
 得到COG分类
 </summary>
 <param name="cogChar"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.COG.Function.GetCategory(System.String)">
 <summary>
 请注意，这个函数只会返回一个COG编号
 </summary>
 <param name="COG">已经自动处理好所有事情了</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.COG.Function.__trimCOGs(System.String)">
 <summary>

 </summary>
 <param name="value">COGxxxZZZ</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.COG.Function.GetCategories(System.Int32)">
 <summary>

 </summary>
 <param name="category">相加得到的值，可以在这里使用这个函数进行分解</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.COG.Function.Statistics(System.String[])">
 <summary>
 COG profiling counting.
 </summary>
 <param name="lstId">List COG id</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.COG.Function.ClassCategory``1(System.Collections.Generic.IEnumerable{``0})">
 <summary>
 
 </summary>
 <typeparam name="T"></typeparam>
 <param name="source"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.COG.Function.Default">
 <summary>
 Default COGs function catalog data
 </summary>
 <remarks>
 ###### INFORMATION STORAGE AND PROCESSING
 + [J] Translation, ribosomal structure and biogenesis
 + [A] RNA processing and modification
 + [K] Transcription
 + [L] Replication, recombination and repair
 + [B] Chromatin structure and dynamics

 ###### CELLULAR PROCESSES AND SIGNALING
 + [D] Cell cycle control, cell division, chromosome partitioning
 + [Y] Nuclear structure
 + [V] Defense mechanisms
 + [T] Signal transduction mechanisms
 + [M] Cell wall/membrane/envelope biogenesis
 + [N] Cell motility
 + [Z] Cytoskeleton
 + [W] Extracellular structures
 + [U] Intracellular trafficking, secretion, and vesicular transport
 + [O] Posttranslational modification, protein turnover, chaperones

 ###### METABOLISM
 + [C] Energy production and conversion
 + [G] Carbohydrate transport and metabolism
 + [E] Amino acid transport and metabolism
 + [F] Nucleotide transport and metabolism
 + [H] Coenzyme transport and metabolism
 + [I] Lipid transport and metabolism
 + [P] Inorganic ion transport and metabolism
 + [Q] Secondary metabolites biosynthesis, transport and catabolism

 ###### POORLY CHARACTERIZED
 + [R] General function prediction only
 + [S] Function unknown
 </remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.CsvExports.gbEntryBrief">
 <summary>
 Genbank数据库的简要信息Csv表格
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.CsvExports.gbEntryBrief.Locus">
 <summary>
 基因组的编号
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.CsvExports.gbEntryBrief.GC_Content">
 <summary>
 这个属性可以当作质粒对象的特征，虽然在生物学上面无法区分不同质粒，但是在去除重复的时候，这个值却是唯一的
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.CsvExports.gbEntryBrief.Transposases">
 <summary>
 转座酶
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.CsvExports.GenbankExportInfo`1._root">
 <summary>
 Repository root for this export source.
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.CsvExports.GenbankExportInfo`1.#ctor(System.String,SMRUCC.genomics.Assembly.NCBI.GenBank.CsvExports.GenbankExportInfo{`0}.GenbankEntryInfoLoadMethod,SMRUCC.genomics.Assembly.NCBI.GenBank.CsvExports.GenbankExportInfo{`0}.ORFInfoLoadMethod)">
 <summary>
 根目录
 </summary>
 <param name="Root"></param>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.gbExportService">
 <summary>
 Genbank export methods collection.
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.gbExportService.DumpEXPORT(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.CDS)">
 <summary>
 Convert a feature site data in the NCBI GenBank file to the dump information table.
 </summary>
 <param name="obj">CDS标记的特性字段</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.gbExportService.Distinct(System.String,System.Boolean)">
 <summary>
 尝试去除重复的记录
 </summary>
 <param name="source">原始的Genbank数据库文件所存放的文件夹</param>
 <returns></returns>
 <param name="Trim">是否去除没有序列数据的或者格式已经损坏的数据库文件，并且将原始文件删除？默认都去除</param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.gbExportService.Distinct(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.NCBI.GenBank.CsvExports.Plasmid})">
 <summary>
 返回去除掉重复的数据之后的AccessionId编号
 </summary>
 <param name="data"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.gbExportService.CopyGenomeSequence(System.String,System.String)">
 <summary>
 将PTT文件夹之中的基因组序列数据复制到目标文件夹之中
 </summary>
 <param name="source"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.gbExportService.LoadGbkSource(System.String,System.String[])">
 <summary>
 假若目标GBK是使用本模块之中的方法保存或者导出来的，则可以使用本方法生成Entry列表；（在返回的结果之中，KEY为文件名，没有拓展名，VALUE为文件的路径）
 </summary>
 <param name="source"></param>
 <param name="ext">文件类型的拓展名称</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.gbExportService.GbffToPTT(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File,System.Boolean)">
 <summary>
 将GBK文件之中的基因的位置数据导出为PTT格式的数据，这个函数所导出来的数据包含了蛋白质和RNA，如果<paramref name="ORF"/>为False的话。
 </summary>
 <param name="genbank">导出CDS gene和RNA部分的数据</param>
 <param name="ORF">默认参数值为True，表示只导出蛋白编码基因的位置信息</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.gbExportService.BatchExport(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File},SMRUCC.genomics.ComponentModel.Annotation.GeneTable[]@,SMRUCC.genomics.Assembly.NCBI.GenBank.CsvExports.gbEntryBrief[]@,System.String,System.Boolean)">
 <summary>

 </summary>
 <param name="list"></param>
 <param name="GeneList"></param>
 <param name="GBK"></param>
 <param name="FastaExport">Fasta序列文件的导出文件夹</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.gbExportService.ExportGeneFeatures(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File)">
 <summary>
 Exports CDS feature
 </summary>
 <param name="gbk"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.gbExportService.BatchExportPlasmid(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File},SMRUCC.genomics.ComponentModel.Annotation.GeneTable[]@,SMRUCC.genomics.Assembly.NCBI.GenBank.CsvExports.Plasmid[]@,System.String,System.Boolean)">
 <summary>

 </summary>
 <param name="list"></param>
 <param name="GeneList"></param>
 <param name="GBK"></param>
 <param name="FastaExport"></param>
 <param name="FastaWithAnnotation">是否将序列的注释信息一同导出来，<see cref="F:Microsoft.VisualBasic.Constants.vbTrue"></see>会将功能注释信息和菌株信息一同导出，<see cref="F:Microsoft.VisualBasic.Constants.vbFalse"></see>则仅仅会导出基因号，假若没有基因号，则会导出蛋白质编号</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.gbExportService.ExportGeneNtFasta(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File,System.Boolean,System.Boolean)">
 <summary>
 {locus_tag, gene.Location.ToString, products.SafeGetValue(locus_tag)?.Function}.
 (导出每一个基因的核酸序列)
 </summary>
 <param name="gb">Genbank数据库文件</param>
 <param name="geneName">
 If this parameter is specific as True, then this function will try using 
 geneName as the fasta sequence title, or using locus_tag value as default.
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFFFeatureDumps.FeatureDumps(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File,System.String[],System.Boolean)">
 <summary>
 Dump feature sites information data into a tabular dataframe.
 </summary>
 <param name="gb"></param>
 <param name="features"></param>
 <param name="dumpAll"></param>
 <returns></returns>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFFFeatureDumps._dumpMethods">
 <summary>
 Method delegates for feature dumping
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.Extensions.LocusMaps(SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT)">
 <summary>
 ``[location => locus_tag]``
 </summary>
 <param name="PTT"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.Extensions.ExportProteins(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File)">
 <summary>
 Export protein sequence with full annotation.
 </summary>
 <param name="gbk"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.Extensions.ExportProteins_Short(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File,System.Boolean)">
 <summary>
 Locus_tag Product_Description
 </summary>
 <param name="gb"></param>
 <returns></returns>
 <remarks></remarks>

</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.Extensions.__protShort(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Feature,System.Boolean)">
 <summary>
 假若是新注释的基因组还没有基因号，则默认使用位置来做唯一标示
 </summary>
 <param name="feature"></param>
 <param name="onlyLocusTag"></param>
 <returns></returns>
 <remarks>
 > locus_id info
 </remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.Extensions.GeneList(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File)">
 <summary>

 </summary>
 <returns>{locus_tag, gene}</returns>
 <remarks></remarks>

</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.IgbComponent">
 <summary>
 Genbank数据库文件的构件
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.IgbComponent.gb">
 <summary>
 Link to the genbank raw object.(这个构件对象所处在的``genbank``数据库对象.)
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File">
 <summary>
 NCBI GenBank database file.(NCBI GenBank数据库文件)
 </summary>
 <remarks></remarks>

</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File.Origin">
 <summary>
 This GenBank keyword section stores the sequence data for this database.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File.Accession">
 <summary>
 LocusID, GI or AccessionID
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File.Definition">
 <summary>
 The definition value for this organism's GenBank data.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File.Source">
 <summary>
 物种信息
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File.Locus">
 <summary>
 The brief entry information of this genbank data.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File.isPlasmid">
 <summary>
 Is plasmid source?
 (这个Genbank对象是否为一个质粒的基因组数据)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File.Taxon">
 <summary>
 物种数据
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File.HasSequenceData">
 <summary>
 这个Genbank对象是否具有序列数据
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File.IsWGS">
 <summary>
 This GenBank data is the WGS(Whole genome shotgun) type data.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File.SourceFeature">
 <summary>
 Gets the original source brief entry information of this genome.(获取这个基因组的摘要信息)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File.Read(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Feature)">
 <summary>
 Read the gene nucleic acid sequence of a gene feature and then returns a fasta sequence object.
 (读取一个基因特性的核酸序列，该Feature对象可以为任意形式的Qualifier的值，但是必需要具有Location属性)
 </summary>
 <param name="feature">The target feature site on the genome DNA sequence.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File.op_Implicit(System.String)~SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File">
 <summary>
 Read a specific GenBank database text file.
 (读取一个特定的GenBank数据库文件)
 </summary>
 <param name="Path">The target database text file to read.(所要读取的目标数据库文件)</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File.Load(System.String)">
 <summary>
 当发生错误的时候，会返回空值
 </summary>
 <param name="path"></param>
 <returns></returns>
 <remarks></remarks>

</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File.IsValidGenbankFormat(System.String)">
 <summary>
 检查目标文件是否为Genbank文件格式
 </summary>
 <param name="path"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File.LoadDatabase(System.String,System.Boolean)">
 <summary>
 Using this function to load the ncbi genbank database file if the database file 
 contains more than one genome.
 
 (假若一个gbk文件之中包含有多个记录的话，可以使用这个函数进行数据的加载，多个genebank记录在一个文件之中
 一般出现在细菌具有染色体基因组和质粒基因组这种多个复制子的情况)
 </summary>
 <param name="filePath">The file path of the genbank database file, this gb file may contains sevral gb sections</param>
 <returns></returns>
 <remarks></remarks>

</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.GbkParser.Read(System.String)">
 <summary>
 将一个GBK文件从硬盘文件之中读取出来，当发生错误的时候，会抛出错误
 </summary>
 <param name="Path"></param>
 <returns></returns>
 <remarks></remarks>

</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.GbkParser.Internal_readBlock(System.String,System.String[]@)">
 <summary>
 快速读取数据库文件中的某一个字段的文本块
 </summary>
 <param name="keyword">字段名</param>
 <returns>该字段的内容</returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.GbkWriter">
 <summary>
 将数据写入现有的genbank文件或者创建新的genbank文件
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.GbkWriter.CreateDoc(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File)">
 <summary>
 将genbank对象模型转换为文本文档数据以进行数据保存
 </summary>
 <param name="gb"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.GbkWriter.ToString(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.ORIGIN)">
 <summary>
 保存基因组序列数据
 </summary>
 <param name="origin"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.GbkWriter.ToString(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FEATURES)">
 <summary>
 生成基因组位点注释数据
 </summary>
 <param name="features"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.GbkWriter.ToString(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Feature)">
 <summary>
 用于生成gbk文档里面的一部分文档节点
 </summary>
 <param name="feature"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.GbkWriter.WriteGenbank(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.File,System.String,Microsoft.VisualBasic.Text.Encodings)">
 <summary>
 使用这个函数将更新之后的genbank对象写入文件之中
 </summary>
 <param name="gb"></param>
 <param name="path$">``*.gb``，所需要进行保存的genbank数据库的文件路径</param>
 <param name="encoding">文本编码</param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.LOCUS.AccessionID">
 <summary>
 一般可以通过这个属性来作为整个基因组数据的唯一编号
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.VERSION.#ctor(System.String)">
 <summary>
 
 </summary>
 <param name="v">version string</param>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.COMMENT.BLANKS_INDEX">
 <summary>
 This constant using for NCBI.Genbank keywords parsing.
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.DBLINK">
 <summary>
 数据库之间的相互链接的列表
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.DBLINK.Links">
 <summary>
 
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.DBLINK.ToString">
 <summary>
 返回的是genbank的这部分的文本数据，用于生成genbank文件
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.CDS">
 <summary>
 为CDS字段记录所特化的对象
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.CDS.#ctor(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Feature)">
 <summary>
 The cds feature
 </summary>
 <param name="cds"></param>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.tRNAAnticodon">
 <summary>
 
 </summary>
 <remarks>
 ```
 /anticodon=(pos:complement(529822..529824),aa:Phe,seq:gaa)
 ```
 </remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Feature">
 <summary>
 A sequence feature site on the genome DNA sequence.(基因组序列上面的特性区域片段)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Feature.KeyName">
 <summary>
 第6至第20列的小字段的字段名
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Feature.Location">
 <summary>
 The location of this feature site on the DNA chain.(本特性位点在DNA链上面的位置)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Feature.SequenceData">
 <summary>
 nt sequence of this feature site.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Feature.innerList">
 <summary>
 请注意在值中有拼接断行所产生的空格，在导出CDS序列的时候，请注意消除该空格
 </summary>
 <remarks>这里不能够使用字典来进行储存数据，因为字典对大小写敏感并且这里面会有重复的Key出现</remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Feature.Query(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers)">
 <summary>
 Get feature describ value string by key
 </summary>
 <param name="Key"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Feature.QueryDuplicated(System.String)">
 <summary>
 Some key would be duplicated 
 </summary>
 <param name="key"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Feature.Add(System.String,System.String)">
 <summary>
 添加一个注释信息
 </summary>
 <param name="key"></param>
 <param name="value"></param>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Feature.Item(System.String)">
 <summary>
 对于已经存在的数据，本方法会覆盖原有的数据，假若不存在，或者目标对象有多个值，则会进行添加
 </summary>
 <param name="key"></param>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FEATURES._innerList">
 <summary>
 默认第一个元素就是``source``元素
 </summary>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FEATURES.FEATURE_HEADER">
 <summary>
 匹配每一个特性位点的头部标签的格式
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FEATURES.source">
 <summary>
 The ``source`` feature definition.
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FEATURES.GetByLocation(System.Int32,System.Int32)">
 <summary>
Get feature site data by nucleotide location.
 </summary>
 <param name="left"></param>
 <param name="right"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FEATURES.Query(System.String,SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers,System.String)">
 <summary>

 </summary>
 <param name="KeyValue">Part of the key value that to search in this genbank file.</param>
 <param name="qKey">Qualifier enum value of the key</param>
 <param name="Key">Feature type that to search, default is search all type of the feature.</param>
 <returns>The feature list that match the query conditions.</returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FEATURES.ListFeatures(System.String)">
 <summary>
 列举出所有 该字段之下的域的数据
 </summary>
 <param name="fieldName"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FEATURES.AddGenes">
 <summary>
 在CDS之前添加基因
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Location.JoinLocation">
 <summary>
 对于环状的DNA分子，当某一个特性位点跨越了终点的时候，会有一个这个属性，本属性此时不会为空值
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Location.Complement">
 <summary>
 这个基因的位置是否在互补链
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Location.ContiguousRegion">
 <summary>
 假若目标对象是真核生物基因组的话，则可能会因为内含子的原因出现不连续的片段，故而此时的<see cref="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Location.Locations"></see>属性会有多个值，这个属性会尝试将连续的区域返回。对于原核生物而言，也可以直接使用这个属性来获取特性位点的在基因组序列之上的位置
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.RegionSegment">
 <summary>
 A site region on the sequence.(序列上面的一个位点)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.ParserHelper.__formatString(System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 去除数据中的断行
 </summary>
 <param name="s"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.ParserHelper.readBlock(System.Int64,System.String[])">
 <summary>
 读取从某一个行号开始的文本块
 </summary>
 <param name="start">The start index of the reading.(读取的起始位置)</param>
 <param name="data">The text data source to read.(所读取的数据源)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers">
 <summary>
 Qualifiers provide additional information about features. They take
 the form of a slash (/) followed by a qualifier name and, if
 applicable, an equal sign (=) and a qualifier value. Feature
 qualifiers begin at column 22
 </summary>
 <remarks>请注意，由于是直接使用ToString方法进行查询键值的获取的，所以请不要修改这些枚举对象的大小写</remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.anticodon">
 <summary>
 Location of the anticodon of tRNA and the amino acid for which it codes
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.bound_moiety">
 <summary>
 Moiety bound
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.citation">
 <summary>
 Reference to a citation providing the claim of or evidence for a feature
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.codon">
 <summary>
 Specifies a codon that is different from any found in the reference genetic code
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.codon_start">
 <summary>
 Indicates the first base of the first complete codon in a CDS (as 1 or 2 or 3)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.cons_splice">
 <summary>
 Identifies intron splice sites that do not conform to the 5'-GT... AG-3' splice site consensus
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.db_xref">
 <summary>
 A database cross-reference; pointer to related information in another database. A description of all cross-references can be found at: http://www.ncbi.nlm.nih.gov/collab/db_xref.html
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.direction">
 <summary>
 Direction of DNA replication
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.EC_number">
 <summary>
 Enzyme Commission number for the enzyme product of the	sequence
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.evidence">
 <summary>
 Value indicating the nature of supporting evidence
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.frequency">
 <summary>
 Frequency of the occurrence of a feature
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.function">
 <summary>
 Function attributed to a sequence
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.gene">
 <summary>
 Symbol of the gene corresponding to a sequence region (usable with all features)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.label">
 <summary>
 A label used to permanently identify a feature
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.map">
 <summary>
 Map position of the feature in free-format text
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.mod_base">
 <summary>
 Abbreviation for a modified nucleotide base
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.note">
 <summary>
 Any comment or additional information
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.number">
 <summary>
 A number indicating the order of genetic elements (e.g., exons or introns) in the 5 to 3 direction
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.organism">
 <summary>
 Name of the organism that is the source of the	sequence data in the record. 
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.partial">
 <summary>
 Differentiates between complete regions and partial ones
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.phenotype">
 <summary>
 Phenotype conferred by the feature
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.product">
 <summary>
 Name of a product encoded by a coding region (CDS) feature
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.pseudo">
 <summary>
 Indicates that this feature is a non-functional version of the element named by the feature key
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.rpt_family">
 <summary>
 Type of repeated sequence; Alu or Kpn, for example
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.rpt_type">
 <summary>
 Organization of repeated sequence
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.rpt_unit">
 <summary>
 Identity of repeat unit that constitutes a repeat_region
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.standard_name">
 <summary>
 Accepted standard name for this feature
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.transl_except">
 <summary>
 Translational exception: single codon, the translation of which does not conform to the reference genetic code
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.translation">
 <summary>
 Amino acid translation of a coding region
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.type">
 <summary>
 Name of a strain if different from that in the SOURCE field
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.FeatureQualifiers.usedin">
 <summary>
 Indicates that feature is used in a compound feature in another entry
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.SearchInvoker">
 <summary>
 可以使用本模块内的方法搜索<see cref="N:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES"></see>模块之中的内容
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.SearchInvoker.Search(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.SearchMethod,System.String)">
 <summary>
 Delegate invoker
 </summary>
 <param name="method"></param>
 <param name="keyword"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.ORIGIN">
 <summary>
 This GenBank keyword section stores the sequence data for this database.
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.ORIGIN.SequenceData">
 <summary>
 The sequence data that stores in this GenBank database, which can be a genomics DNA sequence, protein sequence or RNA sequence.
 (序列数据，类型可以包括基因组DNA序列，蛋白质序列或者RNA序列)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.ORIGIN.InvalidWarns">
 <summary>
 The origin nucleic acid sequence contains illegal character in the nt sequence, ignored as character N... 
 for <see cref="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.ORIGIN.SequenceData"/>
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.ORIGIN.Char(System.Int64)">
 <summary>
 ``<see cref="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.ORIGIN.SequenceData"/> -> index``
 </summary>
 <param name="index"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.ORIGIN.Size">
 <summary>
 基因组的大小
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.ORIGIN.GetFeatureSegment(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Feature)">
 <summary> 
 获取该Feature位点的序列数据
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.ORIGIN.GCSkew">
 <summary>
 是整条序列的GC偏移
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.ORIGIN.ToFasta">
 <summary>
 Returns the whole genome sequence which was records in this GenBank database file.
 (返回记录在本Genbank数据库文件之中的全基因组核酸序列)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.REFERENCE">
 <summary>
 引用文献的解析模块，一个引用文献模块之中包含有若干篇引用文献<see cref="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.RefInfo"></see>
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.RefInfo">
 <summary>
 <see cref="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.REFERENCE"/>里面的一篇引用文献
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.SOURCE">
 <summary>
 物种信息
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.SOURCE.OrganismHierarchy">
 <summary>
 lineage
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.FastaObjects.GenomeSequence">
 <summary>
 *.fna 基因组序列
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.FastaObjects.GeneObject">
 <summary>
 *.ffn 基因序列
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.FastaObjects.Protein">
 <summary>
 *.faa 蛋白质序列
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief">
 <summary>
 The gene brief information data in a ncbi PTT document.(PTT文件之中的一行，即一个基因的对象摘要信息)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.Location">
 <summary>
 The location of this ORF gene on the genome sequence.(包含有PTT文件之中的Location, Strand和Length列)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.Gene">
 <summary>
 基因名，在genbank文件里面是/gene=，基因号，这个应该是GI编号，而非平常比较熟悉的字符串编号
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.Product">
 <summary>
 Protein product functional description in the genome.
 (基因的蛋白质产物的功能的描述)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.Length">
 <summary>
 The NT length of this ORF.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.Synonym">
 <summary>
 The gene's locus_tag data.
 (我们所正常熟知的基因编号，<see cref="T:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT"/>对象主要是使用这个属性值来生成字典对象的)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.IsORF">
 <summary>
 *.ptt => TRUE;  *.rnt => FALSE
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.DocumentParser(System.String,System.Boolean)">
 <summary>
 
 </summary>
 <param name="strLine">Ptt文档之中的一行数据</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.DocumentParser(System.String)">
 <summary>
 42..1370	+	442	66766353	dnaA	XC_0001	-	COG0593L	chromosome replication initiator DnaA
 </summary>
 <param name="strLine"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.IsBlankSegment">
 <summary>
 判断本对象是否是由<see cref="M:SMRUCC.genomics.ContextModel.LocationDescriptions.BlankSegment``1(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation)"></see>方法所生成的空白片段
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.DbAPI.GetDbEntries(System.String)">
 <summary>
 用于在加载PTT数据库的时候计算出有多少个基因组和质粒的数据在当前的数据库文件夹之中
 </summary>
 <param name="DIR"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.DbAPI.GetGb(System.String,System.String)">
 <summary>
 为了保持一些兼容性
 </summary>
 <param name="DIR"></param>
 <param name="locus"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTTEntry">
 <summary>
 数据库文件的列表
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT">
 <summary>
 The brief information of a genome.(基因组的摘要信息)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.GeneObjects">
 <summary>
 The gene brief information collection data in this genome.(这个基因组之中的所有的基因摘要数据)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.Title">
 <summary>
 基因组的标题
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.Size">
 <summary>
 The genome original sequence length.(基因组序列的长度)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.__innerTable">
 <summary>
 {<see cref="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.Synonym"/>, <see cref="T:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief"/>}
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.GetObject(System.Int32,System.Boolean)">
 <summary>
 查看某一个位点之上有哪些基因，假若需要查看某一个位点附近有哪些基因的话，则可以使用
 <see cref="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.GetRelatedGenes(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation,System.Boolean,System.Int32)"></see>方法进行查找
 </summary>
 <param name="site">基因组序列之上的一个碱基位点</param>
 <param name="ComplementStrand">该目标基因是否位于互补链之上</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.GetGeneByName(System.String)">
 <summary>
 Find gene by using genen name.
 </summary>
 <param name="Name">基因名称，而非基因号</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.GetGeneByDescription(System.Func{System.String,System.Boolean})">
 <summary>
 String fuzzy match on the gene ``product`` value
 </summary>
 <param name="matches"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.SaveXml(System.String,System.Text.Encoding)">
 <summary>
 Save this ptt document as an xml document.(保存Ptt数据库为Xml文件)
 </summary>
 <param name="Path"></param>
 <param name="encoding"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.Load(System.String,System.Boolean)">
 <summary>
 Load a ptt format text file, the ptt file is usually can be found at Ncbi FTP server for each species genome data.
 </summary>
 <param name="path">Text file format ptt file path</param>
 <returns></returns>
 <param name="fillBlank">Fill blank gene name.</param>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.NumOfProducts">
 <summary>
 The number of gene product counts in this genome data: <see cref="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.GeneObjects"/>.Length .(当前的基因组数据之中的基因对象的数目)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.ExistsLocusId(System.String)">
 <summary>
 Does the target locus_tag exists in this genome brief data model.
 (通过基因的locus_tag, <see cref="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.Synonym"/>来获取某一个基因对象是否存在)
 </summary>
 <param name="locusId"><see cref="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.Synonym"/></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.GeneObject(System.String)">
 <summary>
 通过基因的Locus_Tag, <see cref="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.Synonym"/>来获取某一个基因对象，不存在则返回空值
 </summary>
 <param name="locusId"><see cref="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.Synonym"/></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.GeneIDList">
 <summary>
 Gets a list of all of the gene object in this ptt document.(所有基因的基因号<see cref="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.Synonym"/>列表)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.TryGetGeneObjectValue(System.String,SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief@)">
 <summary>

 </summary>
 <param name="GeneID"><see cref="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.Synonym"/></param>
 <param name="value"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.GetStrandGene(SMRUCC.genomics.ComponentModel.Loci.Strands)">
 <summary>
 Gets the strand specified genes.
 </summary>
 <param name="strand"><see cref="F:SMRUCC.genomics.ComponentModel.Loci.Strands.Forward"/>/<see cref="F:SMRUCC.genomics.ComponentModel.Loci.Strands.Reverse"/>,
 <see cref="F:SMRUCC.genomics.ComponentModel.Loci.Strands.Unknown"/> will be treated as reversed.</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.TryGetGenesId(System.String)">
 <summary>
 由于GFF文件之中是按照GeneName来进行标识的，有些时候希望全部使用基因号进行标识，所以通过这个函数将基因名称统一转换为基因号
 </summary>
 <param name="tag">Tag data matches in fields:
 <see cref="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.Synonym"/>,
 <see cref="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.Gene"/>,
 <see cref="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief.PID"/>
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.GetRelatedGenes(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation,System.Boolean,System.Int32)">
 <summary>
 获取某一个位点在位置上有相关联系的基因
 </summary>
 <param name="loci"></param>
 <param name="unstrand"></param>
 <param name="ATGDist"></param>
 <returns></returns>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTTDbLoader._genomeContext">
 <summary>
 整个基因组中的所有基因的集合，包括有蛋白质编码基因和RNA基因
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTTDbLoader.ExportCOGProfiles``1">
 <summary>
 从PTT基因组注释数据之中获取COG分类数据
 </summary>
 <typeparam name="T_Entry"></typeparam>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTTDbLoader.CreateObject(System.Collections.Generic.IEnumerable{SMRUCC.genomics.ComponentModel.Annotation.IGeneBrief},SMRUCC.genomics.SequenceModel.FASTA.FastaSeq)">
 <summary>
 从其他的数据类型进行数据转换，转换数据格式为PTT格式，以方便用于后续的分析操作用途
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTTDbLoader.GetRelatedGenes(System.Int32,System.Int32,SMRUCC.genomics.ComponentModel.Loci.Strands,System.Int32)">
 <summary>
 会依照所传递进来的<paramref name="Strand">链的方向的参数</paramref>来查找与之相关的基因
 </summary>
 <param name="LociStart"></param>
 <param name="LociEnds"></param>
 <param name="Strand"></param>
 <param name="ATGDistance"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTTDbLoader.GetRelatedGenes(System.Int32,System.Int32,System.Int32)">
 <summary>
 This function will ignore the nucleoside direction adn founds the gene on both strand of the DNA.(将会忽略DNA链，两条链的位置上都会寻找)
 </summary>
 <param name="LociStart"></param>
 <param name="LociEnds"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTTDbLoader.#ctor(System.String,System.Boolean)">
 <summary>
 请注意，通过这个构造函数只能够读取一个数据库的数据，假若一个文件夹里面同时包含有了基因组数据和质粒的数据，则不推荐使用这个函数进行构造加载
 </summary>
 <param name="DIR"></param>
 <param name="simplify">数据库是精简版的，有些文件是缺失的</param>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTTDbLoader.GetGeneUniqueId(System.String,System.String)">
 <summary>
 基因序列中的pid似乎是无效的，都一样的，只能通过location来获取序列的标识号了
 </summary>
 <param name="Location"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTTDbLoader.ORF_PTT">
 <summary>
 *.ptt
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTTDbLoader.RNARnt">
 <summary>
 *.rpt
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTTDbLoader.GenomeFasta">
 <summary>
 (*.fna)(基因组的全长序列)
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTTDbLoader.RptGenomeBrief">
 <summary>
 *.rpt
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTTFileReader.Read(System.String,System.Boolean)">
 <summary>
 出错不会被处理，而<see cref="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT.Load(System.String,System.Boolean)"/>函数则会处理错误，返回Nothing
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.Rpt.Size">
 <summary>
 The chromesome DNA total length in bp
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.Rpt.Load``1(System.String)">
 <summary>
 从一个*.rpt文件之中加载一个基因组的摘要信息
 </summary>
 <typeparam name="T"></typeparam>
 <param name="FilePath"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ProteinDescription.RepliconName">
 <summary>
 #Replicon Name
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ProteinDescription.RepliconAccession">
 <summary>
 Replicon Accession
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ProteinDescription.Locus_tag">
 <summary>
 Locus tag.(基因号)
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ProteinDescription.Product">
 <summary>
 Protein product
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ProteinDescription.COG">
 <summary>
 COG(s)
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ProteinDescription.ProteinName">
 <summary>
 Protein name
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.SequenceDump.Nucleotide">
 <summary>
 NCBI genbank title format fasta parser
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.SequenceDump.Nucleotide.NtAccessionMatches(System.Collections.Generic.IEnumerable{SMRUCC.genomics.SequenceModel.FASTA.FastaSeq},System.Collections.Generic.IEnumerable{System.String},Microsoft.VisualBasic.Scripting.TextGrepMethod)">
 <summary>
 
 </summary>
 <param name="nt">The nt fasta sequence database.</param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.SequenceDump.NTheader">
 <summary>
 The fasta header of the nt database.
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.SequenceDump.Protein">
 <summary>
 NCBI genbank title format fasta parser
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.Taxonomy.Accession2Taxid">
 <summary>
 将序列的AccessionID编号转换为Taxid编号
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.Accession2Taxid.LoadAll(System.String)">
 <summary>
 一次性的加载完整个数据库之中的数据到内存之中（不推荐）
 </summary>
 <param name="DIR$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.Accession2Taxid.ReadFile(System.String)">
 <summary>
 在返回的数据之中，属性<see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.NamedValue`1.Description"/>是原始的行数据，
 Name属性不包含有Accession的版本号
 </summary>
 <param name="file$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.Accession2Taxid.__loadData(System.String,System.Nullable{System.Boolean})">
 <summary>
 这个函数返回``{name: accession(不带版本号), value:taxid, description: raw_input_line}``
 </summary>
 <param name="DIR$"></param>
 <param name="gb_priority"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.Accession2Taxid.Matchs(System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
 <summary>
 做数据库的subset操作。这个函数所返回来的数据之中是包含有表头的
 </summary>
 <param name="acc_list"></param>
 <param name="DIR$"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxidMaps.Mapping">
 <summary>
 将所给定的编号映射为taxid的一个操作
 </summary>
 <param name="id">序列编号，例如gi编号或者accession编号</param>
 <returns>taxid编号</returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxidMaps.Reference2Taxid(SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxidMaps.Mapping,System.Boolean)">
 <summary>
 对默认的nt库的fasta标题进行解析操作
 </summary>
 <param name="mapping">将序列的id编号映射为taxid的操作函数</param>
 <param name="is_gi2taxid">是否是将gi编号映射为taxid编号？反之false的话是使用accession编号映射为taxid</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxidMaps.GetParser(System.Boolean)">
 <summary>
 根据参数返回gi编号或者accession编号的解析函数表达式
 </summary>
 <param name="is_gi2taxid"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxidMaps.GetAccessionId(System.String)">
 <summary>
 从标准的nt fasta标题之中解析出``accessionId``.
 </summary>
 <param name="header$"></param>
 <returns></returns>
 
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxiValue.x">
 <summary>
 Other tagged value
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxiValue.BuildDictionary(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxiValue})">
 <summary>
 ``{gi, title}``
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonValue.Rank">
 <summary>
 Class level
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonValue.sp">
 <summary>
 ``gi -> gbff.head``
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.Taxonomy.Taxonomy">
 <summary>
 Build Taxonomy tree from NCBI genbank data.
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.Taxonomy.AcquireAuto(System.String)">
 <summary>
 {gi -> taxid}.(根绝文件的拓展名来识别)
 </summary>
 <param name="dmp"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.Taxonomy.Hash_gi2Taxi(System.String)">
 <summary>
 Probably you should do the match in the bash first by using script"
 
 ```bash
 grep ">" nt-18S.fasta | cut -f2 -d'|' | sort | uniq >gi.txt
 tabtk_subset /biostack/database/taxonomy/gi_taxid_nucl.dmp gi.txt 1 0 >gi_match.txt 
 ```
 
 Then using the generated ``gi_match.txt`` as the inputs for parameter <paramref name="dmp"/>, 
 this operation will save your time, no needs to load the entire database.
 </summary>
 <param name="dmp"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.Taxonomy.Archive(System.String,System.String)">
 <summary>
 将文本数据库转换为二进制数据库已减少文件体积和加快文件的加载速度
 </summary>
 <param name="dmp"></param>
 <param name="bin"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonomyWeb">
 <summary>
 The Taxonomy Database is a curated classification and nomenclature for all of the organisms in the 
 public sequence databases. This currently represents about 10% of the described species of life 
 on the planet.
 </summary>
 <remarks>
 **Disclaimer**: The NCBI taxonomy database is not an authoritative source for nomenclature or classification - 
 please consult the relevant scientific literature for the most reliable information.
 </remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonomyWeb.TaxonomyWebURL">
 <summary>
 http://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.DmpFileReader.loadTree(System.String,System.String,System.Collections.Generic.Dictionary{System.String,SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonomyNode}@)">
 <summary>
 
 </summary>
 <param name="names"></param>
 <param name="nodes"></param>
 <param name="taxonomy">pull the parsed tree data from this parameter</param>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.Taxonomy.names">
 <summary>
 Taxonomy names file (``names.dmp``):
 + tax_id		-- the id of node associated with this name
 + name_txt		-- name itself
 + unique name	-- the unique Variant Of this name If name Not unique
 + name Class    -- (Of synonym, common name, ...)
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.names.tax_id">
 <summary>
 -- the id Of node associated With this name
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.names.name_txt">
 <summary>
 -- name itself
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.names.unique_name">
 <summary>
 -- the unique Variant Of this name If name Not unique
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.names.name_class">
 <summary>
 -- (Of synonym, common name, ...)
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.names.FileParser(System.String)">
 <summary>
 Parsering data from ``names.dmp``
 </summary>
 <param name="dump$">``names.dmp``</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.names.BuildTaxiIDFinder(System.String)">
 <summary>
 Helper function for <see cref="T:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree"/>, which is required of taxid for build tree.
 </summary>
 <param name="dump$"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree">
 <summary>
 Builds the following dictionnary from NCBI taxonomy ``nodes.dmp`` and 
 ``names.dmp`` files 
 
 ```json
 { Taxid   : namedtuple('Node', ['name', 'rank', 'parent', 'children'] }
 ```
 
 + https://www.biostars.org/p/13452/
 + https://pythonhosted.org/ete2/tutorial/tutorial_ncbitaxonomy.html

 </summary>
 <remarks>
 ### NCBI_taxonomy_tree

 > https://github.com/frallain/NCBI_taxonomy_tree
 
 The NCBI Taxonomy database Is a curated Set Of names And classifications For all Of the organisms that are 
 represented In GenBank (http://www.ncbi.nlm.nih.gov/Taxonomy/taxonomyhome.html/). It can be accessed 
 via http://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi Or it can be downloaded from 
 ftp://ftp.ncbi.nih.gov/pub/taxonomy/ in the form of 2 files : ``nodes.dmp`` for the structure of the tree 
 And ``names.dmp`` for the names of the different nodes.

 Here I make available my In-memory mapping Of the NCBI taxonomy : a Python 2.7 Class that maps the ``names.dmp`` 
 And ``nodes.dmp`` files In a Python dictionnary which can be used To retrieve lineages, descendants, etc ...
 </remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.stdranks">
 <summary>
 这个列表是从小到大进行排序的
 
 + species
 + genus
 + family
 + order
 + class
 + phylum
 + superkingdom
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.Taxonomy">
 <summary>
 ``{taxid -> taxonomy_node}``
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.GetNode(System.Int32)">
 <summary>
 当<paramref name="taxid"/>不存在的时候，这个只读属性会返回空值
 </summary>
 <param name="taxid%"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.#ctor(System.String)">
 <summary>
 Builds the following dictionnary from NCBI taxonomy ``nodes.dmp`` and 
 ``names.dmp`` files 
 
 ```json
 { Taxid    namedtuple('Node', ['name', 'rank', 'parent', 'children'] }
 ```
 
 + https://www.biostars.org/p/13452/
 + https://pythonhosted.org/ete2/tutorial/tutorial_ncbitaxonomy.html
 
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.#ctor(System.String,System.String)">
 <summary>
 Builds the following dictionnary from NCBI taxonomy ``nodes.dmp`` and 
 ``names.dmp`` files 
 
 ```json
 { Taxid    namedtuple('Node', ['name', 'rank', 'parent', 'children'] }
 ```
 
 + https://www.biostars.org/p/13452/
 + https://pythonhosted.org/ete2/tutorial/tutorial_ncbitaxonomy.html
 
 </summary>
 <param name="nodes"></param>
 <param name="names"></param>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.GetParent(System.Int32[])">
 <summary>
 Returns parent id
 </summary>
 <param name="taxids"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.GetRank(System.Int32[])">
 <summary>
 获取所给定的taxid的分类等级列表
 </summary>
 <param name="taxids"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.GetAscendantsWithRanksAndNames(System.Int32,System.Boolean)">
 <summary>
 使用这个函数得到物种的具体分类，返回来的数据是从小到大排列的
 </summary>
 <param name="taxid"></param>
 <param name="only_std_ranks"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.GetAscendantsWithRanksAndNames(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)">
 <summary>
 使用这个函数得到物种的具体分类，返回来的数据是从小到大排列的
 </summary>
 <param name="taxids"></param>
 <param name="only_std_ranks"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.GetDescendants(System.Int32[])">
 <summary>
 Returns all the descendant taxids from a branch/clade 
 of a list of taxids : all nodes (leaves or not) of the 
 tree are returned including the original one.
 </summary>
 <param name="taxids"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.GetDescendantsWithRanksAndNames(System.Int32[])">
 <summary>
 Returns the ordered list of the descendants with their respective ranks and names for a LIST of taxids.
 </summary>
 <param name="taxids"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.GetLeaves(System.Int32)">
 <summary>
 Returns all the descendant taxids that are leaves of the tree from 
 a branch/clade determined by ONE taxid.
 </summary>
 <param name="taxid"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.GetLeavesWithRanksAndNames(System.Int32)">
 <summary>
 Returns all the descendant taxids that are leaves of the tree from 
 a branch/clade determined by ONE taxid.
 </summary>
 <param name="taxid"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.GetTaxidsAtRank(System.String)">
 <summary>
 Returns all the taxids that are at a specified rank: 
 
 + standard ranks: 
   ``species, genus, family, order, class, phylum, superkingdom.``
 + non-standard ranks: 
   ``forma, varietas, subspecies, species group, subtribe, tribe, subclass, kingdom.``
   
 </summary>
 <param name="rank"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.preorderTraversal(System.Int32,System.Boolean)">
 <summary>
 Prefix (Preorder) visit of the tree: https://en.wikipedia.org/wiki/Tree_traversal
 </summary>
 <param name="taxid"></param>
 <param name="only_leaves"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.flatten(System.Collections.IEnumerable)">
 <summary>
 ```
 >>> flatten([1 , [2, 2], [2, [3, 3, 3]]]) 
 [1, 2, 2, 2, 3, 3, 3]
 ```
 </summary>
 <param name="seq"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.Taxonomy.Ranks">
 <summary>
 将物种分类节点按照分类等级进行分组
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.Ranks.#ctor(SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree)">
 <summary>
 只会将常用的7个分类等级的数据取出
 </summary>
 <param name="tree"></param>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonomyExtensions.BuildBIOM(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonomyNode})">
 <summary>
 Create taxonomy lineage string with <see cref="P:SMRUCC.genomics.Metagenomics.BIOMTaxonomy.BIOMPrefix"/>
 </summary>
 <param name="nodes"></param>
 <returns></returns>
 
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonomyNode">
 <summary>
 The tree node calculation model for <see cref="T:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree"/>, a labeled tree node for a specific ncbi taxid.
 </summary>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonomyNode.taxid">
 <summary>
 the NCBI taxonomy id
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonomyNode.name">
 <summary>
 the scientific name of current taxonomy node
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonomyNode.rank">
 <summary>
 One of the value in array collection <see cref="F:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.stdranks"/>.
 (当前节点的分类等级)
 </summary>
 <returns></returns>
 <remarks>
 
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonomyNode.parent">
 <summary>
 当前的节点的父节点的编号: ``<see cref="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonomyNode.taxid"/>``
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonomyNode.nchilds">
 <summary>
 get size of list <see cref="P:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonomyNode.children"/>
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonomyNode.Taxonomy(SMRUCC.genomics.Assembly.NCBI.Taxonomy.TaxonomyNode[],System.String)">
 <summary>
 直接处理<see cref="M:SMRUCC.genomics.Assembly.NCBI.Taxonomy.NcbiTaxonomyTree.GetAscendantsWithRanksAndNames(System.Int32,System.Boolean)"/>的输出数据，不需要进行额外的排序操作
 </summary>
 <param name="tree"></param>
 <param name="delimiter"></param>
 <returns></returns>
 
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.Entrez.ComponentModels.I_QueryEntry">
 <summary>
 用于表示获取查询结果的一个入口点
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.Entrez.Genbank">
 <summary>
 The NCBI genbank data api handler
 </summary>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.Entrez.Entry">
 <summary>
 查询某一个蛋白质或者基因对象所返回的结果数据下载入口点
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.Entrez.QueryHandler">
 <summary>
 http://www.ncbi.nlm.nih.gov/nuccore/?term=
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.Assembly.NCBI.Entrez.QueryHandler._currentURL">
 <summary>
 当前页面文件的URL
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Entrez.QueryHandler.__startQuery(System.String@)">
 <summary>
 
 </summary>
 <param name="url">每执行一次查询操作，假若当前页还有下一页的话，参数值会被更新</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.Assembly.NCBI.Entrez.TaxonomyWebAPI">
 <summary>
 ##### Automatically Getting The Ncbi Taxonomy Id From The Genbank Identifier
 
 The question is whether, given a (long) list of Genbank identifiers, is possible to 
 get the ncbi taxonomy identifier for each one. I know it may seem very easy, but I 
 have not found any web service which makes this, and I wouldn't like to do this 
 manually.
 </summary>
</member>
<member name="M:SMRUCC.genomics.Assembly.NCBI.Entrez.TaxonomyWebAPI.efetch(System.String,System.String)">
 <summary>
 NCBI efetch can use an accession number instead of a gi. and the XML/Fasta returned by efetch contains the taxonomy-ID:
 </summary>
 <param name="gi"></param>
 <returns></returns>
 
</member>
<member name="T:SMRUCC.genomics.ReactionClassifier">
 <summary>
 the reaction class data helper, make index of the <see cref="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.ReactionClass"/> data
 </summary>
</member>
<member name="F:SMRUCC.genomics.ReactionClassifier.compoundTransformIndex">
 <summary>
 [cid1_cid2 => ReactionClass[]]
 </summary>
</member>
<member name="F:SMRUCC.genomics.ReactionClassifier.compoundIndex">
 <summary>
 [cid => ReactionClass[]]
 </summary>
</member>
<member name="M:SMRUCC.genomics.ReactionClassifier.haveClassification(System.String)">
 <summary>
 check target kegg reaction id is exists in current reaction_class repository or not?
 </summary>
 <param name="reactionId"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ReactionClassifier.FromRepository(System.String)">
 <summary>
 A shortcut method based on the <see cref="M:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.ReactionClass.ScanRepository(System.String,System.Boolean)"/>
 </summary>
 <param name="directory"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ReactionRepository">
 <summary>
 KEGG的参考代谢反应模型库，封装了对<see cref="T:SMRUCC.genomics.Assembly.KEGG.DBGET.bGetObject.Reaction"/>的对象查询操作
 </summary>
</member>
<member name="F:SMRUCC.genomics.ReactionRepository.table">
 <summary>
 ``{rxnID => reaction}``
 </summary>
</member>
<member name="P:SMRUCC.genomics.ReactionRepository.metabolicNetwork">
 <summary>
 这个Repository之中的所有的代谢过程的数据都在这里了
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ReactionRepository.GetCompoundIndex">
 <summary>
 ``{compound_id => arrayOf(reactionId)}``
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ReactionRepository.GetKoIndex">
 <summary>
 ``{koId => arrayOf(reactionId)}``
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ReactionRepository.Subset(SMRUCC.genomics.ComponentModel.Annotation.ECNumber[])">
 <summary>
 Subset database by given EC number id list.
 </summary>
 <param name="ECNumbers"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ReactionRepository.Subset(System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 Subset database by given KO id list.
 </summary>
 <param name="KOlist"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ReactionRepository.Enzymetic">
 <summary>
 KEGG代谢反应模型数据之中还包含有非酶促过程
 使用这个函数将会筛选出所有的酶促过程
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ReactionRepository.Exists(System.String)">
 <summary>
 Test if target reaction model is exists in current data repository or not. 
 </summary>
 <param name="rxnIdkey"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ReactionRepository.GetByKey(System.String)">
 <summary>
 Get a reaction model data by a given reaction id as index key.
 </summary>
 <param name="rxnIdkey"></param>
 <returns>
 If the key is not exists in current repository, then nothing will be returned.
 </returns>
</member>
<member name="M:SMRUCC.genomics.ReactionRepository.GetByKOMatch(System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 Subset database by given KO id list.
 </summary>
 <param name="KO"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.BioAssemblyExtensions">
 <summary>
 Extension methods for some common operations
 </summary>
</member>
<member name="M:SMRUCC.genomics.BioAssemblyExtensions.IsUnknown(System.Char)">
 <summary>
 Current nt base is a unknown base?
 </summary>
 <param name="base"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.BioAssemblyExtensions.IsPure(System.Char)">
 <summary>
 Is this nt base is pure
 </summary>
 <param name="base"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.BioAssemblyExtensions.GetCOGCategory(System.String)">
 <summary>
 将COG字符串进行修剪，返回的是大写的COG符号
 COG4771P -> P;   
 P -> P;   
 &lt;SPACE> -> -;   
 - -> -;
 </summary>
 <param name="str"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.BioAssemblyExtensions.DirectCast``1(System.Collections.Generic.IEnumerable{``0})">
 <summary>
 Generate <see cref="T:SMRUCC.genomics.SequenceModel.FASTA.FastaFile"/> from a specific fasta source collection.
 </summary>
 <typeparam name="TFasta"><see cref="T:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq"/></typeparam>
 <param name="data">Target fasta source collection which its elements base type is <see cref="T:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq"/></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.BioAssemblyExtensions.GetBriefCode(SMRUCC.genomics.ComponentModel.Loci.Strands)">
 <summary>
 Convert the nucleotide sequence strand direction enumeration as character brief code. [<see cref="T:SMRUCC.genomics.ComponentModel.Loci.Strands"/> => +, -, ?]
 </summary>
 <param name="strand"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.BioAssemblyExtensions.GetBriefStrandCode(System.String)">
 <summary>
 Convert the nucleotide seuqnece strand description word as character brief code.
 (获取核酸链链方向的描述简要代码)
 </summary>
 <param name="strand"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.BioAssemblyExtensions.GetStrands(System.Char)">
 <summary>
 Convert the string value type nucleotide strand information description data into a strand enumerate data.
 </summary>
 <param name="c">从文本文件之中所读取出来关于链方向的字符串描述数据</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.BioAssemblyExtensions.IsReversed(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel)">
 <summary>
 Is this ORF is in the reversed strand direction?(判断一段ORF核酸序列是否为反向的)
 </summary>
 <param name="nt">
 This function parameter is only allowed nucleotide sequence.
 (请注意，这个只允许核酸序列)
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.BioAssemblyExtensions.Group``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
 <summary>
 对位点进行分组操作
 </summary>
 <param name="contigs"></param>
 <param name="offsets"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Annotation.ECNumber">
 <summary>
 Enzyme Commission Number
 </summary>
 <remarks>EC-6.1.1.10</remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.ECNumber.type">
 <summary>
 EC编号里面的第一个数字代表酶的分类号
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.ECNumber.subType">
 <summary>
 该大类之下的亚分类
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.ECNumber.subCategory">
 <summary>
 该亚类之下的小分类
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.ECNumber.serialNumber">
 <summary>
 该小分类之下的序号
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Annotation.ECNumber.Contains(SMRUCC.genomics.ComponentModel.Annotation.ECNumber)">
 <summary>
 Contains or equals
 </summary>
 <param name="ec"></param>
 <returns></returns>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Annotation.ECNumber.PatternECNumber">
 <summary>
 ```
 1.2.3.4
 1.2.3.-
 1.2.-.-
 ```
 </summary>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Annotation.ECNumber.ValueParser(System.String)">
 <summary>
 解析一个EC编号字符串，如果出现格式错误，则返回空值
 </summary>
 <param name="expr"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Annotation.ECNumber.ToString">
 <summary>
 IDE debug
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Annotation.ECNumber.ValidateValue(System.String)">
 <summary>
 验证所输入的字符串的格式是否正确
 </summary>
 <param name="s$"></param>
 <returns></returns>
 
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Annotation.EnzymeClasses">
 <summary>
 The enzyme types enumeration.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Annotation.EnzymeClasses.OxidoReductase">
 <summary>
 Oxido Reductase.(氧化还原酶)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Annotation.EnzymeClasses.Transferase">
 <summary>
 Transferase.(转移酶)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Annotation.EnzymeClasses.Hydrolase">
 <summary>
 Hydrolase.(水解酶)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Annotation.EnzymeClasses.Lyase">
 <summary>
 Lyase.(裂合酶)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Annotation.EnzymeClasses.Isomerase">
 <summary>
 Isomerase.(异构酶)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Annotation.EnzymeClasses.Synthetase">
 <summary>
 Synthetase.(合成酶)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Annotation.EnzymeClasses.Translocases">
 <summary>
 http://www.enzyme-database.org
 </summary>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Annotation.IGeneBrief">
 <summary>
 The basically information of a gene object.(这个接口对象表示了一个在计算机程序之中的最基本的基因信息的载体对象)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.IGeneBrief.Product">
 <summary>
 The protein function annotation data of the gene coding product.(所编码的蛋白质产物的功能注释)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.IGeneBrief.Length">
 <summary>
 The nucleotide sequence length.(基因的长度)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Annotation.IFeatureDigest">
 <summary>
 The feature annotation data of the genes.(基因对象的特征注释结果)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.IFeatureDigest.Feature">
 <summary>
 The feature tag of this gene object for classification.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Annotation.ICOGCatalog">
 <summary>
 这个基因的注释结果之中除了COG编号之外，还有这个编号所属的COG分类
 </summary>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.ICOGCatalog.COG">
 <summary>
 The gene object COG classification.(COG功能分类)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Annotation.GeneTable">
 <summary>
 The gene dump information from the NCBI genbank.
 (从GBK文件之中所导出来的一个基因对象的简要信息，尝试使用这个对象以csv表格的格式存储一个基因的所有的注释信息)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.GeneTable.locus_id">
 <summary>
 假若在GBK文件之中没有Locus_tag属性，则导出函数<see cref="M:SMRUCC.genomics.Assembly.NCBI.GenBank.gbExportService.DumpEXPORT(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.CDS)"></see>会尝试使用<see cref="P:SMRUCC.genomics.ComponentModel.Annotation.GeneTable.ProteinId"></see>来替代
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.GeneTable.function">
 <summary>
 The gene product function description
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.GeneTable.GO">
 <summary>
 The Go term id list of current protein object
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.GeneTable.KO">
 <summary>
 The KEGG Ortholog feature
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.GeneTable.CDS">
 <summary>
 基因序列
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.GeneTable.SpeciesAccessionID">
 <summary>
 该蛋白质所位于的基因组的在NCBI之中的编号信息
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.GeneTable.COG">
 <summary>
 The COG feature
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Annotation.PathwayBrief">
 <summary>
 An abstract biological pathway model
 </summary>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.PathwayBrief.EntryId">
 <summary>
 the reference id of the current pathway object
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.PathwayBrief.name">
 <summary>
 The map title display name
 </summary>
 <returns>The name value of this pathway object</returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.PathwayBrief.description">
 <summary>
 the function description text of the current pathway object
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Annotation.PathwayBrief.GetPathwayGenes">
 <summary>
 Gets the pathway related genes.
 </summary>
 <returns>
 name - gene id
 value - ontology id, example as KO
 description - gene name or function description
 </returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Annotation.PathwayBrief.GetCompoundSet">
 <summary>
 Gets the pathway related metabolite compounds.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.PathwayBrief.briteID">
 <summary>
 和具体的物种的编号无关的在KEGG数据库之中的参考对象的编号
 </summary>
 <returns></returns>
 
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Annotation.CatalogList">
 <summary>
 a [term => id()] tuple data
 </summary>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.CatalogList.Catalog">
 <summary>
 COG/KO/GO, etc
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.CatalogList.IDs">
 <summary>
 A list of gene ID that belongs to this catalog classify.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.CatalogList.Count">
 <summary>
 Number of the list IDs
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Annotation.CatalogProfile">
 <summary>
 a wrapper of <see cref="T:System.Collections.Generic.Dictionary`2"/>
 </summary>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.CatalogProfile.isEmpty">
 <summary>
 does the <see cref="P:SMRUCC.genomics.ComponentModel.Annotation.CatalogProfile.profile"/> is empty?
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Annotation.CatalogProfile.OrderByValues">
 <summary>
 just sort desc
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Annotation.CatalogProfile.Take(System.Int32)">
 <summary>
 sort desc and then take top N
 </summary>
 <param name="topN"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Annotation.CatalogProfiles">
 <summary>
 a numeric profile data
 </summary>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Annotation.CatalogProfiles.delete(System.String)">
 <summary>
 removes item from <see cref="P:SMRUCC.genomics.ComponentModel.Annotation.CatalogProfiles.catalogs"/> via a given key 
 </summary>
 <param name="name"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Annotation.CatalogProfiling">
 <summary>
 a level 1 class dataset
 </summary>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Annotation.CatalogProfiling.Catalog">
 <summary>
 COG/KO/GO, etc
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Annotation.ClassProfiles">
 <summary>
 ID class counter 
 </summary>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.DBLinkBuilder.IDBLink.GetFormatValue">
 <summary>
 将对象模型转换为含有格式的字符串的值用以写入文件之中
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.DBLinkBuilder.DBLink">
 <summary>
 Database xref data
 </summary>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.DBLinkBuilder.DBLink.DBName">
 <summary>
 Database name
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.DBLinkBuilder.DBLink.entry">
 <summary>
 Entity uid in the target database
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.DBLinkBuilder.DBLink.link">
 <summary>
 the url link to the object in the <see cref="P:SMRUCC.genomics.ComponentModel.DBLinkBuilder.DBLink.DBName"/> database
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.DBLinkBuilder.DBLinksManager`1.Remove(System.String,System.String)">
 <summary>
 
 </summary>
 <param name="Db_Name"></param>
 <param name="entryID">
 当编号值为空的时候，会将所有的<paramref name="Db_Name"/>类型的数据都删除掉
 </param>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.DBLinkBuilder.SecondaryIDSolver">
 <summary>
 This module ensure that all of the id is main id, not secondary id.
 
 (例如chebi和hmdb数据库，都存在有次级编号和主编号，
 虽然这些编号不一样，但是他们都是同一个对象，则这个模块就是专门解决这种映射问题的)
 </summary>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.DBLinkBuilder.SecondaryIDSolver.mainID">
 <summary>
 在数据库之中的主编号列表
 </summary>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.DBLinkBuilder.SecondaryIDSolver.secondaryIDs">
 <summary>
 [secondary => main]的映射转换表
 </summary>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.DBLinkBuilder.SecondaryIDSolver.idMapping">
 <summary>
 key is the <see cref="F:SMRUCC.genomics.ComponentModel.DBLinkBuilder.SecondaryIDSolver.mainID"/>
 </summary>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.DBLinkBuilder.SecondaryIDSolver.ALL">
 <summary>
 获取得到当前的数据库之中的所有的编号列表, 包括主编号以及次级编号
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.DBLinkBuilder.SecondaryIDSolver.SolveIDMapping(System.String)">
 <summary>
 将主编号或者次级编号转换为主编号
 </summary>
 <param name="id">主编号或者次级编号</param>
 <returns>这个只读属性总是返回主编号的</returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.DBLinkBuilder.SecondaryIDSolver.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 Add new 2nd to main mapping
 </summary>
 <param name="main$"></param>
 <param name="secondary"></param>
 <remarks>
 为了方便直接进行查询, 在这里编号都被自动转换为小写形式了
 </remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.DBLinkBuilder.SecondaryIDSolver.Create``1(System.Collections.Generic.IEnumerable{``0},SMRUCC.genomics.ComponentModel.DBLinkBuilder.SecondaryIDSolver.GetKey{``0},SMRUCC.genomics.ComponentModel.DBLinkBuilder.SecondaryIDSolver.GetAllKeys{``0},System.Boolean)">
 <summary>
 
 </summary>
 <typeparam name="T"></typeparam>
 <param name="source"></param>
 <param name="mainID"></param>
 <param name="secondaryID"></param>
 <param name="skip2ndMaps">
 solve for kegg2go, which the mapping id list have duplicated items between the main id mapping result.
 </param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.DBLinkBuilder.Synonym">
 <summary>
 data alias model, a mapping of the main accession id to 
 a collection of the secondary accession id.
 </summary>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.DBLinkBuilder.Synonym.accessionID">
 <summary>
 the main accession id
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.DBLinkBuilder.Synonym.alias">
 <summary>
 the secondary accession id or the alias id in other database.
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.DBLinkBuilder.Synonym.GenericEnumerator">
 <summary>
 get all accession id union
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.EquaionModel.ICompoundSpecies">
 <summary>
 A metabolite compound abstract model which contains 
 the unique reference id of the metabolite and the
 chemical factor to current equation
 </summary>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.EquaionModel.ICompoundSpecies.Stoichiometry">
 <summary>
 stoichiometry, in chemistry, the determination of the 
 proportions in which elements or compounds react with 
 one another. The rules followed in the determination 
 of stoichiometric relationships are based on the laws 
 of conservation of mass and energy and the law of 
 combining weights or volumes.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.EquaionModel.IEquation`1.Reactants">
 <summary>
 On the equation left side.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.EquaionModel.IEquation`1.Products">
 <summary>
 On the equation right side.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.EquaionModel.DefaultTypes.CompoundSpecieReference.Stoichiometry">
 <summary>
 化学计量数
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.EquaionModel.DefaultTypes.Equation">
 <summary>
 默认类型的反应表达式的数据结构，可以使用<see cref="M:SMRUCC.genomics.ComponentModel.EquaionModel.EquationBuilder.CreateObject(System.String)"/>来进行构建
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.EquaionModel.DefaultTypes.Equation.GetBuffer(SMRUCC.genomics.ComponentModel.EquaionModel.DefaultTypes.Equation)">
 <summary>
 save the given equation model as byte stream
 </summary>
 <param name="eq"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.EquaionModel.Equation`1.Reactants">
 <summary>
 list of metabolism reaction substrates
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.EquaionModel.Equation`1.Products">
 <summary>
 list of metabolism reaction products
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.EquaionModel.Equation`1.GetMetabolites">
 <summary>
 得到这个代谢反应过程之中的所有的代谢物，即左边加右边
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.EquaionModel.Equation`1.GetCoEfficient(System.String)">
 <summary>
 获取得到某个代谢物在本反应过程之中的化学计量数；
 [
 左边，返回负数；
 右边，返回正数；
 不存在则返回0。
 ]
 </summary>
 <param name="ID"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.EquaionModel.Equation`1.Produce(`0)">
 <summary>
 判断当前的代谢反应过程是否产生所给定的目标代谢物作为反应产物？
 </summary>
 <param name="Metabolite">Id</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.EquaionModel.Equation`1.Consume(`0)">
 <summary>
 判断当前的代谢过程是否消耗所给定的目标代谢物作为反应底物？
 </summary>
 <param name="metabolite"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.EquaionModel.Equation`1.Produce(System.String)">
 <summary>
 
 </summary>
 <param name="Metabolite">Metabolite.Species</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.EquaionModel.Equation`1.Consume(System.String)">
 <summary>
 
 </summary>
 <param name="Metabolite">Metabolite.Species</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.EquaionModel.Equation`1.ToString">
 <summary>
 Equation expression
 </summary>
 <returns></returns>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.EquaionModel.EquationBuilder.EQUATION_DIRECTIONS_REVERSIBLE">
 <summary>
 可逆的代谢反应过程的箭头
 </summary>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.EquaionModel.EquationBuilder.EQUATION_DIRECTIONS_INREVERSIBLE">
 <summary>
 不可逆的代谢反应过程的箭头
 </summary>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.EquaionModel.EquationBuilder.CreateObject``2(System.String)">
 <summary>
 从代谢过程的表达式字符串值创建代谢过程的对象模型
 </summary>
 <typeparam name="TCompound"></typeparam>
 <typeparam name="TEquation"></typeparam>
 <param name="eqStr"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.EquaionModel.Equivalence.Equals``1(SMRUCC.genomics.ComponentModel.EquaionModel.Equation{``0},SMRUCC.genomics.ComponentModel.EquaionModel.Equation{``0},System.Func{``0,``0,System.Boolean,System.Boolean},System.Boolean)">
 <summary>
 
 </summary>
 <typeparam name="T"></typeparam>
 <param name="a"></param>
 <param name="b"></param>
 <param name="cpEquals">反应物的等价性的判断方法</param>
 <param name="strict"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.LociAPI">
 <summary>
 The extension method for the location object operations.
 </summary>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.LociAPI.Merge``1(``0,``0)">
 <summary>
 将<paramref name="b"></paramref>合并至<paramref name="a"></paramref>之中并返回位点<paramref name="a"></paramref>，合并失败则只会返回a，其不会被做任何修改
 </summary>
 <typeparam name="TLoci"></typeparam>
 <param name="a"></param>
 <param name="b"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.LociAPI.Group``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
 <summary>
 非并行版本，为上一级是并行的LINQ查询所准备的
 </summary>
 <typeparam name="Loci"></typeparam>
 <param name="lc"></param>
 <param name="lenOffset"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.LociAPI.FragmentAssembly(System.Collections.Generic.IEnumerable{SMRUCC.genomics.ComponentModel.Loci.Location},System.Int32)">
 <summary>
 这个方法在Pfam蛋白质结构域分析的时候非常有用，
 请注意，这个方法仅仅会延伸片段的第一个对象，和第一个位点对象合并的位点都会出现在<see cref="P:SMRUCC.genomics.ComponentModel.Loci.Location.Tag"/>属性之中
 </summary>
 <param name="source">必须是已经按照<see cref="P:SMRUCC.genomics.ComponentModel.Loci.Location.left"></see>进行从小到大排序操作的数据</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.Abstract.ILocationSegment.UniqueId">
 <summary>
 Tag data on this location sequence segment.(当前的这个序列片段的标签信息)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.Abstract.ILocationSegment.Location">
 <summary>
 The location value of this sequence segment.(这个序列片段的位置信息)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.Abstract.IContig">
 <summary>
 Abstract model with location data.
 </summary>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.Abstract.ILocationComponent">
 <summary>
 This type of the object has the loci location value attribute.
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.Abstract.ILocationComponent.right">
 <summary>
 Right position of the loci site on sequence.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.Abstract.ILoci">
 <summary>
 只有左端起始位点的模型对象
 </summary>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.Abstract.ILoci.left">
 <summary>
 Left position of the loci site on sequence.(左端起始位点)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.Abstract.ITagSite">
 <summary>
 This loci site have a tag
 </summary>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.Abstract.ITagSite.tag">
 <summary>
 This property is usually be the locus_tag attribute
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.Abstract.ITagSite.Distance">
 <summary>
 The distance of current loci site to the site that tagged by <see cref="P:SMRUCC.genomics.ComponentModel.Loci.Abstract.ITagSite.tag"/> value.
 (当前的这个位点对象距离<see cref="P:SMRUCC.genomics.ComponentModel.Loci.Abstract.ITagSite.tag"/>所标记的位点的距离)
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.Abstract.TagSiteExtensions.Groups``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
 <summary>
 对位点进行分组操作
 </summary>
 <typeparam name="T"></typeparam>
 <param name="source"></param>
 <param name="offset"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.Location">
 <summary>
 A location property on a sequence data. Please notice that if the loci value its left value 
 greater than right value then this object will swap the value automaticaly.
 (一个序列片段区域的位置，请注意，当Left的大小大于Right的时候，模块会自动纠正为Left小于Right的状态，
 这个对象可以同时用来表示核酸序列或者蛋白质序列上面的位置)
 </summary>
 <remarks>
 字符串中的字符在计算机程序语言中是从零开始的
 但是生物分子序列中的残基的起始是从1开始的
 </remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.Location.left">
 <summary>
 <see cref="T:SMRUCC.genomics.ComponentModel.Loci.Location"/>: Gets or set the left start value of the segment on the target sequence.(目标片段的左端起始区域，与链的方向无关)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.Location.right">
 <summary>
 <see cref="T:SMRUCC.genomics.ComponentModel.Loci.Location"/>: Gets or set the right ends value of the segment on the target sequence.(目标片段的右端结束区域，与链的方向无关)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.Location.IsNormalized">
 <summary>
 当前的这个位置数据是否为左边小于右边的正常状态
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.Location.Normalization">
 <summary>
 使用这个方法更正数据，使位置数据始终是右大于左，(Return Me: 修改自身之后返回自身)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.Location.GetOverlapSize(SMRUCC.genomics.ComponentModel.Loci.Location)">
 <summary>
 获取当前的位点片段和一个指定的位点片段之间的重叠区域的长度，
 没有重叠的时候会返回-1值
 </summary>
 <param name="loci"></param>
 <returns></returns>
 <remarks>
 对于核酸位置数据，这个函数不考虑链的方向问题,只是单纯的计算线段的重叠长度的问题
 
 > https://stackoverflow.com/questions/16691524/calculating-the-overlap-distance-of-two-1d-line-segments
 </remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.Location.Equals(SMRUCC.genomics.ComponentModel.Loci.Location,System.Int32)">
 <summary>
 
 </summary>
 <param name="loci"></param>
 <param name="offsets">当这个大于零的时候会进行模糊匹配</param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.Location.op_Equality(SMRUCC.genomics.ComponentModel.Loci.Location,SMRUCC.genomics.ComponentModel.Loci.Location)">
 <summary>
 Position equals
 </summary>
 <param name="a"></param>
 <param name="b"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.Location.InsideOrOverlapWith(SMRUCC.genomics.ComponentModel.Loci.Location)">
 <summary>
 <paramref name="b"></paramref>在当前对象之中或者与当前对象重叠
 </summary>
 <param name="b"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.Location.Inside(SMRUCC.genomics.ComponentModel.Loci.Location,System.Int32)">
 <summary>
 <paramref name="loci"/> inside Me.(目标位点在当前的这个位点之中)
 </summary>
 <param name="loci"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.Location.InsideOrOverlapWith(SMRUCC.genomics.ComponentModel.Loci.Location,System.Int32)">
 <summary>
 <paramref name="b"></paramref>在当前对象之中或者与当前对象重叠
 </summary>
 <param name="b"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.Location.FragmentSize">
 <summary>
 The segment length of this location object.(目标序列片段区域的片段长度)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.Location.ToString">
 <summary>
 ``|<see cref="P:SMRUCC.genomics.ComponentModel.Loci.Location.left"/> ==> <see cref="P:SMRUCC.genomics.ComponentModel.Loci.Location.right"/>|``
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.Location.CreateObject(System.String,System.String)">
 <summary>

 </summary>
 <param name="strData"></param>
 <param name="Delimiter"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.Location.OffSet(System.Int32)">
 <summary>
 <see cref="P:SMRUCC.genomics.ComponentModel.Loci.Location.left"/>, <see cref="P:SMRUCC.genomics.ComponentModel.Loci.Location.right"/> offset a length value and 
 then construct a new <see cref="T:SMRUCC.genomics.ComponentModel.Loci.Location"/> value.
 </summary>
 <param name="value"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.Extensions.Assemble(System.Collections.Generic.IEnumerable{SMRUCC.genomics.ComponentModel.Loci.IMotifSite},System.Boolean,System.Int32)">
 <summary>
 这个函数返回来的位点里面的<see cref="P:SMRUCC.genomics.ComponentModel.Loci.MotifSite.Type"/>信息可以使用``+``分割
 </summary>
 <param name="sites"></param>
 <param name="groupByType">是否在合并拼接之前进行按照类型分组？</param>
 <param name="gapOffset%">默认是不允许跳过gap间隙的</param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.Loci">
 <summary>
 带标签的位置信息，只不过这个位点的位置信息是展开的
 </summary>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.MotifSite">
 <summary>
 带标签的位点信息，只不过这个位点的位置信息是构建好的
 </summary>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.IMotifSite">
 <summary>
 Motif site model on both DNA/RNA and protein sequence.
 </summary>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.IMotifSite.family">
 <summary>
 loci types
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.IMotifSite.name">
 <summary>
 loci name
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.IMotifScoredSite">
 <summary>
 This motif site have the scoring calculation value
 </summary>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.IMotifScoredSite.Score">
 <summary>
 The site score of this SNP site
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.LocusExtensions">
 <summary>
 Methods for some nucleotide utility.
 </summary>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.LocusExtensions.MergeJoins``1(System.Collections.Generic.IEnumerable{``0})">
 <summary>
 直接合并相邻的一个位点集合到一个新的更加长的位点
 </summary>
 <typeparam name="TLocation"></typeparam>
 <param name="grouped">
 其实在这里是直接将最小的左端和最大的右端合并构成一个更大范围的location
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.LocusExtensions.GetRelationship(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation,SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation)">
 <summary>
 Gets the location relationship of two loci segments.
 (判断获取两个位点片段之间的位置关系，请注意，这个函数只依靠左右位置来判断关系，
 假若对核酸链的方向有要求在调用本函数之前请确保二者在同一条链之上)
 </summary>
 <param name="lcl">
 在计算之前请先调用<see cref="M:SMRUCC.genomics.ComponentModel.Loci.Location.Normalization"/>方法来修正
 </param>
 <returns></returns>
 <remarks></remarks>

</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.LocusExtensions.GetStrand(System.String)">
 <summary>
 Convert the string value type nucleotide strand information description data 
 into a <see cref="T:SMRUCC.genomics.ComponentModel.Loci.Strands"/> enumerate data.
 </summary>
 <param name="str">从文本文件之中所读取出来关于链方向的字符串描述数据</param>
 <returns></returns>
 <remarks></remarks>

</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.LocusExtensions.TryParse(System.String)">
 <summary>
 Try parse NCBI sequence dump location/<see cref="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.ToString"/> dump location.
 </summary>
 <param name="loci"></param>
 <returns></returns>
 <remarks></remarks>

</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.LocusExtensions.tryParseInternal(System.String)">
 <summary>
 ```
 388739 ==> 389772 #Forward
 ```
 </summary>
 <param name="input"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.LocusExtensions.Equals(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation,SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation,System.Int32)">
 <summary>
 这个函数在<see cref="M:SMRUCC.genomics.ComponentModel.Loci.LocusExtensions.Equals(SMRUCC.genomics.ComponentModel.Loci.Location,SMRUCC.genomics.ComponentModel.Loci.Location,System.Int32)"/>函数的基础之上还添加了对链方向的判断
 </summary>
 <param name="site"></param>
 <param name="loci"></param>
 <param name="allowedOffset"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.LocusExtensions.Equals(SMRUCC.genomics.ComponentModel.Loci.Location,SMRUCC.genomics.ComponentModel.Loci.Location,System.Int32)">
 <summary>
 One site is reference to the same location as another loci site it does in a given offset range?
 </summary>
 <param name="site">A loci site</param>
 <param name="loci">Another loci site</param>
 <param name="allowedOffset"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation">
 <summary>
 Loci segment location information on an nucleotide sequence, this object added an <see cref="P:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.Strand"></see> 
 information on <see cref="T:SMRUCC.genomics.ComponentModel.Loci.Location"></see> data.(会自动根据LEFT和RIGHT的值来修正属性值)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.Strand">
 <summary>
 这个位点在哪一条DNA核酸链
 
 ```
 Forward =  1; 
 Reverse = -1; 
 Unknown =  0
 ```
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.tagStr">
 <summary>
 用户对这个位点的自定义标注信息
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.Start">
 <summary>
 <see cref="T:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation"/>: 实际的物理上面的位置，与核酸链的方向相关，
 (假若需要使用原始的位置数据，则请使用<see cref="P:SMRUCC.genomics.ComponentModel.Loci.Location.left"/>或者<see cref="P:SMRUCC.genomics.ComponentModel.Loci.Location.right"/>属性，
 这两个属性值是和具体的链的方向无关的)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.Ends">
 <summary>
 <see cref="T:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation"/>: 实际的物理上面的位置，与核酸链的方向相关，
 (假若需要使用原始的位置数据，则请使用<see cref="P:SMRUCC.genomics.ComponentModel.Loci.Location.left"/>或者<see cref="P:SMRUCC.genomics.ComponentModel.Loci.Location.right"/>属性，
 这两个属性值是和具体的链的方向无关的)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.GetUpStreamLoci(System.UInt32)">
 <summary>
 获取当前的这个核酸片段位点的上游的指定距离的位点的位置
 </summary>
 <param name="distance"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.GetUpStreamLoci(System.Int32)">
 <summary>
 请放心，这个函数所得到的具体的位点是和链的方向相关的
 </summary>
 <param name="Distance"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.#ctor(SMRUCC.genomics.ComponentModel.Loci.Location,SMRUCC.genomics.ComponentModel.Loci.Strands)">
 <summary>
 Create location model from the exists loci data, and then assign a new <see cref="T:SMRUCC.genomics.ComponentModel.Loci.Strands"/> value for it.
 </summary>
 <param name="loci"></param>
 <param name="strand">The new <see cref="T:SMRUCC.genomics.ComponentModel.Loci.Strands"/> value for the target loci.</param>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.#ctor(System.Int32,System.Int32,System.String)">
 <summary>
 使用片段的位置进行初始化本位点对象
 </summary>
 <param name="LociStart"></param>
 <param name="LociEnds"></param>
 <param name="Strand">一般性的链的方向的描述性的字符串</param>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.#ctor(System.Int64,System.Int64,System.String)">
 <summary>
 
 </summary>
 <param name="LociStart"></param>
 <param name="LociEnds"></param>
 <param name="Strand">会自动通过<see cref="M:SMRUCC.genomics.ComponentModel.Loci.LocusExtensions.GetStrand(System.String)"/>函数来进行数据类型的转换的</param>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.#ctor(System.Int32,System.Int32,SMRUCC.genomics.ComponentModel.Loci.Strands)">
 <summary>
 Creates loci object from raw location data.
 </summary>
 <param name="start"><see cref="T:SMRUCC.genomics.ComponentModel.Loci.Location"/>: Gets or set the left start value of the segment on the target sequence.(目标片段的左端起始区域，与链的方向无关)</param>
 <param name="[end]"><see cref="T:SMRUCC.genomics.ComponentModel.Loci.Location"/>: Gets or set the right stop value of the segment on the target sequence.(目标片段的右端终止区域，与链的方向无关)</param>
 <param name="Strand">链的方向</param>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.#ctor(System.Int32,System.Int32,System.Boolean)">
 <summary>
 使用片段的位置进行初始化本位点对象
 </summary>
 <param name="_start"></param>
 <param name="_ends"></param>
 <param name="ComplementStrand">这个片段是否位于DNA上面的互补链或者是否为反向序列</param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.#ctor(System.Int32,System.Int32)">
 <summary>
 自动判断链的方向，假若开始小于结束，则是正链，反之为负义链
 </summary>
 <param name="start"></param>
 <param name="Ends"></param>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.#ctor(System.Int64,System.Int64,System.Boolean)">
 <summary>
 使用片段的位置进行初始化本位点对象
 </summary>
 <param name="_start"></param>
 <param name="_ends"></param>
 <param name="ComplementStrand">这个片段是否位于DNA上面的互补链或者是否为反向序列</param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.Normalization">
 <summary>
 <seealso cref="M:SMRUCC.genomics.ComponentModel.Loci.Location.Normalization"/>
 </summary>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.CreateObject(System.Int64,System.Int32,SMRUCC.genomics.ComponentModel.Loci.Strands)">
 <summary>
 Create a nucleotide sequence loci location based on start position, segment length and segment strand.
 </summary>
 <param name="Start"></param>
 <param name="Length"></param>
 <param name="Strand"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.CreateObject(System.Int64,System.Int64)">
 <summary>
 会自动比较<paramref name="start"/>和<paramref name="ends"/>这两个参数的大小来确定链的方向
 </summary>
 <param name="Start"></param>
 <param name="Ends"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.Equals(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation,System.Int32)">
 <summary>
 和当前的这个位点位置进行允许在一定的误差范围之内的模糊匹配
 </summary>
 <param name="Loci"></param>
 <param name="AllowedOffset">当这个值为0的时候就是绝对相等</param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.GetRelationship(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation)">
 <summary>
 Gets the location relationship of two loci segments.(获取两个位点片段之间的位置关系，请注意，这个函数只依靠左右位置来判断关系，假若对核酸链的方向有要求在调用本函数之前请确保二者在同一条链之上)
 </summary>
 <param name="lcl">在计算之前请先调用<see cref="M:SMRUCC.genomics.ComponentModel.Loci.Location.Normalization"/>方法来修正</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.LociIsContact(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation)">
 <summary>
 判断目标位点片段是否与本位点片段具有相互关系，这个函数是忽略掉了链的方向了的
 </summary>
 <param name="Loci"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.ToString">
 <summary>
 这个函数的输出的字符串可以使用<see cref="M:SMRUCC.genomics.ComponentModel.Loci.LocusExtensions.TryParse(System.String)"/>方法进行解析
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.IsValid">
 <summary>
 当任意一个断点为0的时候就无效
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.Parse(System.String)">
 <summary>
 解析<see cref="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.ToString"/>的结果数据
 </summary>
 <param name="loci$"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocationParser">
 <summary>
 Custom parser for csv field
 </summary>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.SegmentRelationships">
 <summary>
 The location relationship description enumeration for the two loci sites on the nucleotide sequence.
 (核酸链上面的位点片段之间的位置关系的描述)
 </summary>
 <remarks>为了能够在查询的时候对输入进行叠加，在这里采取互斥</remarks>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Loci.SegmentRelationships.Blank">
 <summary>
 There is nothing on this location.
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Loci.SegmentRelationships.UpStreamOverlap">
 <summary>
 The loci is on the upstream of the target loci, but part of the loci was overlapping.
 (目标位点和当前的位点重叠在一个，但是目标位点的左端是在当前位点的上游的)
 </summary>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Loci.SegmentRelationships.Cover">
 <summary>
 比较的目标位点包括了当前的这个位置参照
 </summary>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Loci.SegmentRelationships.Equals">
 <summary>
 Target loci is on the same <see cref="T:SMRUCC.genomics.ComponentModel.Loci.Strands"/> with current loci and position is also equals.
 </summary>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Loci.SegmentRelationships.InnerAntiSense">
 <summary>
 指定的位点在目标位点的内部的反向序列之上
 </summary>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.Strands">
 <summary>
 The direction of this segment on the nucleotide sequence.
 (片段在DNA链上面的方向或者是否为互补链, KEGG网站上面的``cutsequence``
 函数之中的``VECTOR``参数也和本枚举值所表述的含义一致，
 正义链为1，互补链为-1值)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Loci.Strands.Forward">
 <summary>
 The loci site was on the DNA sequence.(这个片段在DNA链的正义链之上)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Loci.Strands.Reverse">
 <summary>
 The loci site was on the DNA complement strand.(这个片段在DNA链的互补链之上) 
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.Loci.Strands.Unknown">
 <summary>
 I really don't know what the direction of the loci site it is.
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.Loci.Position">
 <summary>
 百分比相对位置
 </summary>
</member>
<member name="F:SMRUCC.genomics.ComponentModel.MimeTypes.FastQ">
 <summary>
 FASTQ format is a text-based format for storing both a biological sequence 
 (usually nucleotide sequence) and its corresponding quality scores. Both the
 sequence letter and quality score are each encoded with a single ASCII 
 character for brevity. It was originally developed at the Wellcome Trust 
 Sanger Institute to bundle a FASTA formatted sequence and its quality data, 
 but has recently become the de facto standard for storing the output of 
 high-throughput sequencing instruments such as the Illumina Genome Analyzer.
 </summary>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.PeriodicTable">
 <summary>
 元素周期表
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ComponentModel.PeriodicTable.MolecularWeightCalculate(System.String)">
 <summary>
 尝试通过化学方程式来计算分子质量
 </summary>
 <param name="Formula"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.TabularLazyLoader">
 <summary>
 NCBI PTT和MetaCyc数据库所公用的多文件的数据库加载器的基本类型
 </summary>
</member>
<member name="T:SMRUCC.genomics.ComponentModel.KeyValuePairExtensions">
 <summary>
 String type key value pair.(两个字符串构成的键值对)
 </summary>
 <remarks></remarks>

</member>
<member name="T:SMRUCC.genomics.ContextModel.Context">
 <summary>
 Context model of a specific genomics feature site.
 </summary>
</member>
<member name="F:SMRUCC.genomics.ContextModel.Context.feature">
 <summary>
 Current feature site
 </summary>
</member>
<member name="F:SMRUCC.genomics.ContextModel.Context.upstream">
 <summary>
 <see cref="F:SMRUCC.genomics.ContextModel.Context.feature"/> its upstream region with a specific length
 </summary>
</member>
<member name="F:SMRUCC.genomics.ContextModel.Context.downstream">
 <summary>
 <see cref="F:SMRUCC.genomics.ContextModel.Context.feature"/> its downstream region with a specific length
 </summary>
</member>
<member name="F:SMRUCC.genomics.ContextModel.Context.antisense">
 <summary>
 the complement strand location of current <see cref="F:SMRUCC.genomics.ContextModel.Context.feature"/>
 </summary>
</member>
<member name="F:SMRUCC.genomics.ContextModel.Context.tag">
 <summary>
 The user custom tag data for this feature site.
 </summary>
</member>
<member name="M:SMRUCC.genomics.ContextModel.Context.GetRelation(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation,System.Boolean)">
 <summary>
 Get relationship between target <see cref="T:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation"/> with current feature site.
 </summary>
 <param name="loci"></param>
 <param name="stranded">Get <see cref="T:SMRUCC.genomics.ComponentModel.Loci.SegmentRelationships"/> ignored of nucleotide <see cref="T:SMRUCC.genomics.ComponentModel.Loci.Strands"/>?</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.Context.__relUnstrand(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation)">
 <summary>
 Get <see cref="T:SMRUCC.genomics.ComponentModel.Loci.SegmentRelationships"/> ignored of nucleotide <see cref="T:SMRUCC.genomics.ComponentModel.Loci.Strands"/>.
 </summary>
 <param name="loci"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.Context.ToString">
 <summary>
 Get tags data
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ContextModel.RelationDelegate`1">
 <summary>
 The working core of the genomics context provider.
 </summary>
 <typeparam name="T"></typeparam>
</member>
<member name="M:SMRUCC.genomics.ContextModel.RelationDelegate`1.GetRelation(SMRUCC.genomics.ComponentModel.Loci.SegmentRelationships,System.Int32)">
 <summary>
 为了提高上下文的搜索效率，只在附近的位置搜索
 对于正向，是从小到大排序的
 </summary>
 <param name="relType"></param>
 <param name="dist"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.RelationDelegate`1.GetATGRelation(SMRUCC.genomics.ComponentModel.Loci.SegmentRelationships,System.Int32)">
 <summary>
 
 </summary>
 <param name="relType"></param>
 <param name="ATGdist"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ContextModel.GenomeContextProvider`1">
 <summary>
 基因组上下文计算工具，一般使用<see cref="T:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT"/>或者``GFF``文件作为数据源.
 
 ```vbnet
 Dim PTT As <see cref="T:SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT"/> = TabularFormat.PTT.Load("G:\Xanthomonas_campestris_8004_uid15\CP000050.ptt")
 Dim genome As New <see cref="T:SMRUCC.genomics.ContextModel.GenomeContextProvider`1"/>(Of GeneBrief)(PTT)
 Dim loci As New <see cref="T:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation"/>(3834400, 3834450) ' XC_3200, XC_3199, KEGG测试成功
 Dim rels = genome.GetAroundRelated(loci, False)
 
 rels = genome.GetAroundRelated(loci, True)
 ```
 </summary>
 <typeparam name="T"></typeparam>
</member>
<member name="M:SMRUCC.genomics.ContextModel.GenomeContextProvider`1.GetInnerAntisense(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,SMRUCC.genomics.ComponentModel.Loci.Strands)">
 <summary>
 获取某一个指定的位点在基因组之中的内部反向的基因的集合
 </summary>
 <param name="source"></param>
 <param name="LociStart"></param>
 <param name="LociEnds"></param>
 <param name="Strand"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.GenomeContextProvider`1.GetRelatedGenes(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief},System.Int32,System.Int32,System.Int32)">
 <summary>
 Gets the related genes on a specific loci site location.(函数获取某一个给定的位点附近的所有的有关联的基因对象。
 请注意，这个函数仅仅是依靠于两个位点之间的相互位置关系来判断的，
 并没有判断链的方向，假若需要判断链的方向，请在调用本函数之前就将参数<paramref name="source"/>按照链的方向筛选出来)
 </summary>
 <param name="source"></param>
 <param name="LociStart"></param>
 <param name="LociEnds"></param>
 <param name="ATGDistance"></param>
 <returns>请注意，函数所返回的列表之中包含有不同的关系！</returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ContextModel.GenomeContextProvider`1.GetRelatedGenes(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32,System.Boolean)">
 <summary>
 Gets the related genes on a specific loci site location.(函数获取某一个给定的位点附近的所有的有关联的基因对象。
 请注意，这个函数仅仅是依靠于两个位点之间的相互位置关系来判断的，
 并没有判断链的方向，假若需要判断链的方向，请在调用本函数之前就将参数<paramref name="source"/>按照链的方向筛选出来)
 </summary>
 <param name="source"></param>
 <param name="start"></param>
 <param name="ends"></param>
 <param name="ATGDist"></param>
 <returns>请注意，函数所返回的列表之中包含有不同的关系！</returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ContextModel.GenomeContextProvider`1.GetRelatedUpstream(System.Collections.Generic.IEnumerable{`0},SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation,System.Int32)">
 <summary>
 <see cref="F:SMRUCC.genomics.ComponentModel.Loci.SegmentRelationships.UpStreamOverlap"/> and 
 <see cref="F:SMRUCC.genomics.ComponentModel.Loci.SegmentRelationships.UpStream"/>
 </summary>
 <param name="source"></param>
 <param name="Loci"></param>
 <param name="ATGDistance"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.GenomeContextProvider`1.GetSource(SMRUCC.genomics.ComponentModel.Loci.Strands)">
 <summary>
 Gets the stranded gene object data source.
 </summary>
 <param name="strand"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.GenomeContextProvider`1.__delegate(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation,System.Boolean,System.Boolean)">
 <summary>
 Creates the anonymous function pointer for the relationship <see cref="M:SMRUCC.genomics.ContextModel.GenomeContextProvider`1.GetAroundRelated(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation,System.Boolean,System.Int32,System.Boolean)"/>
 </summary>
 <param name="loci"></param>
 <param name="stranded"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.GenomeContextProvider`1.GetAroundRelated(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation,System.Boolean,System.Int32,System.Boolean)">
 <summary>
 Gets the related genes on a specific loci site location.(函数获取某一个给定的位点附近的所有的有关联的基因对象。
 请注意，这个函数仅仅是依靠于两个位点之间的相互位置关系来判断的，
 假若这个参数<param name="stranded"></param>为真，假若需要判断链的方向)
 </summary>
 <param name="lociDist"></param>
 <returns>请注意，函数所返回的列表之中包含有不同的关系！</returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ContextModel.LocationDescriptions.IsBlankSegment(SMRUCC.genomics.ComponentModel.Annotation.IGeneBrief)">
 <summary>
 判断本对象是否是由<see cref="M:SMRUCC.genomics.ContextModel.LocationDescriptions.BlankSegment``1(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation)"></see>方法所生成的空白片段
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ContextModel.LocationDescriptions.GetLociRelations``1(``0,SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation)">
 <summary>
 Get the loci relationship between the target gene and the specific feature loci.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="gene"></param>
 <param name="nucl"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.LocationDescriptions.GetLociRelations(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation,SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation)">
 <summary>
 Get the loci relationship between the target gene and the specific feature loci.
 </summary>
 <param name="gene"></param>
 <param name="nucl"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.LocationDescriptions.ATGDistance``1(``0,SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation)">
 <summary>
 Calculate the ATG distance between the target gene and the specific feature loci.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="gene"></param>
 <param name="nucl"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.LocationDescriptions.GetATGDistance(SMRUCC.genomics.ComponentModel.Loci.Location,SMRUCC.genomics.ComponentModel.Annotation.IGeneBrief)">
 <summary>
 Calculates the ATG distance between the target gene and a loci segment on.(计算位点相对于某一个基因的ATG距离)
 </summary>
 <param name="loci"></param>
 <param name="gene"></param>
 <returns>总是计算最大的距离</returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ContextModel.LocationDescriptions.LocationDescription``1(SMRUCC.genomics.ComponentModel.Loci.SegmentRelationships,``0)">
 <summary>
 Gets the loci location description data.
 </summary>
 <typeparam name="T"></typeparam>
 <param name="posi"></param>
 <param name="data"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ContextModel.IGenomicsContextProvider`1.AllFeatures">
 <summary>
 Listing all of the features loci sites on the genome. 
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.IGenomicsContextProvider`1.GetRelatedGenes(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation,System.Boolean,System.Int32)">
 <summary>
 获取某一个位点在位置上有相关联系的基因
 </summary>
 <param name="loci"></param>
 <param name="unstrand"></param>
 <param name="ATGDist"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.IGenomicsContextProvider`1.GetStrandFeatures(SMRUCC.genomics.ComponentModel.Loci.Strands)">
 <summary>
 Gets all of the feature sites on the specific <see cref="T:SMRUCC.genomics.ComponentModel.Loci.Strands"/> nucleotide sequence
 </summary>
 <param name="strand"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ContextModel.Relationship`1">
 <summary>
 描述位点在基因组上面的位置，可以使用<see cref="M:SMRUCC.genomics.ContextModel.Relationship`1.ToString"/>函数获取得到位置描述
 </summary>
 <typeparam name="T"></typeparam>
</member>
<member name="P:SMRUCC.genomics.ContextModel.Relationship`1.Gene">
 <summary>
 Target gene object
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ContextModel.Relationship`1.locus_tag">
 <summary>
 <see cref="P:Microsoft.VisualBasic.ComponentModel.DataSourceModel.Repository.IKeyedEntity`1.Key"/>
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.Relationship`1.ToString">
 <summary>
 Gets loci location relationship description with this <see cref="P:SMRUCC.genomics.ContextModel.Relationship`1.Gene"/> object.
 (位置关系的描述信息)
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ContextModel.TFDensity">
 <summary>
 Calculates the relative density of the TF on each gene on the genome.
 </summary>
</member>
<member name="M:SMRUCC.genomics.ContextModel.TFDensity.Density``1(SMRUCC.genomics.ContextModel.IGenomicsContextProvider{``0},System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Boolean)">
 <summary>
 Although this function name means calculate the relative density of the TF on the genome for each gene, 
 but you can also calculate any type of gene its density on the genome.
 (虽然名称是调控因子的密度，但是也可以用作为其他类型的基因的密度的计算，
 这个函数是非顺式的，即只要在ATG前面的范围内或者TGA后面的范围内出现都算存在)
 </summary>
 <typeparam name="T"></typeparam>
 <param name="genome"></param>
 <param name="TF"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.TFDensity.DensityCis``1(SMRUCC.genomics.ContextModel.IGenomicsContextProvider{``0},System.Collections.Generic.IEnumerable{System.String},System.Int32)">
 <summary>
 顺式调控，只有TF出现在上游，并且二者链方向相同才算存在
 </summary>
 <typeparam name="T"></typeparam>
 <param name="genome">Bacteria genomic context provider.</param>
 <param name="TF">The TF locus_tag list.</param>
 <param name="ranges">
 This value is set to 20000bp is more perfect works on the bacteria genome, probably...
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.TFDensity.__getCisGenes``1(``0,``0[],System.Int32)">
 <summary>
 查找当前的基因的上游符合距离范围内的TF目标
 </summary>
 <typeparam name="T"></typeparam>
 <param name="g"></param>
 <param name="TFs"></param>
 <param name="ranges"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ContextModel.Density">
 <summary>
 Genomics context relative abundance
 </summary>
</member>
<member name="P:SMRUCC.genomics.ContextModel.Density.locus_tag">
 <summary>
 The gene locus_tag identifier
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ContextModel.Density.Abundance">
 <summary>
 The specific features on the genome its relative abundance relative to this gene <see cref="P:SMRUCC.genomics.ContextModel.Density.locus_tag"/>
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ContextModel.Density.product">
 <summary>
 Current gene object its function annotation.
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.Extensions.RangeSelection(SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT,SMRUCC.genomics.ComponentModel.Loci.Location,System.Boolean)">
 <summary>
 使用一个范围选出所有落在该范围内的基因
 </summary>
 <param name="genome"></param>
 <param name="region"></param>
 <returns></returns>
</member>
<member name="F:SMRUCC.genomics.ContextModel.GenomeContext`1.sequence">
 <summary>
 按照<see cref="P:SMRUCC.genomics.ComponentModel.Loci.Location.left"/>从小到大排序的
 </summary>
</member>
<member name="F:SMRUCC.genomics.ContextModel.GenomeContext`1.contextName">
 <summary>
 The name of this genome
 </summary>
</member>
<member name="P:SMRUCC.genomics.ContextModel.GenomeContext`1.N">
 <summary>
 The number of genes in this genome
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ContextModel.GenomeContext`1.size">
 <summary>
 得到根据所输入的位点信息估算出目标基因组可能的大小
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.GenomeContext`1.Delta(System.String,System.String)">
 <summary>
 The number of genes between feature 1 and feature 2.
 </summary>
 <param name="feature1$"></param>
 <param name="feature2$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.GenomeContext`1.SelectByRange(System.Int32,System.Int32,SMRUCC.genomics.ComponentModel.Loci.Strands)">
 <summary>
 将基因组上面的某一区域内的基因对象都查找出来
 </summary>
 <param name="i%"></param>
 <param name="j%"></param>
 <param name="strand">
 默认不限制链的方向
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.Promoter.Extensions.GetPrefixLengths">
 <summary>
 Read from <see cref="T:SMRUCC.genomics.ContextModel.Promoter.PrefixLength"/> members.
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.Promoter.Extensions.ParseUpstreamByLength(SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT,SMRUCC.genomics.SequenceModel.IPolymerSequenceModel,System.Int32)">
 <summary>
 解析出所有基因前面的序列片段
 </summary>
 <param name="context"></param>
 <param name="nt"></param>
 <param name="length%"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ContextModel.Promoter.Extensions.GetUpstreamSeq(SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.ComponentModels.GeneBrief,SMRUCC.genomics.SequenceModel.IPolymerSequenceModel,System.Int32)">
 <summary>
 Get upstream nt sequence in a specific length for target gene.
 (在这个函数之中，位点的计算的时候会有一个碱基的偏移量是因为为了不将起始密码子ATG之中的A包含在结果序列之中)
 </summary>
 <param name="gene"></param>
 <param name="nt"></param>
 <param name="len%"></param>
 <returns></returns>
 
</member>
<member name="T:SMRUCC.genomics.ContextModel.Promoter.PromoterRegionParser">
 <summary>
 直接从基因的启动子区选取序列数据以及外加操纵子的第一个基因的启动子序列
 </summary>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.ContextModel.Promoter.PromoterRegionParser.#ctor(SMRUCC.genomics.SequenceModel.FASTA.FastaSeq,SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT)">
 <summary>
 基因组的Fasta核酸序列
 </summary>
 <param name="nt">全基因组序列</param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ContextModel.Promoter.PromoterRegionParser.GetSequenceById(SMRUCC.genomics.ContextModel.Promoter.PromoterRegionParser,System.Collections.Generic.IEnumerable{System.String},SMRUCC.genomics.ContextModel.Promoter.PrefixLength)">
 <summary>
 Get parsed sequence by a given id list.
 </summary>
 <param name="parser"></param>
 <param name="geneIDs"></param>
 <param name="length"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ContextModel.Promoter.PromoterRegionParser.ContainsLength(System.Int32)">
 <summary>
 If <paramref name="length"/> is 160, then it will be invalid, check if the input length is valids?
 </summary>
 <param name="length"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.LICENSE">
 <summary>
 ᶘ ᵒᴥᵒᶅ？？？？
 </summary>
 <remarks>
  _______           _______
 く__,.ヘヽ.　　　　/　,ー､ 〉
　　＼ ', !-─‐-i　/　/´
 　 ／｀ｰ'　　　 L/／｀ヽ､
  /　 ／,　 /|　 ,　 ,　　　 ',
  ｲ 　/ /-‐/　ｉ　L_ ﾊ ヽ!　 i
   ﾚ ﾍ 7ｲ｀ﾄ　 ﾚ'ｧ-ﾄ､!ハ|　 |
  !,/7 'ゞ'　　 ´i__rﾊiソ| 　 |　　　
  |.从"　　_　　 ,,,, / |./ 　 |
  ﾚ'| i＞.､,,__　_,.イ / 　.i 　|
    ﾚ'| | / k_７_/ﾚ'ヽ,　ﾊ.　|
　　 | |/i 〈|/　 i　,.ﾍ |　i　|
　　　.|/ /　ｉ： 　 ﾍ!　　＼　|
 　 　 kヽ>､ﾊ 　 _,.ﾍ､ 　 /､!
　　　 !'〈//｀Ｔ´', ＼ ｀'7'ｰr'
　　　 ﾚ'ヽL__|___i,___,ンﾚ|ノ
　　 　　　ﾄ-,/　|___./
　　 　　　'ｰ'　　!_,.:
 </remarks>
</member>
<member name="P:SMRUCC.genomics.LICENSE.GPL3">
<summary>
  Looks up a localized string similar to                     GNU GENERAL PUBLIC LICENSE
                       Version 3, 29 June 2007

 Copyright (C) 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.

                            Preamble

  The GNU General Public License is a free, copyleft license for
software and other kinds of works.

  The licenses for most software and other practical works are designed
to take away yo [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="M:SMRUCC.genomics.LICENSE.GithubRepository">
 <summary>
 https://github.com/SMRUCC/GCModeller.Core
 </summary>
</member>
<member name="P:SMRUCC.genomics.LICENSE.WebRequestUserAgent">
 <summary>
 GCModeller之中的所有的组件通过http请求一些Web API的时候所使用到的默认user-agent字符串。
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.LICENSE.#cctor">
 <summary>
 设置UserAgent
 </summary>
</member>
<member name="M:SMRUCC.genomics.LICENSE.FindGCModeller">
 <summary>
 Find directory of GCModeller using environment path variable.
 </summary>
 <returns></returns>
 <remarks>
 会需要依赖于这个路径来加载Bio.Resources资源卫星程序集文件
 </remarks>
</member>
<member name="T:SMRUCC.genomics.MetabolicModel.MetabolicReaction">
 <summary>
 A unify reaction model in the GCModeller system
 </summary>
</member>
<member name="P:SMRUCC.genomics.MetabolicModel.MetabolicReaction.is_reversible">
 <summary>
 if not is reversible, then the reaction direction is left to right by default
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.MetabolicModel.MetabolicReaction.is_spontaneous">
 <summary>
 could be react no required of the enzymatic
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Metagenomics.BIOMTaxonomy.BIOMPrefix">
 <summary>
 ``k__{x.superkingdom};p__{x.phylum};c__{x.class};o__{x.order};f__{x.family};g__{x.genus};s__{x.species}``
 </summary>
</member>
<member name="P:SMRUCC.genomics.Metagenomics.BIOMTaxonomy.BIOMPrefixAlt">
 <summary>
 ``["superkingdom__", "phylum__", "class__", "order__", "family__", "genus__", "species__"]``
 </summary>
 <returns></returns>
 <remarks>
 Example:
 
 ```
 no rank__cellular organisms;superkingdom__Eukaryota;no rank__Opisthokonta;kingdom__Fungi;subkingdom__Dikarya;phylum__Ascomycota;no rank__saccharomyceta;subphylum__Pezizomycotina;no rank__leotiomyceta;no rank__dothideomyceta;class__Dothideomycetes;no rank__Dothideomycetes incertae sedis;order__Botryosphaeriales;family__Botryosphaeriaceae;genus__Macrophomina;species__Macrophomina phaseolina;no rank__Macrophomina phaseolina MS6
 ```
 </remarks>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.BIOMTaxonomy.TaxonomyString(System.String[])">
 <summary>
 Contact the taxonomy lineage tokens as a taxonomy lineage string uin BIOM format. 
 </summary>
 <param name="lineage">
 Lineage tokens text array data from <see cref="M:SMRUCC.genomics.Metagenomics.Taxonomy.Select(SMRUCC.genomics.Metagenomics.TaxonomyRanks)"/> method.
 (这里所输入的字符串数组可以是没有BIOM前缀的，也可以是具有分类等级前缀的，这个函数会自动执行归一化)
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.BIOMTaxonomy.TaxonomyFromString(System.String,System.Char)">
 <summary>
 这个函数不像<see cref="M:SMRUCC.genomics.Metagenomics.BIOMTaxonomy.TaxonomyParser(System.String)"/>和<see cref="M:SMRUCC.genomics.Metagenomics.BIOMTaxonomy.TaxonomyParserAlt(System.String)"/>这两个是专门针对
 具有分类信息前缀的字符串的解析。这个函数是主要针对于没有分类层次信息前缀的字符串的解析函数，
 由于没有分类信息的前缀字符串，故而这个函数也主要是依靠tokens之间的前后顺序来赋值分类的rank信息
 </summary>
 <param name="lineage">从大到小排序的</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.BIOMTaxonomy.AsTaxonomy(System.Collections.Generic.Dictionary{System.String,System.String})">
 <summary>
 ``New <see cref="T:SMRUCC.genomics.Metagenomics.Taxonomy"/>(<paramref name="lineage"/>)``
 </summary>
 <param name="lineage"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.BIOMTaxonomy.TaxonomyParser(System.String)">
 <summary>
 For <see cref="P:SMRUCC.genomics.Metagenomics.BIOMTaxonomy.BIOMPrefix"/>
 </summary>
 <param name="taxonomy$"></param>
 <returns></returns>
 <remarks>
 greengenes数据库之中的taxonomy name会存在``[]``这类的符号，不清楚是因为什么？
 在这里替换掉
 </remarks>
 
</member>
<member name="M:SMRUCC.genomics.Metagenomics.BIOMTaxonomy.TaxonomyParser(System.String[])">
 <summary>
 For <see cref="P:SMRUCC.genomics.Metagenomics.BIOMTaxonomy.BIOMPrefix"/>
 </summary>
 <param name="taxonomy$"></param>
 <returns></returns>
 <remarks>
 greengenes数据库之中的taxonomy name会存在``[]``这类的符号，不清楚是因为什么？
 在这里替换掉
 </remarks>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.BIOMTaxonomy.TaxonomyParserAlt(System.String)">
 <summary>
 For <see cref="P:SMRUCC.genomics.Metagenomics.BIOMTaxonomy.BIOMPrefixAlt"/>
 </summary>
 <param name="taxonomy$"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Metagenomics.BIOMTaxonomyParser">
 <summary>
 Parser and stringfier of <see cref="T:SMRUCC.genomics.Metagenomics.Taxonomy"/> object.
 </summary>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.BIOMTaxonomyParser.ToString(System.Object)">
 <summary>
 
 </summary>
 <param name="obj">
 Object value should be in data type <see cref="T:SMRUCC.genomics.Metagenomics.Taxonomy"/>
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.BIOMTaxonomyParser.TryParse(System.String)">
 <summary>
 Create a <see cref="T:SMRUCC.genomics.Metagenomics.Taxonomy"/> object from parse taxonomy string
 </summary>
 <param name="content"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Metagenomics.BIOMTaxonomyParser.Parse(System.String)">
 <summary>
 parse auto
 </summary>
 <param name="biomString"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.Metagenomics.OTUData`1">
 <summary>
 <see cref="P:SMRUCC.genomics.Metagenomics.OTUData`1.data"/> that associated with <see cref="P:SMRUCC.genomics.Metagenomics.OTUData`1.OTU"/> tag
 </summary>
</member>
<member name="P:SMRUCC.genomics.Metagenomics.OTUData`1.OTU">
 <summary>
 ``#OTU_num``
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Metagenomics.OTUData`1.taxonomy">
 <summary>
 Usually this property is the BIOM format taxonomy information
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.Metagenomics.OTUData`1.data">
 <summary>
 每一个样本的OTU含量或者其他的结果数据
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.OTUData`1.#ctor(SMRUCC.genomics.Metagenomics.OTUData{`0})">
 <summary>
 Copy data
 </summary>
 <param name="data"></param>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.SampleAbundanceSelector`1.SelectSamples(System.Collections.Generic.IEnumerable{SMRUCC.genomics.Metagenomics.Taxonomy})">
 <summary>
 Select samples' taxonomy abundance by a given list of taxonomy.
 </summary>
 <param name="taxs"></param>
 <returns>
 返回来的结果的长度以及物种信息是和函数的参数长度一致的
 </returns>
</member>
<member name="T:SMRUCC.genomics.Metagenomics.Taxonomy">
 <summary>
 A simple organism taxonomy model.
 </summary>
 <remarks>
 主要是用来保存csv以及Xml文件使用
 </remarks>
</member>
<member name="P:SMRUCC.genomics.Metagenomics.Taxonomy.kingdom">
 <summary>
 1. 界
 </summary>
</member>
<member name="P:SMRUCC.genomics.Metagenomics.Taxonomy.phylum">
 <summary>
 2. 门
 </summary>
</member>
<member name="P:SMRUCC.genomics.Metagenomics.Taxonomy.class">
 <summary>
 3A. 纲
 </summary>
</member>
<member name="P:SMRUCC.genomics.Metagenomics.Taxonomy.order">
 <summary>
 4B. 目
 </summary>
</member>
<member name="P:SMRUCC.genomics.Metagenomics.Taxonomy.family">
 <summary>
 5C. 科
 </summary>
</member>
<member name="P:SMRUCC.genomics.Metagenomics.Taxonomy.genus">
 <summary>
 6D. 属
 </summary>
</member>
<member name="P:SMRUCC.genomics.Metagenomics.Taxonomy.species">
 <summary>
 7E. 种
 </summary>
</member>
<member name="P:SMRUCC.genomics.Metagenomics.Taxonomy.lowestLevel">
 <summary>
 获取当前的这个分类结果值的最小分类单元的等级
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.Taxonomy.#ctor(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
 <summary>
 这个函数会自动调用<see cref="M:SMRUCC.genomics.Metagenomics.BIOMTaxonomy.FillLineageEmpty(System.Collections.Generic.Dictionary{System.String,System.String},System.String)"/>函数来填充缺失掉的rank部分
 所以这个构造方法是安全的构造方法，不需要担心会因为缺少否些rank而抛出错误
 </summary>
 <param name="lineage"></param>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.Taxonomy.#ctor">
 <summary>
 需要在这里使用无参的构造函数来提供按照属性赋值的初始化形式
 </summary>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.Taxonomy.Select(SMRUCC.genomics.Metagenomics.TaxonomyRanks)">
 <summary>
 Convert current <see cref="T:SMRUCC.genomics.Metagenomics.Taxonomy"/> object as a string array.
 (返回来的元素值是按照<see cref="T:SMRUCC.genomics.Metagenomics.TaxonomyRanks"/>从大到小排列的)
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.Taxonomy.CompareWith(SMRUCC.genomics.Metagenomics.Taxonomy)">
 <summary>
 这个函数不会比较<see cref="P:SMRUCC.genomics.Metagenomics.Taxonomy.scientificName"/>
 </summary>
 <param name="another">item b</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.Taxonomy.ToString">
 <summary>
 返回BIOM格式的Taxonomy字符串
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.Taxonomy.ToString(System.Boolean,System.Boolean)">
 <summary>
 如果<paramref name="BIOMstyle"/>参数为真,则返回符合BIOM文件要求的Taxonomy字符串格式
 </summary>
 <param name="BIOMstyle"></param>
 <param name="trimGenus">
 only works when <paramref name="BIOMstyle"/> parameter value set to TRUE
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.TaxonomyExtensions.Trim(SMRUCC.genomics.Metagenomics.Taxonomy)">
 <summary>
 Removes the NA/unknown/unclassified from the tails ranks of <paramref name="tax"/>.
 </summary>
 <param name="tax"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.Metagenomics.TaxonomyExtensions.TaxonomyRankEmpty(System.String)">
 <summary>
 判断当前的这个<paramref name="rank"/>字符串所代表的物种分类名称是否是空的？？
 </summary>
 <param name="rank"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.Metagenomics.TaxonomyExtensions.SelectByTaxonomyRange``2(System.Collections.Generic.IEnumerable{``0},SMRUCC.genomics.Metagenomics.Taxonomy,SMRUCC.genomics.Metagenomics.TaxonomyExtensions.TaxonomyProjector{``0},Microsoft.VisualBasic.ComponentModel.DataSourceModel.Projector{``0,``1})">
 <summary>
 
 </summary>
 <typeparam name="T"></typeparam>
 <typeparam name="TOut"></typeparam>
 <param name="seq"></param>
 <param name="ref">如果目标<paramref name="getTaxonomy"/>的分类结果是
 位于当前的这个参考<paramref name="ref"/>范围内的，则会被筛选出来
 </param>
 <param name="getTaxonomy"></param>
 <param name="getValue"></param>
 <returns></returns>
 
</member>
<member name="T:SMRUCC.genomics.Metagenomics.TaxonomyRanks">
 <summary>
 the organism taxonomy rank levels
 </summary>
 <remarks>
 枚举值减去100即可得到index值
 </remarks>
</member>
<member name="F:SMRUCC.genomics.Metagenomics.TaxonomyRanks.Kingdom">
 <summary>
 1. 界
 </summary>
</member>
<member name="F:SMRUCC.genomics.Metagenomics.TaxonomyRanks.Phylum">
 <summary>
 2. 门
 </summary>
</member>
<member name="F:SMRUCC.genomics.Metagenomics.TaxonomyRanks.Class">
 <summary>
 3A. 纲
 </summary>
</member>
<member name="F:SMRUCC.genomics.Metagenomics.TaxonomyRanks.Order">
 <summary>
 4B. 目
 </summary>
</member>
<member name="F:SMRUCC.genomics.Metagenomics.TaxonomyRanks.Family">
 <summary>
 5C. 科
 </summary>
</member>
<member name="F:SMRUCC.genomics.Metagenomics.TaxonomyRanks.Genus">
 <summary>
 6D. 属
 </summary>
</member>
<member name="F:SMRUCC.genomics.Metagenomics.TaxonomyRanks.Species">
 <summary>
 7E. 种
 </summary>
</member>
<member name="T:SMRUCC.genomics.ProteinModel.IMotifDomain">
 <summary>
 一个蛋白质结构域对象的抽象模型
 </summary>
</member>
<member name="P:SMRUCC.genomics.ProteinModel.IMotifDomain.Id">
 <summary>
 蛋白质结构域在数据库之中的编号或者名称
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ProteinModel.IMotifDomain.location">
 <summary>
 在蛋白质分子序列上面的位置区域
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.ProteinModel.ChouFasmanRules.AminoAcid.StructureType">
 <summary>
 当前的这个氨基酸分子所处的二级结构特征
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ProteinModel.ChouFasmanRules.AminoAcid.StructureChar">
 <summary>
 使用一个字符用来表示的二级结构特征
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasman">
 <summary>
 @ - <see cref="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.SecondaryStructures.AlphaHelix"></see>;
 1 - <see cref="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.SecondaryStructures.BetaSheet"></see>;
 ^ - <see cref="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.SecondaryStructures.BetaTurn"></see>;
 &amp; - <see cref="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.SecondaryStructures.Coils"></see>
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasman.Calculate(System.String)">
 <summary>
 使用<see cref="T:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasman"></see>方法计算蛋白质的二级结构
 </summary>
 <param name="sequence">序列之中不能够包含有除了氨基酸的字符之外的任何其他字符，否则函数会出错</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasman.Calculate(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel)">
 <summary>
 使用<see cref="T:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasman"></see>方法计算蛋白质的二级结构
 </summary>
 <param name="sequence"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter.f">
 <summary>
 f(i), f(i+1), f(i+2), f(i+3)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._A">
 <summary>
 丙氨酸（A）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._R">
 <summary>
 精氨酸（R）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._N">
 <summary>
 天冬酰胺（N）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._D">
 <summary>
 天冬氨酸（D）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._C">
 <summary>
 半胱氨酸（C）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._E">
 <summary>
 谷氨酸（E）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._Q">
 <summary>
 谷氨酰胺（Q）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._G">
 <summary>
 甘氨酸（G）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._H">
 <summary>
 组氨酸（H）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._I">
 <summary>
 异亮氨酸（I）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._L">
 <summary>
 亮氨酸（L）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._K">
 <summary>
 赖氨酸（K）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._M">
 <summary>
 甲硫氨酸（M）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._F">
 <summary>
 苯丙氨酸（F）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._P">
 <summary>
 脯氨酸（P）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._S">
 <summary>
 丝氨酸（S）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._T">
 <summary>
 苏氨酸（T）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._W">
 <summary>
 色氨酸（W）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._Y">
 <summary>
 酪氨酸（Y）
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.ChouFasmanParameter._V">
 <summary>
 缬氨酸（V）
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ProteinModel.ChouFasmanRules.Rules.RuleAlphaHelix.Invoke(SMRUCC.genomics.ProteinModel.ChouFasmanRules.AminoAcid[])">
 <summary>
 Invoke calculation
 </summary>
 <param name="SequenceData"></param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ProteinModel.ChouFasmanRules.Rules.RuleBetaSheet.Invoke(SMRUCC.genomics.ProteinModel.ChouFasmanRules.AminoAcid[])">
 <summary>
 Invoke calculation
 </summary>
 <param name="SequenceData"></param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ProteinModel.ChouFasmanRules.Rules.RuleBetaTurn.Invoke(SMRUCC.genomics.ProteinModel.ChouFasmanRules.AminoAcid[])">
 <summary>
 Invoke calculation
 </summary>
 <param name="SequenceData"></param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ProteinModel.ChouFasmanRules.Rules.RuleOverlap.Invoke(SMRUCC.genomics.ProteinModel.ChouFasmanRules.AminoAcid[])">
 <summary>
 Invoke calculation
 </summary>
 <param name="SequenceData"></param>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.ProteinModel.ChouFasmanRules.SecondaryStructures">
 <summary>
 蛋白质的二级结构分类
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.SecondaryStructures.AlphaHelix">
 <summary>
 alpha螺旋
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.SecondaryStructures.BetaSheet">
 <summary>
 Beta折叠
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.SecondaryStructures.BetaTurn">
 <summary>
 Beta转角
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.ProteinModel.ChouFasmanRules.SecondaryStructures.Coils">
 <summary>
 无规则卷曲
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.ProteinModel.DomainModel">
 <summary>
 The simple protein domain motif model.
 </summary>
</member>
<member name="T:SMRUCC.genomics.ProteinModel.DomainObject">
 <summary>
 Domain identifier + Domain Location
 </summary>
</member>
<member name="P:SMRUCC.genomics.ProteinModel.DomainObject.Location">
 <summary>
 百分比位置
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ProteinModel.DomainObject.GetInteractionDomains(SMRUCC.genomics.Assembly.DOMINE.Database)">
 <summary>
 获取与本结构域相互作用的结构域的ID
 </summary>
 <param name="DOMINE"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.ProteinModel.Protein">
 <summary>
 A type of data structure for descript the protein domain architecture distribution.(一个用于描述蛋白质结构域分布的数据结构)
 </summary>
 <remarks></remarks>
 
</member>
<member name="P:SMRUCC.genomics.ProteinModel.Protein.ID">
 <summary>
 该目标蛋白质的唯一标识符
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.ProteinModel.Protein.Domains">
 <summary>
 结构域分布
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ProteinModel.Protein.ContainsAnyDomain(System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 本蛋白质之中是否包含有目标结构域编号列表中的任何结构域信息，返回所包含的编号列表
 </summary>
 <param name="DomainAccessions"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ProteinModel.Protein.InteractionWith(SMRUCC.genomics.Assembly.DOMINE.Database)">
 <summary>
 获取与本蛋白质相互作用的结构域列表
 </summary>
 <param name="DOMINE"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.ProteinModel.Protein.SimilarTo(SMRUCC.genomics.ProteinModel.Protein,SMRUCC.genomics.ProteinModel.Protein,System.Double)">
 <summary>
 简单的根据结构域分布来判断两个蛋白质是否相似，两个蛋白质的结构域分布必须以相似的方式进行排布
 </summary>
 <param name="Protein1"></param>
 <param name="Protein2"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.ObjectQuery.IQueryExtensions">
 <summary>
 Extensions for object query in the GCModeller biological components
 </summary>
</member>
<member name="M:SMRUCC.genomics.ObjectQuery.IQueryExtensions.MatchGene(SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT,System.String,System.Collections.Generic.IEnumerable{System.String},System.Double,System.Boolean)">
 <summary>
 函数会优先按照<paramref name="geneName"/>进行查询，假若查找不到结果，才会使用<paramref name="products"/>列表进行模糊匹配
 </summary>
 <param name="PTT"></param>
 <param name="geneName"></param>
 <param name="products">大小写不敏感</param>
 <param name="cut">字符串匹配相似度的最小的阈值</param>
 <param name="First">
 是直接返回匹配到的第一个结果还是先对所有基因匹配，然后再返回相似度最高的基因对象？默认是直接返回第一个匹配结果
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ObjectQuery.IQueryExtensions.GetLocusTag(SMRUCC.genomics.SequenceModel.FASTA.FastaSeq)">
 <summary>
 <see cref="P:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.Headers"/> parsing the first word token as uid.
 </summary>
 <param name="fasta"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.ObjectQuery.IQueryExtensions.ContainsMultipleSequence(System.String)">
 <summary>
 判断目标fasta文件是否包含有多条序列？
 </summary>
 <param name="path$">fasta file path</param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.ObjectQuery.NamespaceDoc">
 <summary>
 biological object query helper module
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.SeqTypes.Generic">
 <summary>
 the unknow sequence type
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.SeqTypes.DNA">
 <summary>
 Deoxyribonucleotide - DNA(ATGC)
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.SeqTypes.RNA">
 <summary>
 Ribonucleotide - RNA(AUGC)
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.SeqTypes.Protein">
 <summary>
 Polypeptide
 </summary>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.IPolymerSequenceModel">
 <summary>
 Sequence model for a macro biomolecule sequence.
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.IPolymerSequenceModel.SequenceData">
 <summary>
 <see cref="T:System.String"></see> type sequence data for the target <see cref="T:SMRUCC.genomics.SequenceModel.ISequenceModel"/> sequence model object.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.ISequenceBuilder">
 <summary>
 This class can be using for build a <see cref="T:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq"/> object.
 </summary>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.ISequenceBuilder.Length">
 <summary>
 <see cref="M:SMRUCC.genomics.SequenceModel.ISequenceBuilder.GetSequenceData"/> length.(序列的长度)
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.ISequenceBuilder.Name">
 <summary>
 This property is using for generates the fasta sequence title.(用于进行序列标识的标题摘要)
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.ISequenceBuilder.GetSequenceData">
 <summary>
 Data source method for gets the sequence data to create a fasta object.
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.Bits">
 <summary>
 Sequence model in bytes
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Bits.OverlapSize(SMRUCC.genomics.SequenceModel.Bits)">
 <summary>
 注意这个函数并不是用于比较序列相似度, 而是精准的计算比较两条序列从头开始的重叠片段的大小
 </summary>
 <param name="another"></param>
 <returns></returns>
 <remarks>
 主要是一个用于序列装配的帮助函数
 </remarks>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.CutSequence">
 <summary>
 Cut sequence for DNA/protein
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.CutSequence.CutSequenceLinear(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel,SMRUCC.genomics.ComponentModel.Loci.Location)">
 <summary>
 核酸分子和蛋白质分子都适用
 </summary>
 <param name="seq"></param>
 <param name="site"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.CutSequence.CutSequenceLinear(System.String@,System.Int32,System.Int32)">
 <summary>
 
 </summary>
 <param name="seq$"></param>
 <param name="left">下标是从1开始的</param>
 <param name="right%"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.CutSequence.CutSequenceLinear(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel,System.Int32,System.Int32,System.String)">
 <summary>
 核酸分子和蛋白质分子都适用
 </summary>
 <param name="seq"></param>
 <param name="left">
 下标是从1开始的
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.CutSequence.ReadComplement(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel,System.Int32,System.Int32,System.String)">
 <summary>
 将目标序列之中的给定区域的序列剪下，并返回该片段的互补序列
 </summary>
 <param name="seq"></param>
 <param name="left">请注意，这个参数是以1为起始的</param>
 <param name="length%"></param>
 <param name="tag$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.CutSequence.CutSequenceLinear(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel,SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation)">
 <summary>
 
 </summary>
 <param name="seq"></param>
 <param name="loci"></param>
 <returns></returns>
 <remarks>Tested by XC_1184/XC_0012, no problem.</remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.CutSequence.CutSequenceCircular(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel,SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation)">
 <summary>
 这个函数会自动计算出上半部分的位置
 </summary>
 <param name="seq"></param>
 <param name="site"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.CutSequence.CutSequenceCircular(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel,SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation,SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation)">
 <summary>
 <paramref name="site"/> at the end of nt sequence join with <paramref name="join"/> location to consist a completed gene. 
 (请注意，在这里两个位点是直接进行序列拼接的，所以在这里两个参数是有顺序之分的)
 </summary>
 <param name="seq"></param>
 <param name="site">环状的分子只能够是DNA分子，所以这里是核酸序列的位置</param>
 <returns></returns>
 <remarks>Not sure, probably success.</remarks>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.FASTA.IFastaProvider">
 <summary>
 A fasta sequence data provider
 </summary>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.FASTA.IFastaProvider.title">
 <summary>
 A readonly property for provides the title of the sequence 
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.FASTA.IAbstractFastaToken">
 <summary>
 The fasta object is a sequence model object with a specific title to identify the sequence and a sequence data property to represents the specific molecule.
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.FASTA.IAbstractFastaToken.title">
 <summary>
 The title value which contains some brief information about this sequence.
 (这条序列数据的标题摘要信息)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.FASTA.IAbstractFastaToken.headers">
 <summary>
 The attribute header of this FASTA file. The fasta header usually have some format which can be parsed by some 
 specific loader and gets some well organized information about the sequence. The format of the header is 
 usually different between each biological database.(这个FASTA文件的属性头，标题的格式通常在不同的数据库之间是具有很大差异的)
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.FASTA.ISequenceProvider">
 <summary>
 This object could provide a sequence data through <see cref="M:SMRUCC.genomics.SequenceModel.FASTA.ISequenceProvider.GetSequenceData"/> function.
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.Extensions.Index(SMRUCC.genomics.SequenceModel.FASTA.FastaFile,Microsoft.VisualBasic.Language.Variant{System.Int32,System.String})">
 <summary>
 函数返回-1表示找不到
 </summary>
 <param name="fasta"></param>
 <param name="idx$">对index的描述，可以是title也可以直接是index数字</param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.FASTA.HeaderFormats">
 <summary>
 Fasta序列在不同的数据库之中的标题的格式的帮助函数模块
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.HeaderFormats.TrimAccessionVersion(System.String)">
 <summary>
 在这里移除序列编号之中的版本号
 </summary>
 <param name="accession">``XXXXX.1``</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.HeaderFormats.GetUniProtAccession(System.String)">
 <summary>
 格式参见<see cref="T:SMRUCC.genomics.Assembly.Uniprot.UniprotFasta"/>
 </summary>
 <param name="title"></param>
 <returns></returns>
 
</member>
<member name="T:SMRUCC.genomics.SequenceModel.FASTA.FastaFile">
 <summary>
 A FASTA file that contains multiple sequence data.
 (一个包含有多条序列数据的FASTA文件)
 </summary>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.#ctor(System.Collections.Generic.IEnumerable{SMRUCC.genomics.SequenceModel.FASTA.FastaSeq})">
 <summary>
 构造函数会自动移除空值对象
 </summary>
 <param name="data"></param>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.FilePath">
 <summary>
 本FASTA数据文件对象的文件位置
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.Distinct">
 <summary>
 Get a new fasta2 object which is been clear the duplicated records in the collection.
 (获取去除集合中的重复的记录新列表，原有列表中数据未被改变)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.Read(System.String,System.Boolean,System.Char)">
 <summary>
 Load the fasta file from the local filesystem.
 </summary>
 <param name="file"></param>
 <param name="strict">当参数为真的时候，目标文件不存在则会抛出错误，反之则会返回一个空文件</param>
 <param name="deli">Delimiter character for tokens in fasta sequence header.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.LoadNucleotideData(System.String,System.Boolean)">
 <summary>
 加载一个FASTA序列文件并检查其中是否全部为核酸序列数据，假若不是，则会将该序列移除
 </summary>
 <param name="path"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.DocParser(System.String[],System.String)">
 <summary>
 当<paramref name="lines"/>参数为空的时候，会返回一个空集合而非返回空值
 </summary>
 <param name="lines"></param>
 <param name="deli"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.ParseDocument(System.String,System.Char[])">
 <summary>
 Try parsing a fasta file object from the text file content <paramref name="doc"></paramref>
 </summary>
 <param name="doc">The file data content in the fasta file, not the path of the fasta file!</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.QueryAny(System.String,Microsoft.VisualBasic.CompareMethod)">
 <summary>

 </summary>
 <param name="KeyWord">A key string that to search in this fasta file.</param>
 <param name="CaseSensitive">For text compaired method that not case sensitive, otherwise in the method od binary than case sensitive.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.Query(System.String,Microsoft.VisualBasic.CompareMethod)">
 <summary>

 </summary>
 <param name="KeyWord">A key string that to search in this fasta file.</param>
 <param name="CaseSensitive">For text compaired method that not case sensitive, otherwise in the method od binary than case sensitive.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.Select(System.Func{SMRUCC.genomics.SequenceModel.FASTA.FastaSeq,System.Boolean})">
 <summary>
 Where Selector
 </summary>
 <param name="prediction"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.Save(System.String,System.Text.Encoding)">
 <summary>
 Save the fasta file into the local filesystem.
 </summary>
 <param name="Path"></param>
 <param name="encoding">
 不同的程序会对这个由要求，例如meme程序在linux系统之中要求序列文件为unicode编码格式而windows版本的meme程序则要求ascii格式
 </param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.Save(System.Int32,System.String,Microsoft.VisualBasic.Text.Encodings)">
 <summary>
 Save the fasta file into the local filesystem.
 </summary>
 <param name="Path"></param>
 <param name="encoding">
 不同的程序会对这个由要求，例如
 + meme程序在linux系统之中要求序列文件为unicode编码格式
 + 而windows版本的meme程序则要求ascii格式，
 + blast+则要求必须为ASCII编码格式的。
 </param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.Save(System.Int32,System.String,System.Text.Encoding)">
 <summary>
 Save the fasta file into the local filesystem.
 </summary>
 <param name="Path"></param>
 <param name="encoding">不同的程序会对这个由要求，例如meme程序在linux系统之中要求序列文件为unicode编码格式而windows版本的meme程序则要求ascii格式</param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.Generate">
 <summary>
 在写入数据到文本文件之前需要将目标对象转换为文本字符串
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.AppendToFile(System.String)">
 <summary>

 </summary>
 <param name="file">
 The target FASTA file that to append this FASTA sequences.(将要拓展这些FASTA序列的目标FASTA文件)
 </param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.Match(System.String,System.Text.RegularExpressions.RegexOptions)">
 <summary>
 使用正则表达式来搜索在序列中含有特定模式的序列对象
 </summary>
 <param name="regxText"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.Count">
 <summary>
 
 </summary>
 <returns></returns>
 <remarks>
 Count和Item属性可以兼容``R#``脚本的索引语法
 </remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.SaveData``1(System.Collections.Generic.IEnumerable{``0},System.String,Microsoft.VisualBasic.Text.Encodings)">
 <summary>
 可以使用这个方法来作为通用的继承与fasta对象的集合的序列的数据保存工作
 </summary>
 <typeparam name="T"></typeparam>
 <param name="data"></param>
 <param name="path"></param>
 <param name="encoding"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.Clone">
 <summary>
 完完全全的按值複製
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaFile.SingleSequence(System.String)">
 <summary>
 文件之中是否只包含有一条序列？
 </summary>
 <param name="path$"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq">
 <summary>
 The FASTA format file of a bimolecular sequence.(Notice that this file is 
 only contains on sequence.)
 FASTA格式的生物分子序列文件。(但是请注意：文件中只包含一条序列的情况，假若需要自定义所生成的FASTA文件的标题的格式，请复写<see cref="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.ToString"></see>方法)
 </summary>
 <remarks></remarks>
 
</member>
<member name="P:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.HaveGaps">
 <summary>
 Does this sequence contains some gaps?(这条序列之中是否包含有空格？)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.innerList">
 <summary>
 方便通过<see cref="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.AddAttribute(System.String)">Add接口</see>向<see cref="P:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.Headers">Attribute列表</see>中添加数据
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.Headers">
 <summary>
 The attribute header of this FASTA file. The fasta header usually have some format which can be parsed by some 
 specific loader and gets some well organized information about the sequence. The format of the header is 
 usually different between each biological database.
 </summary>
 <remarks>
 (这个FASTA文件的属性头，标题的格式通常在不同的数据库之间是具有很大差异的)
 </remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.SequenceData">
 <summary>
 The sequence data that contains in this FASTA file.
 </summary>
 <remarks>
 (包含在这个FASTA文件之中的序列数据)
 </remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.Length">
 <summary>
 Get the sequence length of this Fasta object.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 (获取序列的长度)
 </remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.Title">
 <summary>
 The first character ">" is not included in the title string data.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 (标题之中是不包含有FASTA数据的第一个>字符的)
 </remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.locus_tag">
 <summary>
 split the first token of the headers inside title as the unique reference id of current sequence object.
 </summary>
 <returns></returns>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.DefaultHeaderDelimiter">
 <summary>
 NCBI style header delimiter
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.#ctor(System.String)">
 <summary>
 
 </summary>
 <param name="path">File path of a fasta sequence.</param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.ToString">
 <summary>
 Get the title of this fasta object.(返回FASTA对象的标题，在所返回的值之中不包含有fasta标题之中的第一个字符>)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.GrepTitle(Microsoft.VisualBasic.Scripting.TextGrepMethod)">
 <summary>
 You can using this function to convert the title from current format into another format.(使用这个方法将Fasta序列对象的标题从当前的格式转换为另外一种格式)
 </summary>
 <param name="grep"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.ToUpper">
 <summary>
 Convert the <see cref="P:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.SequenceData"/> to upper case and then return the new created <see cref="T:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq"/>.
 </summary>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.LoadNucleotideData(System.String,System.Boolean)">
 <summary>
 Load the fasta sequence file as a nucleotide sequence from a specific <paramref name="path"></paramref>, the function will returns 
 a null value if the sequence contains some non-nucleotide character.
 (从一条序列的FASTA文件之中加载一条核酸序列，当含有非法字符的时候，会返回空文件)
 </summary>
 <param name="path"></param>
 <param name="strict">当拥有空格数据的时候，假若参数为真，则会返回空文件，反之不会做任何处理</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.Load(System.String,System.Char[])">
 <summary>
 Load a single sequence fasta file object, if the target file path is not exists on the file system or 
 the file format is not correct, then this function will returns a null object value. 
 (这是一个安全的函数：从文件之中加载一条Fasta序列，当目标文件<paramref name="file"></paramref>不存在或者没有序列数据的时候，会返回空值)
 </summary>
 <param name="file">目标序列文件的文件路径</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.ParseFromStream(System.Collections.Generic.IEnumerable{System.String},System.Char[])">
 <summary>
 Parsing a fasta sequence object from a collection of string value.(从字符串数据之中解析出Fasta序列数据)
 </summary>
 <param name="stream"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.TryParse(System.String,System.Char)">
 <summary>
 Try parsing a fasta sequence object from a string chunk value.(尝试从一个字符串之中解析出一个fasta序列数据)
 </summary>
 <param name="s">The string text value which is in the Fasta format.(FASTA格式的序列文本)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.GenerateDocument(System.Int32,System.Boolean,System.Boolean,System.String)">
 <summary>
 Generate a FASTA file data text string.(将这个FASTA对象转换为文件格式以方便进行存储)
 </summary>
 <param name="overrides">是否使用<see cref="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.ToString"></see>方法进行标题的复写，假若为假，则默认使用Attributes属性进行标题的生成，
 因为在继承类之中可能会复写ToString函数以生成不同的标题格式，则可以使用这个参数来决定是否使用复写的格式。</param>
 <returns></returns>
 <remarks></remarks>
 <param name="lineBreak">大于0的数值会换行，小于或者等于0的数值不会换行</param>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.SequenceLineBreak(System.Int32,System.String)">
 <summary>
 break the input sequence string into multiple lines
 </summary>
 <param name="lineBreak"></param>
 <param name="sequence"></param>
 <returns>
 this function will returns empty string always if the given 
 input <paramref name="sequence"/> is empty or nothing.
 </returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.Equals(System.Object)">
 <summary>
 The Fasta sequence equals on both sequence data and title information.(值比较来判断是否相等)
 </summary>
 <param name="obj"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.CopyTo``1(``0@)">
 <summary>
 Copy the value in current fasta object into another fasta object.(将当前的序列数据复制到目标序列数据对象之中)
 </summary>
 <typeparam name="TFasta">Fasta sequence object type.(目标序列数据类型)</typeparam>
 <param name="FastaObject">The target fasta object will be copied to, if the value is null of this fasta 
 object, then this function will generate a new fasta sequence object.(假若值为空，则会创建一个新的序列对象)</param>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.Copy``1">
 <summary>
 Copy the value to a new specific type fasta object.
 </summary>
 <typeparam name="T">Type information of the target fasta object.</typeparam>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.Reverse">
 <summary>
 Reverse the sequence data of the current fasta sequence object and then returns the new created fasta object.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.op_Implicit(SMRUCC.genomics.Assembly.NCBI.GenBank.GBFF.Keywords.FEATURES.Feature)~SMRUCC.genomics.SequenceModel.FASTA.FastaSeq">
 <summary>
 Convert the specific feature data in Genbank database into a fasta sequence.
 </summary>
 <param name="feature">只是从这个特性对象之中得到蛋白质序列</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.Complement(SMRUCC.genomics.SequenceModel.FASTA.FastaSeq)">
 <summary>
 Gets the complement sequence data of a specific fasta sequence.(获取某一条核酸序列的互补序列)
 </summary>
 <param name="FASTA">The target fasta sequence object should be a nucleotide sequence, or this function will returns a null value.
 (目标FASTA对象必须为核酸序列，否则返回空值)</param>
 <remarks></remarks>
 
</member>
<member name="F:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.InvalidComplementSource">
 <summary>
 Data type miss match: the sequence information is a protein sequence, can not get complement sequence.
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.SaveTo(System.String,System.Text.Encoding)">
 <summary>
 Save the current fasta sequence object into the file system.
 </summary>
 <param name="Path"></param>
 <param name="encoding"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.SaveTo(System.Int32,System.String,System.Text.Encoding)">
 <summary>
 Save the current fasta sequence object into the file system. <param name="lineBreak"></param> smaller than 1 will means no line break in the saved fasta sequence.
 </summary>
 <param name="Path"></param>
 <param name="encoding"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.SaveAsOneLine(System.String,System.Text.Encoding)">
 <summary>
 过长的序列不每隔60个字符进行一次换行，而是直接使用一行数据进行存储
 </summary>
 <param name="Path"></param>
 <param name="encoding"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq.Clone">
 <summary>
 Copy data to a new FASTA object.(将本对象的数据拷贝至一个新的FASTA序列对象中)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.FASTA.KSeq">
 <summary>
 
 </summary>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.FASTA.StreamIterator">
 <summary>
 读取超大型的fasta文件所需要的一个数据对象
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.StreamIterator.#ctor(System.String)">
 <summary>
 从指定的文件之中构建一个读取超大型的fasta文件所需要的一个数据对象
 </summary>
 <param name="path"></param>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.StreamIterator.ReadStream">
 <summary>
 Read all sequence from the fasta file.
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.StreamIterator.__loops(System.Collections.Generic.List{System.String})">
 <summary>
 Loops on each block of data
 </summary>
 <param name="stream"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.StreamIterator.Split(System.Int32)">
 <summary>
 子集里面的序列元素的数目
 </summary>
 <param name="size"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.FASTA.StreamIterator.DefaultSuffix">
 <summary>
 默认的Fasta文件拓展名列表
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.StreamIterator.SeqSource(System.String,System.String[],System.Boolean)">
 <summary>
 全部都是使用<see cref="T:SMRUCC.genomics.SequenceModel.FASTA.StreamIterator"/>对象来进行读取的
 </summary>
 <param name="handle">File path or directory.(函数会自动检测所输入的路径的类型为文件夹或者是文件)</param>
 <param name="ext">
 文件搜索的文件名匹配模式，如果<paramref name="handle"/>是一个文件夹的话
 </param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.FASTA.Reflection.FastaSequenceEntry">
 <summary>
 自定義屬性用於指示哪一個屬性值為目標對象的序列數據
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.FASTA.Reflection.FastaAttributeItem.Precursor">
 <summary>
 當Format屬性值不為空的時候，本參數失效
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.FASTA.Reflection.FastaObject">
 <summary>
 用於類型定義上的FASTA序列對象的標題格式
 </summary>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.FASTA.Reflection.FastaExportMethods">
 <summary>
 對象模塊將數據庫中的一條記錄轉換為一條FASTA序列對象
 </summary>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.Reflection.FastaExportMethods.Complement(SMRUCC.genomics.SequenceModel.FASTA.FastaFile)">
 <summary>
 将某一个FASTA序列集合中的序列进行互补操作，对于蛋白质序列，则返回空值
 </summary>
 <param name="nt">这里应该输入的是核酸序列,因为只有核酸序列才可以进行互补,蛋白序列则不行</param>
 <returns>返回互补链序列集合</returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.Reflection.FastaExportMethods.Reverse(SMRUCC.genomics.SequenceModel.FASTA.FastaFile)">
 <summary>
 将序列首尾反转
 </summary>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.Reflection.FastaExportMethods.Merge(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
 <summary>
 Merge the fasta sequence file from a file list.
 </summary>
 <param name="list"></param>
 <param name="Trim"></param>
 <param name="rawTitle"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.Reflection.FastaExportMethods.Merge(System.String,System.Boolean,System.Boolean)">
 <summary>
 Only merge fasta files in the top level directory.(这个函数不会返回空值)
 </summary>
 <param name="inDIR"></param>
 <param name="trim"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.Reflection.FastaExportMethods.Merge(System.String,System.String,System.Boolean,System.Boolean)">
 <summary>
 
 </summary>
 <param name="inDIR"></param>
 <param name="ext"></param>
 <param name="trim"></param>
 <param name="rawTitle">是否保留有原来的标题</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.Reflection.FastaExportMethods.FastaCorrupted(SMRUCC.genomics.SequenceModel.FASTA.FastaSeq)">
 <summary>
 有些从KEGG上面下载下来的数据会因为解析的问题出现错误，在这里判断是否有这种错误
 </summary>
 <param name="fa"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.FASTA.Reflection.FastaExportMethods.FastaTrimCorrupt(SMRUCC.genomics.SequenceModel.FASTA.FastaSeq)">
 <summary>
 这个函数是为了修正早期的KEGG序列数据下载工具的一些html解析错误，第一个字符肯定是M
 </summary>
 <param name="fa"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.ISequenceModel">
 <summary>
 The biological sequence molecular model.(蛋白质序列，核酸序列都可以使用本对象来表示)
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.ISequenceModel.SequenceData">
 <summary>
 Sequence data in a string type.(字符串类型的序列数据)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.ISequenceModel.IsProtSource">
 <summary>
 This sequence is a protein type sequence?(判断这条序列是否为蛋白质序列)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.ISequenceModel.Length">
 <summary>
 The <see cref="P:SMRUCC.genomics.SequenceModel.ISequenceModel.SequenceData"/> string length.
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.ISequenceModel.GetCompositionVector(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel,System.Collections.Generic.IReadOnlyCollection{System.Char})">
 <summary>
 Get the composition vector for a sequence model using a specific composition description.
 </summary>
 <param name="seq"></param>
 <param name="compositions">
 This always should be the constant string of <see cref="F:SMRUCC.genomics.SequenceModel.TypeExtensions.AA_CHARS_ALL">amino acid
 </see>
 or <see cref="F:SMRUCC.genomics.SequenceModel.TypeExtensions.NA_CHARS_ALL">nucleotide</see>.</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.ISequenceModel.GetCompositionVector(System.String,System.Collections.Generic.IReadOnlyCollection{System.Char})">
 <summary>
 Get the composition vector for a sequence model using a specific composition description.
 </summary>
 <param name="seq"></param>
 <param name="compositions">
 This always should be the constant string of <see cref="F:SMRUCC.genomics.SequenceModel.TypeExtensions.AA_CHARS_ALL">amino acid
 </see>
 or <see cref="F:SMRUCC.genomics.SequenceModel.TypeExtensions.NA_CHARS_ALL">nucleotide</see>.</param>
 <returns>
 the generated vector size is always equals to the char set in the <paramref name="compositions"/>
 missing value from the input char set will be set to ZERO.
 </returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.MolecularWeightCalculator">
 <summary>
 核酸链或者多肽链分子的相对分子质量的计算工具
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.MolecularWeightCalculator.dAMP">
 <summary>
 C10H12N5O6P + H2O
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.MolecularWeightCalculator.dTMP">
 <summary>
 C10H13N2O8P + H2O
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.MolecularWeightCalculator.dCMP">
 <summary>
 C9H12N3O7P + H2O
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.MolecularWeightCalculator.dGMP">
 <summary>
 C10H12N5O7P + H2O
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.MolecularWeightCalculator.AMP">
 <summary>
 C10H12N5O7P
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.MolecularWeightCalculator.UMP">
 <summary>
 C9H11N2O9P
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.MolecularWeightCalculator.CMP">
 <summary>
 C9H12N3O8P
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.MolecularWeightCalculator.GMP">
 <summary>
 C10H12N5O8P
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.MolecularWeightCalculator.CalcMW_Polypeptide(SMRUCC.genomics.SequenceModel.ISequenceModel)">
 <summary>
 计算蛋白质序列的相对分子质量
 </summary>
 <param name="seq"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.MolecularWeightCalculator.CalcMW_Nucleotides(SMRUCC.genomics.SequenceModel.ISequenceModel,System.Boolean)">
 <summary>
 计算核酸序列的相对分子质量
 </summary>
 <param name="seq"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Assembly.Replace(System.Int32,System.Char)">
 <summary>
 
 </summary>
 <param name="location">以1为底的</param>
 <param name="base"></param>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Assembly.ToString">
 <summary>
 
 </summary>
 <returns></returns>
 <remarks>
 不可以trim序列的起始，否则会乱码
 </remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Extensions.LevenshteinDistance(System.String,System.String)">
 <summary>
 Compute Levenshtein distance  Michael Gilleland, Merriam Park Software.(http://www.merriampark.com/ld.htm)
 </summary>
 <param name="s"></param>
 <param name="t"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Extensions.LevenshteinDistance2(System.String,System.String)">
 <summary>
 Chas Emerick.(http://www.merriampark.com/ldjava.htm)
 </summary>
 <param name="s"></param>
 <param name="t"></param>
 <returns></returns>
 <remarks>
 The difference between this impl. and the previous is that, rather
 than creating and retaining a matrix of size s.length()+1 by t.length()+1,
 we maintain two single-dimensional arrays of length s.length()+1.  The first, d,
 is the 'current working' distance array that maintains the newest distance cost
 counts as we iterate through the characters of String s.  Each time we increment
 the index of String t we are comparing, d is copied to p, the second int[].  Doing so
 allows us to retain the previous cost counts as required by the algorithm (taking
 the minimum of the cost count to the left, up one, and diagonally up and to the left
 of the current cost count being calculated).  (Note that the arrays aren't really
 copied anymore, just switched...this is clearly much better than cloning an array
 or doing a System.arraycopy() each time  through the outer loop.)
 
 Effectively, the difference between the two implementations is this one does not
 cause an out of memory condition when calculating the LD over two very large strings.
 </remarks>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Extensions.SegmentAssembler(System.Collections.Generic.IEnumerable{SMRUCC.genomics.SequenceModel.NucleotideModels.SimpleSegment})">
 <summary>
 
 </summary>
 <param name="source"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.mRNA.Putative_mRNA(System.String,System.Int32@,System.Int32@,System.String@)">
 <summary>
 尝试从一段给定的核酸序列之中寻找出可能的最长的ORF阅读框
 </summary>
 <param name="Nt">请注意这个函数总是从左往右进行计算的，所以请确保这个参数是正义链的或者反义链的已经反向互补了</param>
 <param name="ATG"></param>
 <param name="TGA"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcidStaticsProperty">
 <summary>
 NucleicAcid sequence property calculator
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcidStaticsProperty.GCData(System.Collections.Generic.IEnumerable{SMRUCC.genomics.SequenceModel.FASTA.FastaSeq},System.Int32,System.Int32,SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcidStaticsProperty.NtProperty)">
 <summary>
 批量计算出GCSkew或者GC%
 </summary>
 <param name="nts"></param>
 <param name="winSize"></param>
 <param name="steps"></param>
 <param name="method"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcidStaticsProperty.GC_Content(System.Collections.Generic.IEnumerable{SMRUCC.genomics.SequenceModel.NucleotideModels.DNA})">
 <summary>
 Calculate the GC content of the target sequence data.
 </summary>
 <param name="seq"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcidStaticsProperty.GetCompositionVector(System.Char[],System.Double@,System.Double@,System.Double@,System.Double@)">
 <summary>
 A, T, G, C
 </summary>
 <param name="seq"></param>
 <param name="pA"></param>
 <param name="pT"></param>
 <param name="pG"></param>
 <param name="pC"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcidStaticsProperty.GetCompositionVector(System.Char[])">
 <summary>
 A, T, G, C
 </summary>
 <param name="Sequence"></param>
 <returns>A, T, G, C</returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcidStaticsProperty.GCContent(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel)">
 <summary>
 Calculate the GC content of the target sequence data.
 </summary>
 <param name="Sequence">序列数据大小写不敏感</param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcidStaticsProperty.GCContent(System.String)">
 <summary>
 Calculate the GC content of the target sequence data.
 </summary>
 <param name="NT">序列数据大小写不敏感</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcidStaticsProperty.Tm(System.String)">
 <summary>
 The melting temperature of P1 is Tm(P1), which is a reference temperature for a primer to perform annealing and known as the Wallace formula
 </summary>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcidStaticsProperty.GCContent(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel,System.Int32,System.Int32,System.Boolean)">
 <summary>
 Calculate the GC content of the target sequence data.
 </summary>
 <param name="SequenceModel"></param>
 <param name="SlideWindowSize"></param>
 <param name="Steps"></param>
 <param name="Circular"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcidStaticsProperty.__contentCommon(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel,System.Int32,System.Int32,System.Boolean,System.Char[])">
 <summary>
 
 </summary>
 <param name="SequenceModel"></param>
 <param name="SlideWindowSize"></param>
 <param name="Steps"></param>
 <param name="Circular"></param>
 <param name="base">必须是大写的字符</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcidStaticsProperty.basePercent(System.String,System.Int32,System.Char[])">
 <summary>
 Get content percentage value of the given nucleotide bases.
 </summary>
 <param name="segment"></param>
 <param name="winSize"></param>
 <param name="base"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcidStaticsProperty.GCSkew(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel,System.Int32,System.Int32,System.Boolean)">
 <summary>
 Calculation the GC skew of a specific nucleotide acid sequence.
 (对核酸链分子计算GC偏移量，请注意，当某一个滑窗区段内的GC是相等的话，则会出现正无穷)
 </summary>
 <param name="sequence">Target sequence object should be a nucleotide acid sequence.(目标对象必须为核酸链分子)</param>
 <param name="isCircular"></param>
 <returns>返回的矩阵是每一个核苷酸碱基上面的GC偏移量</returns>
 <remarks></remarks>
 
</member>
<member name="T:SMRUCC.genomics.SequenceModel.NucleotideModels.Contig">
 <summary>
 这个基础的模型对象只有在基因组上面的位置信息
 </summary>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.Contig.MappingLocation(System.Boolean)">
 <summary>
 在参考基因组上面的Mapping得到的位置，假若需要修改位置，假若害怕影响到原有的数据的话，则请复写这个属性然后使用复制的方法得到新的位点数据
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Contig.#ctor(SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation)">
 <summary>
 这个构造函数已经使用<see cref="M:SMRUCC.genomics.ComponentModel.Loci.NucleotideLocation.Copy"/>函数从数据源<paramref name="mappinglocation"/>进行复制
 </summary>
 <param name="MappingLocation"></param>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Contig.GetRelatedUpstream(SMRUCC.genomics.Assembly.NCBI.GenBank.TabularFormat.PTT,System.Int32)">
 <summary>
 会同时将上游以及上游重叠的基因都找出来
 </summary>
 <param name="PTT"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.NucleotideModels.Conversion">
 <summary>
 转换包含有普通类型的基本碱基字符，还包括有简并碱基字符
 </summary>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.Conversion.DegenerateBases">
 <summary>
 简并碱基以及与之所对应的DNA碱基列表
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.Conversion.NucleotideConvert">
 <summary>
 大小写不敏感
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Conversion.CharEnums(System.Char)">
 <summary>
 大小写不敏感
 </summary>
 <param name="base"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.Conversion.NucleotideAsChar">
 <summary>

 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Conversion.ToChar(SMRUCC.genomics.SequenceModel.NucleotideModels.DNA)">
 <summary>
 ``<see cref="T:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA"/> -> char``.(转换出来的全部都是大写字母)
 </summary>
 <param name="base"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.NucleotideModels.DegenerateBasesExtensions">
 <summary>
 ###### 简并碱基
 
 简并碱基是根据密码子的兼并性,常用一个符号代替某两个或者更多碱基。
 根据密码子的兼并性,常用一个符号代替某两个或者更多碱基。例如，编译丙氨酸的
 可以有4个密码子``GCU\GCC\GCA\GCG``,这时生物学上为了方便，用字母N指代UCAG
 四个碱基，故说编译丙氨酸的密码子是GCN，其中N就是简并碱基。
 
 通常生物学上根据蛋白质序列设计引物进行对应DNA克隆时，由于密码子的兼并性，
 对设计的引物上的某些碱基就会用简并碱基标示，在合成时各种碱基等量分配，
 也就是说，合成的简并引物是很多种引物的集合，其区别就在于简并碱基。
 
 简并度：简并引物的种类数，等于该简并引物内所有简并碱基的简并个数之积，
 即共有多少种不同的引物，其中只有一条是真正可以和模板配对的。
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.DegenerateBasesExtensions.CountWithDegenerateBases(System.String,System.Char)">
 <summary>
 会将简并碱基也进行计算
 </summary>
 <param name="nt$"></param>
 <param name="base">just **ATGC**</param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.DegenerateBasesExtensions.Equals(SMRUCC.genomics.SequenceModel.NucleotideModels.DNA[],SMRUCC.genomics.SequenceModel.NucleotideModels.DNA[])">
 <summary>
 Elements sequence equals.
 </summary>
 <param name="vx"></param>
 <param name="vy"></param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA">
 <summary>
 Deoxyribonucleotides NT base which consist of the DNA sequence.
 (枚举所有的脱氧核糖核苷酸)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.NA">
 <summary>
 Gaps/Rare bases(空格或者其他的稀有碱基)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.dAMP">
 <summary>
 Adenine, paired with <see cref="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.dTMP"/>(A, 腺嘌呤)
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.dGMP">
 <summary>
 Guanine, paired with <see cref="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.dCMP"/>(G, 鸟嘌呤)
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.dCMP">
 <summary>
 Cytosine, paired with <see cref="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.dGMP"/>(C, 胞嘧啶)
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.dTMP">
 <summary>
 Thymine, paired with <see cref="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.dAMP"/>(T, 胸腺嘧啶)
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.R">
 <summary>
 degenerate bases: A/G
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.Y">
 <summary>
 degenerate bases: C/T
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.M">
 <summary>
 degenerate bases: A/C
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.K">
 <summary>
 degenerate bases: G/T
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.S">
 <summary>
 degenerate bases: G/C
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.W">
 <summary>
 degenerate bases: A/T
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.H">
 <summary>
 degenerate bases: A/T/C
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.B">
 <summary>
 degenerate bases: G/T/C
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.V">
 <summary>
 degenerate bases: G/A/C
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.D">
 <summary>
 degenerate bases: G/A/T
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.DNA.N">
 <summary>
 degenerate bases: A/T/C/G
 </summary>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid">
 <summary>
 The nucleotide sequence object.(核酸序列对象)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid._innerSeqCache">
 <summary>
 Cache data for maintaining the high performance on sequence operation.
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.ToArray">
 <summary>
 序列的所以的碱基枚举的数组，可以看作为一个完整的序列
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.Counts(SMRUCC.genomics.SequenceModel.NucleotideModels.DNA[],SMRUCC.genomics.SequenceModel.NucleotideModels.DNA)">
 <summary>
 计算某一种碱基在序列之中的出现频率
 </summary>
 <param name="base">只允许``ATGC``</param>
 <returns>因为可能还存在简并碱基字符，所以在这里返回一个小数</returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.UserTag">
 <summary>
 用户定义的标签数据，有时候用于在不同的序列之间唯一的标记当前的这条序列
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.SequenceData">
 <summary>
 字符串形式的序列数据
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.Tm">
 <summary>
 The melting temperature of P1 is Tm(P1), which is a reference temperature for a primer to perform annealing and known as the Wallace formula
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.GC">
 <summary>
 Calculate the GC content of the current sequence data.
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.#ctor(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel)">
 <summary>
 Construct the nucleotide sequence from a nt sequence model interface <see cref="T:SMRUCC.genomics.SequenceModel.IPolymerSequenceModel"/>
 </summary>
 <param name="SequenceData"></param>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.#ctor(System.String)">
 <summary>
 Construct the nucleotide sequence from a ATGC based sequence string.
 (从一个序列字符串之中创建一条核酸链分子对象)
 </summary>
 <param name="SequenceData">This sequence data can be user input from the interface or sequence data from the <see cref="T:SMRUCC.genomics.SequenceModel.FASTA.FastaSeq"/> object.</param>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.#ctor(SMRUCC.genomics.SequenceModel.ISequenceModel)">
 <summary>
 Construct the nucleotide seuqnece form a nt sequence model object. The nt sequence object should inherits from the base class <see cref="T:SMRUCC.genomics.SequenceModel.ISequenceModel"/>
 </summary>
 <param name="SequenceData"></param>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.#ctor(SMRUCC.genomics.SequenceModel.FASTA.FastaSeq,System.Boolean)">
 <summary>
 
 </summary>
 <param name="nt"></param>
 <param name="strict">默认参数表示当核酸序列之中存在非法字符的时候会直接抛出错误</param>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.convertSequence(System.String,System.Boolean)">
 <summary>
 检查序列的可用性
 </summary>
 <param name="seq"></param>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.RemoveInvalids(System.String)">
 <summary>
 Removes the invalids characters in the nt sequence. Invalids source is comes from <see cref="F:SMRUCC.genomics.SequenceModel.TypeExtensions.AA_CHARS_ALL"/>
 </summary>
 <param name="nt">Case insensitive.</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.Split(System.Int32)">
 <summary>
 分割得到的小片段的长度
 </summary>
 <param name="segmentLen"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.GetSegment(System.Int64,System.Int64)">
 <summary>
 <paramref name="Start"></paramref>和<paramref name="End"></paramref>的值都是数组的下标，在本函数之中已经自动为这两个参数+1了
 </summary>
 <param name="Start">位置的左端的开始位置</param>
 <param name="End">右端的结束位置</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.ReadSegment(System.Int32,System.Int32)">
 <summary>
 <paramref name="Left"></paramref>的值是数组的下标，在本函数之中已经自动为这个参数+1了
 </summary>
 <param name="Length">片段的长度</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid.Complement(System.String)">
 <summary>
 Gets the complement sequence of a nucleotide sequence.
 (获取某一条核酸序列的互补序列，但是新得到的序列并不会首尾反转，
 请注意，这个函数所输入的DNA序列字符串必须是大写字母的)
 </summary>
 <param name="DNAseq">
 The target dna nucleotide sequence to complement.(必须全部都是大写字母)
 </param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.NucleotideModels.SegmentObject">
 <summary>
 片段数据，包含有在目标核酸链之上的位置信息以及用户给这个片段的自定义的标签信息
 </summary>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.SegmentObject.Complement">
 <summary>
 This sequence segment object site is on the complement strand?
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.SegmentObject.SequenceData">
 <summary>
 The sequence data of this site.
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.SegmentObject.Title">
 <summary>
 User tag data
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.SegmentObject.Description">
 <summary>
 User data
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.SegmentObject.GetFasta(System.String)">
 <summary>
 将当前的核酸片段数据对象转换为FASTA对象
 </summary>
 <param name="title">If this value is not presents, then the function will using the location info as default.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.SegmentObject.GC_Content">
 <summary>
 获取当前核酸片段的GC含量值，假设已经全部转换为大写字母
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.SegmentObject.Get_GCContent(System.String)">
 <summary>
 获取目标核酸片段的GC含量值，假设已经全部转换为大写字母
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.NucleotideModels.SimpleSegment">
 <summary>
 没有更多的复杂的继承或者接口实现，只是最简单序列片段对象
 </summary>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.SimpleSegment.ID">
 <summary>
 Probably synonym, locus_tag data
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.SimpleSegment.SequenceData">
 <summary>
 当前的这个位点的序列数据
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.SimpleSegment.Complement">
 <summary>
 The complements sequence of data <see cref="P:SMRUCC.genomics.SequenceModel.NucleotideModels.SimpleSegment.SequenceData"/>
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.SimpleSegment.Length">
 <summary>
 获取得到当前的序列片段的长度，这个序列片段的长度值应该是和<see cref="P:Microsoft.VisualBasic.ComponentModel.Ranges.Model.IntRange.Interval"/>值相等的
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.SimpleSegment.op_Explicit(SMRUCC.genomics.SequenceModel.NucleotideModels.SimpleSegment)~System.String">
 <summary>
 将当前的这个<see cref="T:SMRUCC.genomics.SequenceModel.IPolymerSequenceModel"/>接口对象的序列信息取出来
 </summary>
 <param name="segment"></param>
 <returns></returns>
 
</member>
<member name="T:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.Codon">
 <summary>
 密码子对象
 </summary>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.Codon.X">
 <summary>
 密码子中的第一个碱基
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.Codon.Y">
 <summary>
 密码子中的第二个碱基
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.Codon.Z">
 <summary>
 密码子中的第三个碱基
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.Codon.TranslHashCode">
 <summary>
 第一个碱基*1000+第二个碱基*100+第三个碱基
 </summary>
 <returns>哈希值</returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.Codon.CodonValue">
 <summary>
 返回三联体密码子的核酸片段，以三联体密码子字符串的形式显示当前的这个密码子内的内容
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.Codon.IsStopCodon">
 <summary>
 是否为终止密码子
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.Codon.#ctor">
 <summary>
 非翻译用途的
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.Codon.#ctor(System.String[])">
 <summary>
 翻译用途的
 </summary>
 <param name="tokens"></param>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.Codon.GetHashCode(SMRUCC.genomics.SequenceModel.NucleotideModels.DNA,SMRUCC.genomics.SequenceModel.NucleotideModels.DNA,SMRUCC.genomics.SequenceModel.NucleotideModels.DNA)">
 <param name="X">密码子中的第一个碱基</param>
 <param name="Y">密码子中的第二个碱基</param>
 <param name="Z">密码子中的第三个碱基</param>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.Codon.CreateHashTable">
 <summary>
 生成非翻译用途的密码子列表
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes">
 <summary>
 http://www.ncbi.nlm.nih.gov/Taxonomy/taxonomyhome.html/index.cgi?chapter=tgencodes#SG25
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.StandardCode">
 <summary>
 1. The Standard Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.VertebrateMitochondrialCode">
 <summary>
 2. The Vertebrate Mitochondrial Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.YeastMitochondrialCode">
 <summary>
 3. The Yeast Mitochondrial Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.MoldProtozoanAndCoelenterateMitochondrialCodeAndMycoplasmaSpiroplasmaCode">
 <summary>
 4. The Mold, Protozoan, and Coelenterate Mitochondrial Code and the Mycoplasma/Spiroplasma Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.InvertebrateMitochondrialCode">
 <summary>
 5. The Invertebrate Mitochondrial Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.CiliateDasycladaceanAndHexamitaNuclearCode">
 <summary>
 6. The Ciliate, Dasycladacean and Hexamita Nuclear Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.EchinodermAndFlatwormMitochondrialCode">
 <summary>
 9. The Echinoderm and Flatworm Mitochondrial Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.EuplotidNuclearCode">
 <summary>
 10. The Euplotid Nuclear Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.BacterialArchaealAndPlantPlastidCode">
 <summary>
 11. The Bacterial, Archaeal and Plant Plastid Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.AlternativeYeastNuclearCode">
 <summary>
 12. The Alternative Yeast Nuclear Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.AscidianMitochondrialCode">
 <summary>
 13. The Ascidian Mitochondrial Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.AlternativeFlatwormMitochondrialCode">
 <summary>
 14. The Alternative Flatworm Mitochondrial Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.ChlorophyceanMitochondrialCode">
 <summary>
 16. Chlorophycean Mitochondrial Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.TrematodeMitochondrialCode">
 <summary>
 21. Trematode Mitochondrial Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.ScenedesmusObliquusMitochondrialCode">
 <summary>
 22. Scenedesmus obliquus Mitochondrial Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.ThraustochytriumMitochondrialCode">
 <summary>
 23. Thraustochytrium Mitochondrial Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.PterobranchiaMitochondrialCode">
 <summary>
 24. Pterobranchia Mitochondrial Code
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes.CandidateDivisionSR1AndGracilibacteriaCode">
 <summary>
 25. Candidate Division SR1 and Gracilibacteria Code
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.NtHelper.DoCheckNtDirection(SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslTable,System.String,System.String[]@)">
 <summary>
 Check nt sequence direction by start and stop codon
 </summary>
 <param name="sequence"></param>
 <returns></returns>
 
</member>
<member name="T:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslationTable">
 <summary>
 transl_table=1 标准密码子表
 </summary>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslationTable.IsStopCoden(System.Int32,SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes)">
 <summary>
 判断某一个密码子是否为终止密码子
 </summary>
 <param name="hash">该密码子的哈希值</param>
 <returns>这个密码子是否为一个终止密码</returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslationTable.Translate(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel)">
 <summary>
 自动尝试使用不同的密码表进行序列的翻译
 取最长的翻译结果
 </summary>
 <param name="nt"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslationTable.Translate(System.String,SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes,System.Boolean)">
 <summary>
 将一条核酸链翻译为蛋白质序列
 </summary>
 <param name="NucleicAcid"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslationTable.ToCodonCollection(SMRUCC.genomics.SequenceModel.NucleotideModels.NucleicAcid,SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes)">
 <summary>
 没有终止密码子
 </summary>
 <param name="nt"></param>
 <returns></returns>
 <remarks></remarks>
 
</member>
<member name="T:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslTable">
 <summary>
 Compiled by Andrzej (Anjay) Elzanowski and Jim Ostell at National Center for Biotechnology Information (NCBI), Bethesda, Maryland, U.S.A.
 
 NCBI takes great care To ensure that the translation For Each coding sequence (CDS) present In GenBank records Is correct. 
 Central To this effort Is careful checking On the taxonomy Of Each record And assignment Of the correct genetic code 
 (shown As a /transl_table qualifier On the CDS In the flat files) For Each organism And record. This page summarizes And references this work.
 
 The synopsis presented below Is based primarily On the reviews by Osawa et al. (1992) And Jukes And Osawa (1993). 
 Listed In square brackets [] (under Systematic Range) are tentative assignments Of a particular code based On 
 sequence homology And/Or phylogenetic relationships.
 
 The print-form ASN.1 version Of this document, which includes all the genetic codes outlined below, Is also available here. 
 Detailed information On codon usage can be found at the Codon Usage Database.
 
 GenBank format by historical convention displays mRNA sequences Using the DNA alphabet. 
 Thus, For the convenience Of people reading GenBank records, the genetic code tables shown here use T instead Of U.
 
 The following genetic codes are described here:
 
 1. The Standard Code
 2. The Vertebrate Mitochondrial Code
 3. The Yeast Mitochondrial Code
 4. The Mold, Protozoan, And Coelenterate Mitochondrial Code And the Mycoplasma/Spiroplasma Code
 5. The Invertebrate Mitochondrial Code
 6. The Ciliate, Dasycladacean And Hexamita Nuclear Code
 9. The Echinoderm And Flatworm Mitochondrial Code
 10. The Euplotid Nuclear Code
 11. The Bacterial, Archaeal And Plant Plastid Code
 12. The Alternative Yeast Nuclear Code
 13. The Ascidian Mitochondrial Code
 14. The Alternative Flatworm Mitochondrial Code
 16. Chlorophycean Mitochondrial Code
 21. Trematode Mitochondrial Code
 22. Scenedesmus obliquus Mitochondrial Code
 23. Thraustochytrium Mitochondrial Code
 24. Pterobranchia Mitochondrial Code
 25. Candidate Division SR1 And Gracilibacteria Code
 
 > http://www.ncbi.nlm.nih.gov/Taxonomy/taxonomyhome.html/index.cgi?chapter=tgencodes#SG25
 </summary>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslTable.CodenTable">
 <summary>
 遗传密码子表（哈希表）
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslTable.TranslTable">
 <summary>
 transl_table=<see cref="P:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslTable.TranslTable"/>
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslTable.IsStopCoden(System.Int32)">
 <summary>
 判断某一个密码子是否为终止密码子
 </summary>
 <param name="hashCode">该密码子的哈希值</param>
 <returns>这个密码子是否为一个终止密码</returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslTable.Translate(System.String,System.Boolean,System.Boolean,System.String[]@)">
 <summary>
 将一条核酸链翻译为蛋白质序列
 </summary>
 <param name="nucleicAcid"></param>
 <param name="bypassStop">强制程序跳过终止密码子</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslTable.IsStopCodon(System.String)">
 <summary>
 三个字母所表示的三联体密码子
 </summary>
 <param name="coden"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslTable.IsInitCoden(System.String)">
 <summary>
 Case insensitive.
 三个字母所表示的三联体密码子
 </summary>
 <param name="coden"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslTable.doTrimOfForce(System.String)">
 <summary>
 将尾巴的终止密码子字符进行删除
 </summary>
 <param name="prot"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslTable.ToCodonCollection(System.Collections.Generic.IEnumerable{SMRUCC.genomics.SequenceModel.NucleotideModels.DNA})">
 <summary>
 没有终止密码子，非翻译用途的
 </summary>
 <param name="nt"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslTable.GetTable(SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.GeneticCodes)">
 <summary>
 Available index value was described at http://www.ncbi.nlm.nih.gov/Taxonomy/taxonomyhome.html/index.cgi?chapter=tgencodes#SG25
 </summary>
 <param name="index"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslTable.ParseTable(System.String)">
 <summary>
 
 </summary>
 <param name="hashTable">the text data of the translTable</param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.TranslTableTextReader.doInitProfiles(System.Collections.Generic.Dictionary{SMRUCC.genomics.SequenceModel.NucleotideModels.Translation.Codon,SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid},System.Int32[]@,System.Int32[]@,System.Collections.Generic.IReadOnlyDictionary{System.Int32,SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid}@)">
 <summary>
 生成起始密码子和终止密码子
 </summary>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.Patterns.Clustal.Clustal">
 <summary>
 Fasta格式的多序列比对的结果
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Patterns.Clustal.Clustal.__initCommon">
 <summary>
 计算每一个位点上面的保守性
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Patterns.Clustal.Clustal.Mid(System.Int32,System.Int32)">
 <summary>
 
 </summary>
 <param name="left">左端到位点的距离</param>
 <param name="right">右端到位点的距离</param>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.Patterns.Clustal.SR">
 <summary>
 Semi-Residue(半残基，出现概率不是百分之百的)
 </summary>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.Patterns.Clustal.SR.Index">
 <summary>
 在多重比对之中的序列上面的位置
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.Patterns.Clustal.SR.Residue">
 <summary>
 残基符号
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.Patterns.Clustal.SR.Frq">
 <summary>
 出现的频率
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.Patterns.Clustal.SR.Block">
 <summary>
 区块的序列号
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Patterns.Clustal.SR.FromAlign(System.Collections.Generic.IEnumerable{SMRUCC.genomics.SequenceModel.FASTA.FastaSeq},System.Double,System.Int32)">
 <summary>
 
 </summary>
 <param name="aln"></param>
 <param name="block">生成类似于domain的参数所需求的，假若这个值太低，则计算MPAlignment的时候会得分很低，除非特别应用请不要修改这个数值</param>
 <param name="levels"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Patterns.Clustal.SR.__allocBlock(SMRUCC.genomics.SequenceModel.Patterns.Clustal.SR[][],System.Double)">
 <summary>
 做了一次矩阵转置
 </summary>
 <param name="source"></param>
 <param name="cutoff"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Patterns.Clustal.SR.__getSite(System.Char[][],System.Int32,System.Int32,System.Int32)">
 <summary>
 返回前10的位点
 位点不足的话会使用最后一个位点进行补充
 
 这里是构建特征序列的核心算法部分
 </summary>
 <param name="chMAT">频率矩阵</param>
 <param name="index"></param>
 <param name="width"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.Patterns.SimpleSite.IsConserved">
 <summary>
 Is this residue conserved in this motif?
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.Patterns.PatternModel">
 <summary>
 一个经过多序列比对对齐操作的序列集合之中所得到的残基的出现频率模型，可以用这个模型来计算突变率以及SNP位点
 </summary>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Patterns.PatternModel.GetVariation(SMRUCC.genomics.SequenceModel.FASTA.FastaSeq,System.Double)">
 <summary>
 通过比较参考序列得到每一个残基上面的突变率
 </summary>
 <param name="ref">序列的长度必须要和<see cref="P:SMRUCC.genomics.SequenceModel.Patterns.PatternModel.Residues"/>的长度相等</param>
 <param name="cutoff"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Patterns.PatternsAPI.Frequency(System.String,System.Int32)">
 <summary>
 简单的统计残基的出现频率
 </summary>
 <param name="Fasta"></param>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Patterns.PatternsAPI.Frequency(SMRUCC.genomics.SequenceModel.FASTA.FastaFile)">
 <summary>
 返回来的数据之中的残基的字符是大写的
 </summary>
 <param name="Fasta"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Patterns.PatternsAPI.Frequency(System.Collections.Generic.IEnumerable{SMRUCC.genomics.SequenceModel.FASTA.FastaSeq})">
 <summary>
 Simple function for statics the alphabet frequency in the fasta source. 
 The returns matrix, alphabet key char is Upper case.
 (返回来的数据之中的残基的字符是大写的)
 </summary>
 <param name="source">
 Fasta sequence source, and all of the fasta sequence 
 in this source must in the same length.
 </param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Patterns.PatternsAPI.NTVariations(SMRUCC.genomics.SequenceModel.FASTA.FastaFile,System.Int32,System.Double)">
 <summary>
 The conservation percentage (%) Is defined as the number of genomes with the same letter on 
 amultiple sequence alignment normalized to range from 0 to 100% for each site along the 
 chromosome of a specific index genome.
 </summary>
 <returns></returns>
 <param name="index">参考序列在所输入的fasta序列之中的位置，默认使用第一条序列作为参考序列</param>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Patterns.PatternsAPI.NTVariations(SMRUCC.genomics.SequenceModel.FASTA.FastaSeq,SMRUCC.genomics.SequenceModel.FASTA.FastaFile,System.Double)">
 <summary>
 The conservation percentage (%) Is defined as the number of 
 genomes with the same letter on amultiple sequence alignment 
 normalized to range from 0 to 100% for each site along the 
 chromosome of a specific index genome.
 </summary>
 <param name="ref"></param>
 <param name="Fasta"></param>
 <param name="cutoff"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Patterns.PatternsAPI.__variation(System.Char,System.Int32,System.Double,SMRUCC.genomics.SequenceModel.Patterns.PatternModel)">
 <summary>
 这个是参考的碱基位点
 </summary>
 <param name="ch"></param>
 <param name="index"></param>
 <param name="cutoff"></param>
 <param name="fr"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Patterns.PatternsAPI.__frequency(System.Collections.Generic.IEnumerable{SMRUCC.genomics.SequenceModel.FASTA.FastaSeq},System.Int32,System.Char,System.Int32)">
 <summary>
 Statics of the occurence frequency for the specific alphabet at specific 
 column in the fasta source.
 (因为是大小写敏感的，所以参数<see cref="N:SMRUCC.genomics.SequenceModel.FASTA"/>里面的所有的序列数据都必须是大写的)
 </summary>
 <param name="Fasta"></param>
 <param name="p">The column number.</param>
 <param name="C">Alphabet specific for the frequency statics</param>
 <param name="numOfFasta">The total number of the fasta sequence</param>
 <returns></returns>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Patterns.Variation.Variations.NULL">
 <summary>
 No changes
 </summary>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid">
 <summary>
 Enumerates all of the 20 amino acids.(枚举20种常见的氨基酸)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.NULL">
 <summary>
 用于表示空载的tRNA
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Alanine">
 <summary>
 Ala(A) 丙氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Arginine">
 <summary>
 Arg(R) 精氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Asparagine">
 <summary>
 Asn(N) 天冬酰胺
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.AsparticAcid">
 <summary>
 Asp(D) 天冬氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Cysteine">
 <summary>
 Cys(C) 半胱氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Glutamine">
 <summary>
 Gln(Q) 谷氨酰胺
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.GlutamicAcid">
 <summary>
 Glu(E) 谷氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Glycine">
 <summary>
 Gly(G) 甘氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Histidine">
 <summary>
 His(H) 组氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Isoleucine">
 <summary>
 Ile(I) 异亮氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Leucine">
 <summary>
 Leu(L) 亮氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Lysine">
 <summary>
 Lys(K) 赖氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Methionine">
 <summary>
 Met(M) 甲硫氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Serine">
 <summary>
 Ser(S) 丝氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Phenylalanine">
 <summary>
 Phe(F) 苯丙氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Praline">
 <summary>
 Pro(P) 脯氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Threonine">
 <summary>
 Thr(T) 苏氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Tryptophane">
 <summary>
 TrP(W) 色氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Tyrosine">
 <summary>
 Tyr(Y) 酪氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.Valine">
 <summary>
 Val(V) 结氨酸
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.StopCode">
 <summary>
 终止密码子
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid.InitCode">
 <summary>
 起始密码子
 </summary>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcidObjUtility.AminoAcidLetters">
 <summary>
 enumerates all amino acid chars
 </summary>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.Polypeptides.Polypeptide">
 <summary>
 Protein polypeptide sequence.(蛋白质多肽链的一些相关操作)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Polypeptides.Polypeptide.ConstructVector(System.String)">
 <summary>
 将蛋白质序列字符串转换为氨基酸残基的向量
 </summary>
 <param name="prot$"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Polypeptides.Polypeptide.ToString(System.Collections.Generic.IEnumerable{SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid})">
 <summary>
 Convert <see cref="T:SMRUCC.genomics.SequenceModel.Polypeptides.AminoAcid"/> enum values to character string
 </summary>
 <param name="aa"></param>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.Polypeptides.Polypeptide.ToChar">
 <summary>
 值的氨基酸字符都是大写的
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.Polypeptides.Polypeptide.ToEnums">
 <summary>
 键名字符应该是大写的字母
 </summary>
 <returns></returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.Polypeptides.Polypeptide.MEGASchema">
 <summary>
 Protein sequence display color schema from MEGA software.(MEGA软件的显示蛋白质序列的残基颜色)
 </summary>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.Polypeptides.Polypeptide.GetCompositionVector(System.Char[])">
 <summary>
 Get the composition vector of this polypeptide sequence.
 </summary>
 <param name="Seq">全部必须为大写字母</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.Polypeptides.Polypeptide.Abbreviate">
 <summary>
 大小写不敏感
 </summary>
 <returns></returns>
</member>
<member name="T:SMRUCC.genomics.SequenceModel.TypeExtensions">
 <summary>
 Extensions helper function for different type of bio-sequence.
 </summary>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.TypeExtensions.NT">
 <summary>
 Enumeration for nucleotide residues
 </summary>
 <returns>[ATGC]</returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.TypeExtensions.RNA">
 <summary>
 
 </summary>
 <returns>[AUGC]</returns>
</member>
<member name="P:SMRUCC.genomics.SequenceModel.TypeExtensions.AA">
 <summary>
 Enumeration for amino acid.
 </summary>
 <returns></returns>
 <remarks>
 X is unknown amino acid inside a sequence
 </remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.TypeExtensions.AA_CHARS_ALL">
 <summary>
 Enumerate all of the amino acid.(字符串常量枚举所有的氨基酸分子)
 </summary>
 <remarks></remarks>
</member>
<member name="F:SMRUCC.genomics.SequenceModel.TypeExtensions.NA_CHARS_ALL">
 <summary>
 Enumerate all of the nucleotides.(字符串常量枚举所有的核苷酸分子类型)
 </summary>
 <remarks></remarks>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.TypeExtensions.GetVector(SMRUCC.genomics.SequenceModel.SeqTypes)">
 <summary>
 Get composition vector by sequence type flag
 </summary>
 <param name="seq"></param>
 <returns></returns>
 
</member>
<member name="M:SMRUCC.genomics.SequenceModel.TypeExtensions.GetSeqType(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel)">
 <summary>
 try to measure the sequence type based on the given sequence chars
 </summary>
 <param name="seq"></param>
 <returns></returns>
</member>
<member name="M:SMRUCC.genomics.SequenceModel.TypeExtensions.IsProteinSource(SMRUCC.genomics.SequenceModel.IPolymerSequenceModel)">
 <summary>
 目标序列数据是否为一条蛋白质序列
 </summary>
 <param name="seq"></param>
 <returns></returns>
 <remarks></remarks>
</member>
</members>
</doc>
