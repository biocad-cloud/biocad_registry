<?xml version="1.0"?>
<doc>
<assembly>
<name>
BioNovoGene.BioDeep.Chemistry.XrefEngine
</name>
</assembly>
<members>
<member name="T:BioNovoGene.BioDeep.Chemistry.MetaLib.AnnotationWorkspace">
 <summary>
 The temp workspace file of the biodeep annotation pipeline
 </summary>
</member>
<member name="F:BioNovoGene.BioDeep.Chemistry.MetaLib.AnnotationWorkspace.libraries">
 <summary>
 summary of the library result count
 </summary>
</member>
<member name="P:BioNovoGene.BioDeep.Chemistry.MetaLib.AnnotationWorkspace.file">
 <summary>
 try to get the file path of the pack file
 </summary>
 <returns></returns>
 <remarks>
 file path value could be nothing when the data pack is in readonly mode.
 </remarks>
</member>
<member name="M:BioNovoGene.BioDeep.Chemistry.MetaLib.AnnotationWorkspace.#ctor(System.IO.Stream,System.String,System.Int64,System.Nullable{System.Boolean})">
 <summary>
 construct of the <see cref="T:BioNovoGene.BioDeep.MSEngine.AnnotationPack"/> file reader/writer
 </summary>
 <param name="file"></param>
 <param name="source_file"></param>
</member>
<member name="M:BioNovoGene.BioDeep.Chemistry.MetaLib.AnnotationWorkspace.LoadMemory">
 <summary>
 Load in-memory data pack from the pack file stream
 </summary>
 <returns></returns>
</member>
<member name="M:BioNovoGene.BioDeep.Chemistry.MetaLib.AnnotationWorkspace.LoadPeakTable">
 <summary>
 load ms1 peaktable data
 </summary>
 <returns></returns>
</member>
<member name="M:BioNovoGene.BioDeep.Chemistry.MetaLib.AnnotationWorkspace.CacheXicTable``1(System.Collections.Generic.IEnumerable{``0},System.Double,System.Double)">
 <summary>
 Extract the XIC cache data from a given set of rawdata objects based on 
 the peaktable information inside the workspace file
 </summary>
 <param name="files"></param>
 <param name="mass_da">
 the mass error window for extract the ms1 scatter data for the peak ion
 </param>
 <param name="rt_win">
 the rt window size for extract the XIC peak data for the peak ion
 </param>
</member>
<member name="M:BioNovoGene.BioDeep.Chemistry.MetaLib.AnnotationWorkspace.CacheXicTable``1(``0,System.Double,System.Double)">
 <summary>
 Make cache xic data from a given raw data file
 </summary>
 <typeparam name="mzPack"></typeparam>
 <param name="file"></param>
 <param name="mass_da"></param>
 <param name="rt_win"></param>
</member>
<member name="M:BioNovoGene.BioDeep.Chemistry.MetaLib.AnnotationWorkspace.CheckXicCache">
 <summary>
 Check of the xic cache data is existed inside current workspace file
 </summary>
 <returns></returns>
</member>
<member name="M:BioNovoGene.BioDeep.Chemistry.MetaLib.AnnotationWorkspace.LoadXicGroup(System.String)">
 <summary>
 load xic data from cache pool
 </summary>
 <param name="ion"></param>
 <returns></returns>
</member>
<member name="M:BioNovoGene.BioDeep.Chemistry.MetaLib.AnnotationWorkspace.SetPeakTable(System.Collections.Generic.IEnumerable{BioNovoGene.Analytical.MassSpectrometry.Math.xcms2})">
 <summary>
 save xcms peaktable to pack file
 </summary>
 <param name="peaks"></param>
 <remarks>
 the peaktable data has been commit to the filesystem automatically in this method.
 </remarks>
</member>
<member name="M:BioNovoGene.BioDeep.Chemistry.MetaLib.AnnotationWorkspace.Flush">
 <summary>
 Commit the memory cache data into filesystem
 </summary>
</member>
<member name="M:BioNovoGene.BioDeep.Chemistry.MetaLib.AnnotationWorkspace.Dispose">
 <summary>
 save the annotation result workspace
 </summary>
</member>
<member name="P:BioNovoGene.BioDeep.Chemistry.MetaLib.ChemOntClassify.kingdom">
 <summary>
 level 1
 </summary>
 <returns></returns>
</member>
<member name="P:BioNovoGene.BioDeep.Chemistry.MetaLib.ChemOntClassify.superClass">
 <summary>
 level 2
 </summary>
 <returns></returns>
</member>
<member name="P:BioNovoGene.BioDeep.Chemistry.MetaLib.ChemOntClassify.class">
 <summary>
 level 3
 </summary>
 <returns></returns>
</member>
<member name="P:BioNovoGene.BioDeep.Chemistry.MetaLib.ChemOntClassify.subClass">
 <summary>
 level 4
 </summary>
 <returns></returns>
</member>
<member name="M:BioNovoGene.BioDeep.Chemistry.MetaLib.ChemOntClassify.#ctor(System.String)">
 <summary>
 
 </summary>
 <param name="obo">The file path of ``ChemOnt_2_1.obo``</param>
</member>
<member name="M:BioNovoGene.BioDeep.Chemistry.MetaLib.ChemOntClassify.FilterByLevel(System.Collections.Generic.IEnumerable{BioNovoGene.BioDeep.Chemistry.MetaLib.ClassyfireAnnotation},System.Int32)">
 <summary>
 将对应分类层次等级的注释分类信息取出来
 </summary>
 <param name="anno"></param>
 <param name="level%"></param>
 <returns></returns>
</member>
<member name="M:BioNovoGene.BioDeep.Chemistry.MetaLib.ChemOntClassify.termsByLevel(System.Int32)">
 <summary>
 Get terms by level on tree
 </summary>
 <param name="level"></param>
 <returns></returns>
</member>
<member name="T:BioNovoGene.BioDeep.Chemistry.MetaLib.ClassyfireAnnotation">
 <summary>
 Parser for file download from https://jcheminf.biomedcentral.com/articles/10.1186/s13321-016-0174-y
 </summary>
</member>
<member name="P:BioNovoGene.BioDeep.Chemistry.MetaLib.ClassyfireAnnotation.CompoundID">
 <summary>
 Compound id in given database.
 </summary>
 <returns></returns>
</member>
<member name="P:BioNovoGene.BioDeep.Chemistry.MetaLib.ClassyfireAnnotation.ChemOntID">
 <summary>
 分类的term id
 </summary>
 <returns></returns>
</member>
<member name="P:BioNovoGene.BioDeep.Chemistry.MetaLib.ClassyfireInfoTable.CompoundID">
 <summary>
 Compound id in given database.
 </summary>
 <returns></returns>
</member>
<member name="T:BioNovoGene.BioDeep.Chemistry.MetaLib.FillClass">
 <summary>
 因为在这里填充数据是直接进行的,所以structure而言是值类型,只能够修改函数之中的副本,所以在这个模块之中,类型参数都必须要限制为引用类型
 </summary>
</member>
<member name="M:BioNovoGene.BioDeep.Chemistry.MetaLib.FillClass.ClassyfireFillerLambda``1(System.Collections.Generic.IEnumerable{BioNovoGene.BioDeep.Chemistry.MetaLib.ClassyfireAnnotation},BioNovoGene.BioDeep.Chemistry.MetaLib.ChemOntClassify,System.Func{``0,System.String})">
 <summary>
 构建出一个信息填充表达式, 即分子的注释信息传递进入函数, 然后函数尝试填充<see cref="T:BioNovoGene.BioDeep.Chemoinformatics.ICompoundClass"/>物质结构分类信息后返回原始对象的引用
 </summary>
 <typeparam name="cpd"></typeparam>
 <param name="anno"></param>
 <param name="classifyObo"></param>
 <param name="getKey"></param>
 <returns></returns>
</member>
<member name="T:BioNovoGene.BioDeep.Chemistry.MetaLib.LocalRepository">
 <summary>
 read only metabolite annotation information data repository
 </summary>
 <remarks>
 implements of <see cref="T:BioNovoGene.BioDeep.MSEngine.IMetaDb"/>, use the <see cref="T:BioNovoGene.BioDeep.Chemistry.MetaLib.RepositoryWriter"/> for create the annotation database.
 </remarks>
</member>
<member name="F:BioNovoGene.BioDeep.Chemistry.MetaLib.LocalRepository.s">
 <summary>
 the repository file stream data
 </summary>
</member>
<member name="F:BioNovoGene.BioDeep.Chemistry.MetaLib.LocalRepository.mapping">
 <summary>
 used for mapping from reference id to metabolite id
 </summary>
</member>
<member name="M:BioNovoGene.BioDeep.Chemistry.MetaLib.LocalRepository.GetMetadata(System.String)">
 <summary>
 
 </summary>
 <param name="uniqueId"></param>
 <returns>the metabolite annotation data model <see cref="T:BioNovoGene.BioDeep.Chemistry.MetaLib.Models.MetaLib"/>.</returns>
</member>
<member name="T:BioNovoGene.BioDeep.Chemistry.MetaLib.RepositoryWriter">
 <summary>
 the data writer for <see cref="T:BioNovoGene.BioDeep.Chemistry.MetaLib.LocalRepository"/>.
 </summary>
</member>
</members>
</doc>
