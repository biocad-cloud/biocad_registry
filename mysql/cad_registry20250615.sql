-- MySQL Script generated by MySQL Workbench
-- Sun Jun 15 13:03:05 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema cad_registry
-- -----------------------------------------------------
-- A database about the biological components
DROP SCHEMA IF EXISTS `cad_registry` ;

-- -----------------------------------------------------
-- Schema cad_registry
--
-- A database about the biological components
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cad_registry` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
SHOW WARNINGS;
USE `cad_registry` ;

-- -----------------------------------------------------
-- Table `complex`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `complex` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `complex` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `molecule_id` INT UNSIGNED NOT NULL COMMENT 'the complex molecule id',
  `component_id` INT UNSIGNED NOT NULL COMMENT 'the component molecule id',
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `note` LONGTEXT COLLATE 'utf8mb3_bin' NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `molecule_info_idx` (`molecule_id` ASC) VISIBLE,
  INDEX `component_info_idx` (`component_id` ASC) VISIBLE)
ENGINE = InnoDB
COMMENT = 'the complex component composition graph data';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `db_xrefs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db_xrefs` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `db_xrefs` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `obj_id` INT UNSIGNED NOT NULL,
  `db_key` INT UNSIGNED NOT NULL,
  `xref` VARCHAR(255) COLLATE 'utf8mb3_bin' NOT NULL,
  `type` INT UNSIGNED NOT NULL COMMENT 'the target type of obj_id that point to, could be molecules, reactions, pathways',
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `unique_dblink` (`obj_id` ASC, `db_key` ASC, `xref` ASC, `type` ASC) VISIBLE,
  INDEX `molecule_id_idx` (`obj_id` ASC) VISIBLE,
  INDEX `db_name_idx` (`db_key` ASC) VISIBLE,
  INDEX `object_type_idx` (`type` ASC) VISIBLE,
  INDEX `find_xrefs` (`type` ASC, `xref` ASC) VISIBLE,
  INDEX `dbid_index` (`xref` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 31057711;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `genomics`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `genomics` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `genomics` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `db_xref` VARCHAR(45) NULL DEFAULT NULL COMMENT 'ncbi genbank accession id of current genomics sequence',
  `ncbi_taxid` INT UNSIGNED NOT NULL COMMENT 'the ncbi taxonomy id',
  `biom_string` VARCHAR(4096) NULL DEFAULT 'NA',
  `def` MEDIUMTEXT COLLATE 'utf8mb3_bin' NOT NULL COMMENT 'definition and description about this genome',
  `nt` LONGTEXT CHARACTER SET 'utf8mb3' NOT NULL COMMENT 'DNA sequence data',
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `comment` LONGTEXT COLLATE 'utf8mb3_bin' NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `taxonomy_index` (`ncbi_taxid` ASC) VISIBLE,
  INDEX `accession_index` (`db_xref` ASC) INVISIBLE,
  FULLTEXT INDEX `search_text` (`def`, `comment`) VISIBLE)
ENGINE = InnoDB
COMMENT = 'genome nucleotide sequence data pool, the genomics dna sequence is another kind of marcro molecule.';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `kinetic_law`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kinetic_law` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `kinetic_law` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `db_xref` VARCHAR(64) NOT NULL COMMENT 'the external reference id of current kinetics lambda model',
  `params` JSON NOT NULL COMMENT 'parameter set of the current kinetics lambda epxression, in json string format',
  `lambda` MEDIUMTEXT CHARACTER SET 'utf8mb3' NOT NULL COMMENT 'the lambda math expression of the kinetics',
  `temperature` DOUBLE NOT NULL DEFAULT '37' COMMENT 'temperature of the enzyme catalytic kinetics',
  `pH` DOUBLE UNSIGNED NOT NULL DEFAULT '7.5' COMMENT 'pH of the enzyme catalytic kinetics',
  `buffer` MEDIUMTEXT COLLATE 'utf8mb3_bin' NULL DEFAULT NULL COMMENT 'the buffer environment of the enzyme test',
  `substrate_id` INT UNSIGNED NOT NULL COMMENT 'id reference to the metabolite molecule',
  `uniprot` VARCHAR(45) CHARACTER SET 'utf8mb3' NULL DEFAULT NULL COMMENT 'the uniprot id of the current enzyme model, the kinetics parameter is associated with a specific molecule instance. could be missing',
  `ec_number` VARCHAR(128) NOT NULL DEFAULT '-' COMMENT 'the enzyme ec_number reference id of the molecule function record',
  `json_str` JSON NOT NULL COMMENT 'the raw json string data of current kinetics data',
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `note` LONGTEXT COLLATE 'utf8mb3_bin' NULL DEFAULT NULL COMMENT 'description note text about current enzyme kinetics lambda model',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `regulation_id_idx` (`ec_number` ASC) VISIBLE,
  INDEX `xrefs_index` (`db_xref` ASC) VISIBLE,
  INDEX `ph_filter` (`pH` ASC) VISIBLE,
  INDEX `temperature_filter` (`temperature` ASC) VISIBLE,
  INDEX `uniprot_index` (`uniprot` ASC) VISIBLE,
  INDEX `substrate_molecule_idx` (`substrate_id` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 35204
COMMENT = 'the enzymatic catalytic kinetics lambda model';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mesh`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mesh` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `mesh` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `mesh_term` VARCHAR(255) NOT NULL,
  `molecule_id` INT UNSIGNED NOT NULL DEFAULT 0,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `molecule_data_idx` (`molecule_id` ASC) VISIBLE)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mesh_link`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mesh_link` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `mesh_link` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `mesh_id` INT UNSIGNED NOT NULL,
  `pubmed_id` INT UNSIGNED NOT NULL,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `pubmed_data_idx` (`pubmed_id` ASC) VISIBLE,
  INDEX `mesh_name_idx` (`mesh_id` ASC) VISIBLE)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `molecule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `molecule` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `molecule` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `xref_id` VARCHAR(255) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_unicode_ci' NOT NULL COMMENT 'the source external reference id of current molecule, for a gene should be a locus_tag, and protein should be a main uniprot accession id and for metabolite should be pubchem cid or chebi id(255 chars for long metacyc id)',
  `name` VARCHAR(512) NOT NULL COMMENT 'the name of the molecule',
  `mass` DOUBLE NOT NULL COMMENT 'the molecular exact mass',
  `type` INT UNSIGNED NOT NULL COMMENT 'the molecule type, the id of the vocabulary term, value could be nucl(DNA), RNA, prot, metabolite, complex, dna_motif_sequence, protein_motif_sequence',
  `formula` VARCHAR(128) NOT NULL COMMENT 'metabolite formula or nucl/prot sequence',
  `parent` INT UNSIGNED NOT NULL COMMENT 'the parent metabolite id, example as RNA is a parent of polypeptide, and gene is a parent of RNA sequence.',
  `tax_id` INT UNSIGNED NULL DEFAULT NULL COMMENT 'the ncbi taxonomy id of current molecule that belongs to, apply for the protein/gene. this relationship data is extract from the genbank/uniprot annotation source directly',
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'add time of current molecular entity',
  `note` LONGTEXT NULL DEFAULT NULL COMMENT 'description text about current entity object',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) INVISIBLE,
  INDEX `data_type_idx` (`type` ASC) VISIBLE,
  INDEX `parent_molecule_idx` (`parent` ASC) VISIBLE,
  INDEX `name_index` (`name` ASC) VISIBLE,
  INDEX `xref_index` (`xref_id` ASC) VISIBLE,
  INDEX `mass_filter` (`mass` ASC) VISIBLE,
  INDEX `find_index` (`xref_id` ASC, `type` ASC) VISIBLE,
  INDEX `taxonomy_info_idx` (`tax_id` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 1052704
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_unicode_ci
COMMENT = 'The molecular entity object inside a cell';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `molecule_function`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `molecule_function` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `molecule_function` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `molecule_id` INT UNSIGNED NOT NULL COMMENT 'the molecule id, usually be the protein/complex molecule id',
  `regulation_term` INT UNSIGNED NOT NULL COMMENT 'the id of the term in regulation_graph table',
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `note` LONGTEXT COLLATE 'utf8mb3_bin' NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `molecule_entity_idx` (`molecule_id` ASC) VISIBLE,
  INDEX `regulation_info_idx` (`regulation_term` ASC) VISIBLE)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `molecule_ontology`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `molecule_ontology` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `molecule_ontology` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `molecule_id` INT UNSIGNED NOT NULL,
  `ontology_id` INT UNSIGNED NOT NULL,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `evidence` VARCHAR(8192) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `molecule_obj_idx` (`molecule_id` ASC) VISIBLE,
  INDEX `ontology_term_idx` (`ontology_id` ASC) VISIBLE)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `molecule_tags`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `molecule_tags` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `molecule_tags` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `tag_id` INT UNSIGNED NOT NULL COMMENT 'id reference to the vocabulary table, the topic tag about the molecule, example tags as: pathogenicity,toxic,drug',
  `molecule_id` INT UNSIGNED NOT NULL,
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `description` LONGTEXT COLLATE 'utf8mb3_bin' NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `check_label` (`tag_id` ASC, `molecule_id` ASC) VISIBLE,
  INDEX `filter_tag` (`tag_id` ASC) VISIBLE,
  INDEX `filter_obj` (`molecule_id` ASC) VISIBLE)
ENGINE = InnoDB
COMMENT = 'keywords, tags, labels of the molecule entity';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ncbi_taxonomy`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ncbi_taxonomy` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ncbi_taxonomy` (
  `id` INT UNSIGNED NOT NULL COMMENT 'ncbi tax id, not auto incremental',
  `taxname` VARCHAR(255) NOT NULL,
  `nsize` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'size of the child nodes',
  `parent_id` INT UNSIGNED NULL DEFAULT NULL,
  `rank` INT UNSIGNED NOT NULL,
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `description` LONGTEXT COLLATE 'utf8mb3_bin' NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `match_name` (`taxname` ASC) VISIBLE,
  INDEX `find_parent` (`parent_id` ASC) VISIBLE,
  INDEX `check_leaf_node` (`nsize` ASC) INVISIBLE,
  FULLTEXT INDEX `search_name_text` (`taxname`, `description`) VISIBLE,
  INDEX `rank_level_idx` (`rank` ASC) VISIBLE)
ENGINE = InnoDB
COMMENT = 'the ncbi taxonomy tree information';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `odor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `odor` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `odor` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `molecule_id` INT UNSIGNED NOT NULL COMMENT 'the metabolite molecule reference id',
  `category` INT UNSIGNED NOT NULL COMMENT 'odor category vocabulary term of this odor term',
  `odor` VARCHAR(255) COLLATE 'utf8mb3_bin' NULL DEFAULT NULL COMMENT 'the odor term',
  `hashcode` VARCHAR(32) COLLATE 'utf8mb3_bin' NOT NULL COMMENT 'md5 hashcode index of the odor term',
  `value` DOUBLE NOT NULL DEFAULT '0',
  `unit` INT UNSIGNED NOT NULL,
  `text` TEXT COLLATE 'utf8mb3_bin' NOT NULL COMMENT 'the raw text of the text mining of the odor term',
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `odor_term_index` (`odor` ASC) VISIBLE,
  INDEX `class_index` (`category` ASC) VISIBLE,
  INDEX `mol_index` (`molecule_id` ASC) VISIBLE,
  INDEX `check_odor` (`molecule_id` ASC, `category` ASC, `odor` ASC) VISIBLE,
  FULLTEXT INDEX `search_text` (`text`) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 69396
COMMENT = 'odor information about the metabolite molecules';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ontology`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ontology` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ontology` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `db_xref` VARCHAR(64) NOT NULL,
  `db_source` INT UNSIGNED NOT NULL,
  `rank` INT UNSIGNED NOT NULL DEFAULT 0 COMMENT 'the rank level name of current ontology name, default value zero means no rank level data for current ontology term',
  `name` VARCHAR(255) NOT NULL,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `description` LONGTEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `find_ontology_term` (`db_xref` ASC, `db_source` ASC, `rank` ASC) VISIBLE,
  INDEX `filter_rank` (`rank` ASC) VISIBLE,
  INDEX `db_sourcename_idx` (`db_source` ASC) VISIBLE)
ENGINE = InnoDB
COMMENT = 'molecule ontology class';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ontology_tree`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ontology_tree` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ontology_tree` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `ontology_id` INT UNSIGNED NOT NULL,
  `is_a` INT UNSIGNED NOT NULL COMMENT 'ontology is_a parent id',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `ontology_term_idx` (`ontology_id` ASC) VISIBLE,
  INDEX `link_term_idx` (`is_a` ASC) VISIBLE)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `pathway`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pathway` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `pathway` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `xref_id` VARCHAR(45) NULL DEFAULT NULL COMMENT 'the external reference id of the pathway',
  `source_dbkey` INT UNSIGNED NOT NULL COMMENT 'the vocabulary term reference id to the external database name of this pathway object where is comes from',
  `name` VARCHAR(1024) COLLATE 'utf8mb3_bin' NOT NULL COMMENT 'the pathway name',
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `note` LONGTEXT COLLATE 'utf8mb3_bin' NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  INDEX `source_name_idx` (`source_dbkey` ASC) VISIBLE)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `pathway_graph`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pathway_graph` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `pathway_graph` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `pathway_id` INT UNSIGNED NOT NULL,
  `entity_id` INT UNSIGNED NOT NULL COMMENT 'the reference id of the molecule entity that inside the current pathway object',
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `note` LONGTEXT COLLATE 'utf8mb3_bin' NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `pathway_info_idx` (`pathway_id` ASC) VISIBLE,
  INDEX `molecule_data_idx` (`entity_id` ASC) VISIBLE)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `pubmed`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pubmed` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `pubmed` (
  `id` INT UNSIGNED NOT NULL COMMENT 'the pubmed id of the article',
  `authors` MEDIUMTEXT NULL,
  `title` MEDIUMTEXT NULL,
  `journal` VARCHAR(255) NULL,
  `year` INT UNSIGNED NOT NULL DEFAULT 1900,
  `citation` VARCHAR(255) NOT NULL DEFAULT '-',
  `doi` VARCHAR(100) NOT NULL DEFAULT '-',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `affil` LONGTEXT NULL,
  `abstract` LONGTEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `pubmed_source`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pubmed_source` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `pubmed_source` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `molecule_id` INT UNSIGNED NOT NULL,
  `pubmed_id` INT UNSIGNED NOT NULL,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  `note` MEDIUMTEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `pubmed_data_idx` (`pubmed_id` ASC) VISIBLE,
  INDEX `molecule_data_idx` (`molecule_id` ASC) VISIBLE)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `reaction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reaction` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `reaction` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `db_xref` VARCHAR(64) NOT NULL COMMENT 'the reference id of this reaction model from the external source database',
  `source_dbkey` INT UNSIGNED NOT NULL COMMENT 'the source database name reference vocabulary term index',
  `name` VARCHAR(1024) COLLATE 'utf8mb3_bin' NOT NULL COMMENT 'name of current reaction model',
  `equation` MEDIUMTEXT COLLATE 'utf8mb3_bin' NOT NULL COMMENT 'reaction equation of current reaction model',
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `note` LONGTEXT COLLATE 'utf8mb3_bin' NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `db_xref_UNIQUE` (`db_xref` ASC) VISIBLE,
  INDEX `source_database_idx` (`source_dbkey` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 65720
COMMENT = 'the definition of the biological reaction process';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `reaction_graph`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reaction_graph` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `reaction_graph` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `reaction` INT UNSIGNED NOT NULL COMMENT 'the id of the reaction',
  `molecule_id` INT UNSIGNED NOT NULL COMMENT 'the id of the molecule entity',
  `db_xref` VARCHAR(255) COLLATE 'utf8mb3_bin' NOT NULL COMMENT 'the reaction source definition of the molecule to reference the molecule entity inside biocad registry, used for link the molecule entity with current relationship record ',
  `role` INT UNSIGNED NOT NULL COMMENT 'the vocabulary term of the molecule role inside this reaction model, usually be the substrate or product',
  `factor` DOUBLE NOT NULL DEFAULT '1',
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `note` LONGTEXT COLLATE 'utf8mb3_bin' NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) INVISIBLE,
  INDEX `reaction_info_idx` (`reaction` ASC) VISIBLE,
  INDEX `molecule_data_idx` (`molecule_id` ASC) VISIBLE,
  INDEX `role_term_idx` (`role` ASC) VISIBLE,
  INDEX `check_duplicated` (`reaction` ASC, `db_xref` ASC, `role` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 227925
COMMENT = 'the relationship between the reaction model and molecule objects';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `regulation_graph`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `regulation_graph` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `regulation_graph` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `term` VARCHAR(128) NOT NULL COMMENT 'usually be the EC number for general model or molecule object reference name',
  `role` INT UNSIGNED NOT NULL COMMENT 'the regulation role type of the entity object, for ec_number this could be the enzymatic catalysis function, for other small molecule metabolite, this function may be the activity suppression',
  `reaction_id` INT UNSIGNED NOT NULL COMMENT 'the id reference to the reaction table',
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `note` LONGTEXT COLLATE 'utf8mb3_bin' NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `term`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) INVISIBLE,
  INDEX `role_term_idx` (`role` ASC) VISIBLE,
  INDEX `reaction_process_idx` (`reaction_id` ASC) VISIBLE,
  INDEX `search_term` (`term` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 36533
COMMENT = 'the enzyme associates with the reactions';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sequence_graph`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sequence_graph` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sequence_graph` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `molecule_id` INT UNSIGNED NOT NULL COMMENT 'the molecule reference id inside biocad registry system',
  `sequence` LONGTEXT NOT NULL COMMENT 'the molecule sequence data, for metabolite should be the SMILES structure string data, gene should be the nucleotide sequence data and protein should be the polypeptide sequence.',
  `hashcode` CHAR(32) COLLATE 'utf8mb3_bin' NOT NULL COMMENT 'md5 hashcode of the sequence data string',
  `morgan` LONGTEXT NULL COMMENT 'base64 encoded morgan fingerprint of the k-mer(k=3) graph of the sequence, or the morgan fingerprint of the metabolite molecular structure data',
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `molecules_idx` (`molecule_id` ASC) VISIBLE,
  INDEX `search_sequence` (`hashcode` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 1034407
COMMENT = 'the sequence composition data of the molecule';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `subcellular_compartments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subcellular_compartments` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `subcellular_compartments` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `compartment_name` VARCHAR(1024) COLLATE 'utf8mb3_bin' NOT NULL,
  `topology` VARCHAR(1024) COLLATE 'utf8mb3_bin' NULL DEFAULT NULL,
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `note` LONGTEXT COLLATE 'utf8mb3_bin' NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `compartment_name_UNIQUE` (`compartment_name` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 99
COMMENT = 'defines the subcellular compartments';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `subcellular_location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subcellular_location` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `subcellular_location` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `compartment_id` INT UNSIGNED NOT NULL,
  `obj_id` INT UNSIGNED NOT NULL,
  `entity` INT UNSIGNED NOT NULL COMMENT 'the vocabulary type id of the entity object, could be molecule, reaction or pathways',
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `note` LONGTEXT COLLATE 'utf8mb3_bin' NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `unique_reference` (`compartment_id` ASC, `obj_id` ASC, `entity` ASC) INVISIBLE,
  INDEX `subcellular_compartments_idx` (`compartment_id` ASC) VISIBLE,
  INDEX `molecule_obj_idx` (`obj_id` ASC) VISIBLE,
  INDEX `link_entity_type_idx` (`entity` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 507106
COMMENT = 'associates the subcellular_compartments and the molecule objects';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `synonym`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `synonym` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `synonym` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `obj_id` INT UNSIGNED NOT NULL,
  `type_id` INT UNSIGNED NOT NULL COMMENT 'type reference of the target object, a vocabulary term reference to the vocabulary table',
  `hashcode` VARCHAR(32) NOT NULL COMMENT 'md5 hashcode of the synonym field lower case string ',
  `synonym` VARCHAR(4096) NOT NULL,
  `lang` VARCHAR(8) NOT NULL DEFAULT 'en',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `filter_type` (`type_id` ASC) INVISIBLE,
  INDEX `filter_obj` (`obj_id` ASC) VISIBLE)
ENGINE = InnoDB
COMMENT = 'synonym names of the biocad registry object, example as: molecules, genomes, taxonomys, reactions, pathways';

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `taxonomy_source`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taxonomy_source` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `taxonomy_source` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `molecule_id` INT UNSIGNED NOT NULL,
  `ncbi_taxid` INT UNSIGNED NOT NULL,
  `doi` VARCHAR(128) NOT NULL DEFAULT '-',
  `add_time` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `molecule_data_idx` (`molecule_id` ASC) VISIBLE,
  INDEX `taxonomy_data_idx` (`ncbi_taxid` ASC) VISIBLE)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `taxonomy_tree`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taxonomy_tree` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `taxonomy_tree` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `tax_id` INT UNSIGNED NOT NULL,
  `child_tax` INT UNSIGNED NOT NULL,
  `add_time` DATETIME NOT NULL DEFAULT now(),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `tax_node_parent_idx` (`tax_id` ASC) VISIBLE,
  INDEX `tax_node_child_idx` (`child_tax` ASC) VISIBLE)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `vocabulary`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vocabulary` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `vocabulary` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `category` VARCHAR(32) COLLATE 'utf8mb3_bin' NOT NULL,
  `term` VARCHAR(255) COLLATE 'utf8mb3_bin' NOT NULL,
  `color` VARCHAR(8) COLLATE 'utf8mb3_bin' NOT NULL DEFAULT '#000000' COMMENT 'the html color code, example as #ffffff',
  `add_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `note` LONGTEXT COLLATE 'utf8mb3_bin' NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `search_term` (`category` ASC, `term` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 163;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
